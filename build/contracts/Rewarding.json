{
  "contractName": "Rewarding",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimStakingReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "initialized",
          "type": "address"
        }
      ],
      "name": "ExecProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "enum Voting.ProposalType",
          "name": "votingType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum Voting.ProposalUpdater",
          "name": "votingUpdater",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quorumPct",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supportPct",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        }
      ],
      "name": "NewProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "option",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "name": "OnVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum Voting.ProposalUpdater",
          "name": "updater",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quorumPct",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supportPct",
          "type": "uint256"
        }
      ],
      "name": "UpdatedProposalConfig",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableToCreateProposals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "ballotOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "countOptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isAvailable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "minStaked",
          "type": "uint256"
        }
      ],
      "name": "createProposalAvailability",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "execProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNewestProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "enum Voting.ProposalType",
          "name": "votingType",
          "type": "uint8"
        },
        {
          "internalType": "enum Voting.ProposalUpdater",
          "name": "votingUpdater",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "issueDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minAmountToCreate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "string[]",
          "name": "options",
          "type": "string[]"
        },
        {
          "internalType": "enum Voting.ProposalUpdater",
          "name": "votingUpdater",
          "type": "uint8"
        }
      ],
      "name": "newMultiProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        },
        {
          "internalType": "enum Voting.ProposalUpdater",
          "name": "votingUpdater",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "updateData",
          "type": "string"
        }
      ],
      "name": "newProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "option",
          "type": "uint256"
        }
      ],
      "name": "optionInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "option",
          "type": "uint256"
        }
      ],
      "name": "optionName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_value",
          "type": "string"
        }
      ],
      "name": "parseInt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_ret",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "proposalConfig",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quorumPct",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supportPct",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "voters",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "updateData",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Voting.ProposalUpdater",
          "name": "conf",
          "type": "uint8"
        }
      ],
      "name": "proposalConfigRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "quorumPct",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supportPct",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        }
      ],
      "name": "proposalInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "enum Voting.ProposalType",
          "name": "votingType",
          "type": "uint8"
        },
        {
          "internalType": "enum Voting.ProposalUpdater",
          "name": "votingUpdater",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "nay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "yea",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "hasQuorum",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "expiryTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "bytes4",
          "name": "option",
          "type": "bytes4"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "option",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "weightOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "option",
          "type": "uint256"
        }
      ],
      "name": "weightedVoteCountsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rewardAddress",
          "type": "address"
        }
      ],
      "name": "setRewardAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "claimReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimStakingReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initialized\",\"type\":\"address\"}],\"name\":\"ExecProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"enum Voting.ProposalType\",\"name\":\"votingType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Voting.ProposalUpdater\",\"name\":\"votingUpdater\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quorumPct\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supportPct\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"name\":\"NewProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"OnVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum Voting.ProposalUpdater\",\"name\":\"updater\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quorumPct\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supportPct\",\"type\":\"uint256\"}],\"name\":\"UpdatedProposalConfig\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableToCreateProposals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ballotOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"countOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isAvailable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minStaked\",\"type\":\"uint256\"}],\"name\":\"createProposalAvailability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"execProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNewestProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"enum Voting.ProposalType\",\"name\":\"votingType\",\"type\":\"uint8\"},{\"internalType\":\"enum Voting.ProposalUpdater\",\"name\":\"votingUpdater\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"issueDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmountToCreate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"options\",\"type\":\"string[]\"},{\"internalType\":\"enum Voting.ProposalUpdater\",\"name\":\"votingUpdater\",\"type\":\"uint8\"}],\"name\":\"newMultiProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"},{\"internalType\":\"enum Voting.ProposalUpdater\",\"name\":\"votingUpdater\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"updateData\",\"type\":\"string\"}],\"name\":\"newProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"}],\"name\":\"optionInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"}],\"name\":\"optionName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_ret\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"proposalConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorumPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supportPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voters\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"updateData\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Voting.ProposalUpdater\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"proposalConfigRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quorumPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supportPct\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"}],\"name\":\"proposalInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"enum Voting.ProposalType\",\"name\":\"votingType\",\"type\":\"uint8\"},{\"internalType\":\"enum Voting.ProposalUpdater\",\"name\":\"votingUpdater\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"nay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yea\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasQuorum\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expiryTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"}],\"name\":\"setRewardAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"option\",\"type\":\"bytes4\"}],\"name\":\"vote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"weightOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"option\",\"type\":\"uint256\"}],\"name\":\"weightedVoteCountsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/pirat/Desktop/DAO/contracts/DAO/Rewarding.sol\":\"Rewarding\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/pirat/Desktop/DAO/contracts/DAO/Managing.sol\":{\"keccak256\":\"0x526433042c3e0fafdd94f8858e570358c0b6503aabdda4c1a4292bc675878271\",\"urls\":[\"bzz-raw://18945fde27dd1980a26b71c1f7f580b31267dc5db927321901eed32a22b1055a\",\"dweb:/ipfs/QmWFJAKMBrusPFqUxFDxXCgHxx2YvEZvkKSmXHDQ2jZwcL\"]},\"/home/pirat/Desktop/DAO/contracts/DAO/Rewarding.sol\":{\"keccak256\":\"0xe95062efabd527b6019992753b75b23ed8f78ed42126c8c54cc7733a8a074064\",\"urls\":[\"bzz-raw://51a8e28447bd62542d2ee3b5bbe0b586d3c3ef3c22c51050cba7fc8fa995ecea\",\"dweb:/ipfs/QmSPkqqivbh8DXXYHvmi64DiVZUFj9qhyLfVVPSB9LbXHt\"]},\"/home/pirat/Desktop/DAO/contracts/DAO/Voting.sol\":{\"keccak256\":\"0x8b8afbb171e8bf50c93ba0bacbf62dc353eef7762e729efe26c268ba1a532330\",\"urls\":[\"bzz-raw://ad82093bda83cbe89eb765163099fa9187c434a3cf5622c316e518dea1f4be79\",\"dweb:/ipfs/QmTMqa1pXskQPHNdwxYpukeEKxt6kA9rtH3tsiB7bwLxPD\"]},\"/home/pirat/Desktop/DAO/contracts/ICitadelDaoTransport.sol\":{\"keccak256\":\"0x5dd412170a7ec44f9f2058a86d96c580b74422a9aa0d30f9adf9da9d2d259b67\",\"urls\":[\"bzz-raw://2fe25210ea5ad374c75cb9805dbd91702084abaaed60fb75ccedf90b50f645b0\",\"dweb:/ipfs/QmUk9vDNRgs6Kvafa34UztmuPEtzk49EgrAM2UF2HVuS1o\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\",\"urls\":[\"bzz-raw://f40d4c72c7f8dfdfb9fd048de5d3ece0020dfcd057b29f0630fd703e7fbe7301\",\"dweb:/ipfs/QmSw7Q9JVVbVDWwVbaJjHhkPmTm8GF3nwVTZUfnmPqTdNm\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102275760003560e01c806375b238fc11610130578063ae092e89116100b8578063e0136a791161007c578063e0136a79146104a7578063eaac697a146104bf578063f0464a2b146104d2578063f2fde38b146104e5578063f6621dc3146104f857610227565b8063ae092e891461043f578063b384abef14610466578063ca15c87314610479578063d547741f1461048c578063d7eefea11461049f57610227565b80638e0a1372116100ff5780638e0a1372146103eb5780639010d07c146103fe57806391d1485414610411578063933c130614610424578063a217fddf1461043757610227565b806375b238fc146103b3578063761bbd8a146103bb5780638935ced5146103c35780638da5cb5b146103d657610227565b80634883a6a8116101b35780635e00e679116101825780635e00e6791461035f578063637a2e36146103725780636e6a1dc3146103855780637048027514610398578063715018a6146103ab57610227565b80634883a6a8146102f75780634ba241d8146103175780634c461f5a1461033957806353c2d4791461034c57610227565b806331aab888116101fa57806331aab8881461029257806332ec991c146102b657806336568abe146102c957806342346c5e146102dc57806346c6211e146102ef57610227565b806312a70f0b1461022c5780631e01a1721461024a578063248a9ca31461026a5780632f2ff15d1461027d575b600080fd5b610234610519565b6040516102419190614474565b60405180910390f35b61025d610258366004613fe3565b610530565b60405161024191906144f0565b610234610278366004613fe3565b61060e565b61029061028b366004613ffb565b610626565b005b6102a56102a0366004613fe3565b61066e565b604051610241959493929190614436565b6102346102c43660046142ac565b6106b0565b6102906102d7366004613ffb565b61070f565b6102346102ea366004614203565b610751565b6102346107e0565b61030a6103053660046142d8565b6107e7565b6040516102419190614469565b61032a610325366004614035565b6108d3565b60405161024193929190614562565b610290610347366004613fb4565b610a0b565b61029061035a366004614071565b610a70565b61029061036d366004613f99565b611158565b61029061038036600461414c565b6111af565b610234610393366004614035565b6117dd565b6102906103a6366004613f99565b611846565b61029061189b565b61023461191a565b610234611926565b6102346103d13660046142ac565b61192c565b6103de611987565b6040516102419190614409565b61030a6103f9366004614308565b611996565b6103de61040c366004614035565b611b2c565b61030a61041f366004613ffb565b611b53565b610290610432366004613fe3565b611b71565b61023461216c565b61045261044d366004613fe3565b612171565b604051610241989796959493929190614503565b61030a610474366004614035565b6121d5565b610234610487366004613fe3565b6125d2565b61029061049a366004613ffb565b6125e9565b61030a612623565b6104af6126ff565b6040516102419493929190614cdd565b61025d6104cd366004614035565b6127cd565b6102346104e0366004613fe3565b6128ec565b6102906104f3366004613f99565b612934565b61050b610506366004614056565b6129ea565b604051610241929190614d1d565b604051610525906143dc565b604051809103902081565b60608160008111801561054557506004548111155b61056a5760405162461bcd60e51b8152600401610561906147c6565b60405180910390fd5b6000838152600360209081526040918290206002908101805484516001821615610100026000190190911692909204601f8101849004840283018401909452838252909290918301828280156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b5050505050915050919050565b6000818152600160205260409020600201545b919050565b6000828152600160205260409020600201546106449061041f612a46565b6106605760405162461bcd60e51b815260040161056190614600565b61066a8282612a4a565b5050565b600080600080606061067e613ceb565b61068787612ab9565b8051602082015160408301516060840151608090940151929b919a509850919650945092505050565b6000826000811180156106c557506004548111155b6106e15760405162461bcd60e51b8152600401610561906147c6565b6001600160a01b038316600090815260076020908152604080832087845290915290205491505b5092915050565b610717612a46565b6001600160a01b0316816001600160a01b0316146107475760405162461bcd60e51b815260040161056190614c4d565b61066a8282612ec9565b80516000908290600190600019015b82518110156107d857603083828151811061077757fe5b016020015160f81c108015906107a15750603983828151811061079657fe5b016020015160f81c11155b6107a757fe5b8160308483815181106107b657fe5b016020015160f81c0360ff16029390930192600a919091029060001901610760565b505050919050565b6006545b90565b6000826000811180156107fc57506004548111155b6108185760405162461bcd60e51b8152600401610561906147c6565b6279656160e81b626e617960e81b6001600160e01b0319851682148061084a57506001600160e01b0319858116908216145b6108665760405162461bcd60e51b815260040161056190614c9c565b60008681526003602081905260408220015460ff16600181111561088657fe5b146108a35760405162461bcd60e51b81526004016105619061486f565b60006001600160e01b031986811690841614156108be575060015b6108c88782612f38565b979650505050505050565b6060600080846000811180156108eb57506004548111155b6109075760405162461bcd60e51b8152600401610561906147c6565b60008681526003602052604090206008015485106109375760405162461bcd60e51b8152600401610561906149e9565b600086815260036020526040812060080180548790811061095457fe5b60009182526020918290206003919091020180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252919350918391908301828280156109ed5780601f106109c2576101008083540402835291602001916109ed565b820191906000526020600020905b8154815290600101906020018083116109d057829003601f168201915b50505050509450806001015493508060020154925050509250925092565b610a28604051610a1a906143dc565b604051809103902033611b53565b80610a3d5750610a3d604051610a1a906143f3565b610a595760405162461bcd60e51b815260040161056190614b97565b6005805460ff191692151592909217909155600655565b610a7f604051610a1a906143dc565b80610a945750610a94604051610a1a906143f3565b15610ddd5786610ab65760405162461bcd60e51b815260040161056190614bd9565b428411610ad55760405162461bcd60e51b815260040161056190614686565b60018211610af55760405162461bcd60e51b815260040161056190614782565b60048054600101908190556000908152600360205260409020610b16613d23565b60086000846003811115610b2657fe5b60ff16815260208082019290925260409081016000208151808301909252805482526001908101549282019290925283546001600160a01b031916331784559150610b749083018b8b613d3d565b50610b83600283018989613d3d565b508051600583015560208101516007830155600982018690556003808301805460ff1916600117808255859261ff001990911690610100908490811115610bc657fe5b021790555060005b84811015610d8f576000846003811115610be457fe5b14610c9a57610c7e84878784818110610bf957fe5b602002820190508035601e1936849003018112610c1557600080fd5b9091016020810191503567ffffffffffffffff811115610c3457600080fd5b36819003821315610c4457600080fd5b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061323a92505050565b610c9a5760405162461bcd60e51b815260040161056190614970565b826008016040518060600160405280888885818110610cb557fe5b602002820190508035601e1936849003018112610cd157600080fd5b9091016020810191503567ffffffffffffffff811115610cf057600080fd5b36819003821315610d0057600080fd5b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060208083018290526040909201819052835460018101855593815281902082518051939460030290910192610d6e9284920190613dbb565b50602082015160018083019190915560409092015160029091015501610bce565b506001336001600160a01b0316600454600080516020614d4e8339815191528d8d88876000015188602001518e604051610dce9695949392919061449b565b60405180910390a4505061114e565b60055460ff161561113657600254604051632c9aab9b60e11b81526000916001600160a01b031690635935573690610e19903390600401614409565b60206040518083038186803b158015610e3157600080fd5b505afa158015610e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e699190810190614294565b905060065481106111345787610e915760405162461bcd60e51b815260040161056190614bd9565b428511610eb05760405162461bcd60e51b815260040161056190614686565b60018311610ed05760405162461bcd60e51b815260040161056190614782565b60048054600101908190556000908152600360205260409020610ef1613d23565b60086000856003811115610f0157fe5b60ff16815260208082019290925260409081016000208151808301909252805482526001908101549282019290925283546001600160a01b031916331784559150610f4f9083018c8c613d3d565b50610f5e600283018a8a613d3d565b508051600583015560208101516007830155600982018790556003808301805460ff1916600117808255869261ff001990911690610100908490811115610fa157fe5b021790555060005b858110156110e5576000856003811115610fbf57fe5b14610ff057610fd485888884818110610bf957fe5b610ff05760405162461bcd60e51b815260040161056190614970565b82600801604051806060016040528089898581811061100b57fe5b602002820190508035601e193684900301811261102757600080fd5b9091016020810191503567ffffffffffffffff81111561104657600080fd5b3681900382131561105657600080fd5b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505050602080830182905260409092018190528354600181018555938152819020825180519394600302909101926110c49284920190613dbb565b50602082015160018083019190915560409092015160029091015501610fa9565b506001336001600160a01b0316600454600080516020614d4e8339815191528e8e89876000015188602001518f6040516111249695949392919061449b565b60405180910390a450505061114e565b505b60405162461bcd60e51b815260040161056190614b97565b5050505050505050565b611160612a46565b6000546001600160a01b0390811691161461118d5760405162461bcd60e51b815260040161056190614aab565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6111be604051610a1a906143dc565b806111d357506111d3604051610a1a906143f3565b1561148f57866111f55760405162461bcd60e51b815260040161056190614bd9565b4284116112145760405162461bcd60e51b815260040161056190614686565b60048054600101908190556000908152600360205260409020611235613d23565b6008600086600381111561124557fe5b60ff16815260208082019290925260409081016000208151808301909252805482526001908101549282019290925283546001600160a01b0319163317845591506112939083018b8b613d3d565b506112a2600283018989613d3d565b508051600583015560208101516007830155600982018690556003808301805460ff1981168255879261ffff19909116906101009084908111156112e257fe5b021790555060008560038111156112f557fe5b146113665761133a8585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061323a92505050565b6113565760405162461bcd60e51b815260040161056190614970565b611364600483018585613d3d565b505b6040805160a081018252600360608201818152626e617960e81b6080840152825260006020808401829052938301819052600886018054600181018255908252908490208351805194959290930201926113c39284920190613dbb565b50602082810151600180840191909155604093840151600290930192909255825160a0810184526003606082018181526279656160e81b608084015282526000828401819052948201859052600887018054948501815585529382902081518051929594909402019261143a928492910190613dbb565b50602082015160018201556040909101516002909101556000336001600160a01b0316600454600080516020614d4e8339815191528d8d8a876000015188602001518e604051610dce9695949392919061449b565b60055460ff161561113657600254604051632c9aab9b60e11b81526000916001600160a01b0316906359355736906114cb903390600401614409565b60206040518083038186803b1580156114e357600080fd5b505afa1580156114f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061151b9190810190614294565b9050600654811061113457876115435760405162461bcd60e51b815260040161056190614bd9565b4285116115625760405162461bcd60e51b815260040161056190614686565b60048054600101908190556000908152600360205260409020611583613d23565b6008600087600381111561159357fe5b60ff16815260208082019290925260409081016000208151808301909252805482526001908101549282019290925283546001600160a01b0319163317845591506115e19083018c8c613d3d565b506115f0600283018a8a613d3d565b508051600583015560208101516007830155600982018790556003808301805460ff1981168255889261ffff199091169061010090849081111561163057fe5b0217905550600086600381111561164357fe5b146116b4576116888686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061323a92505050565b6116a45760405162461bcd60e51b815260040161056190614970565b6116b2600483018686613d3d565b505b6040805160a081018252600360608201818152626e617960e81b6080840152825260006020808401829052938301819052600886018054600181018255908252908490208351805194959290930201926117119284920190613dbb565b50602082810151600180840191909155604093840151600290930192909255825160a0810184526003606082018181526279656160e81b6080840152825260008284018190529482018590526008870180549485018155855293829020815180519295949094020192611788928492910190613dbb565b50602082015160018201556040909101516002909101556000336001600160a01b0316600454600080516020614d4e8339815191528e8e8b876000015188602001518f6040516111249695949392919061449b565b6000826000811180156117f257506004548111155b61180e5760405162461bcd60e51b8152600401610561906147c6565b600084815260036020526040902060080180548490811061182b57fe5b90600052602060002090600302016001015491505092915050565b61184e612a46565b6000546001600160a01b0390811691161461187b5760405162461bcd60e51b815260040161056190614aab565b61189860405161188a906143f3565b604051809103902082610660565b50565b6118a3612a46565b6000546001600160a01b039081169116146118d05760405162461bcd60e51b815260040161056190614aab565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b604051610525906143f3565b60045490565b60008260008111801561194157506004548111155b61195d5760405162461bcd60e51b8152600401610561906147c6565b50506001600160a01b03166000908152600760209081526040808320938352929052206001015490565b6000546001600160a01b031690565b6000605a4286106119b95760405162461bcd60e51b815260040161056190614ae0565b80864203106119da5760405162461bcd60e51b815260040161056190614842565b336000908152600a602052604090205442038110611a0a5760405162461bcd60e51b8152600401610561906146ce565b611a4c87878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061348d92505050565b611a685760405162461bcd60e51b8152600401610561906148ee565b336000818152600a6020526040908190204290556002549051637cc5857960e01b81526001600160a01b0390911691637cc5857991611aac91908b9060040161441d565b600060405180830381600087803b158015611ac657600080fd5b505af1158015611ada573d6000803e3d6000fd5b50505050336001600160a01b03167fb52d0e0c45bba15833f7d429ccdcc4c2bfa8eea764774706120027b76734a44f88604051611b179190614474565b60405180910390a25060019695505050505050565b6000828152600160205260408120611b4a908363ffffffff61350616565b90505b92915050565b6000828152600160205260408120611b4a908363ffffffff61351216565b611b79613e29565b611b8282613527565b9050611b8c613ceb565b611b9583612ab9565b80519091506001600160a01b0316331480611bba5750611bba604051610a1a906143dc565b80611bcf5750611bcf604051610a1a906143f3565b611beb5760405162461bcd60e51b815260040161056190614b97565b600082604001516003811115611bfd57fe5b1415611c1b5760405162461bcd60e51b815260040161056190614c06565b428260e0015110611c3e5760405162461bcd60e51b815260040161056190614b17565b600082602001516001811115611c5057fe5b1415611c77578160c00151611c775760405162461bcd60e51b8152600401610561906147fd565b6060600183602001516001811115611c8b57fe5b1415611eae5760008080805b600088815260036020526040902060080154811015611dd057611cb8613e73565b6000898152600360205260409020600801805483908110611cd557fe5b600091825260209182902060408051600393909302909101805460026001821615610100026000190190911604601f8101859004909402830160809081019092526060830184815292939092849290918491840182828015611d785780601f10611d4d57610100808354040283529160200191611d78565b820191906000526020600020905b815481529060010190602001808311611d5b57829003601f168201915b505050505081526020016001820154815260200160028201548152505090508381604001511115611db6578194508060400151935060009250611dc7565b8381604001511415611dc757600192505b50600101611c97565b508015611def5760405162461bcd60e51b81526004016105619061474b565b6000878152600360205260409020600801805484908110611e0c57fe5b6000918252602091829020600390910201805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015611e9f5780601f10611e7457610100808354040283529160200191611e9f565b820191906000526020600020905b815481529060010190602001808311611e8257829003601f168201915b50505050509350505050611eb5565b5060808101515b600183604001516003811115611ec757fe5b1415611f52576000611ed882610751565b60025460405163aa6b3f1160e01b81529192506103e8808404929083028403916001600160a01b03169063aa6b3f1190611f189085908590600401614d1d565b600060405180830381600087803b158015611f3257600080fd5b505af1158015611f46573d6000803e3d6000fd5b50505050505050612139565b600283604001516003811115611f6457fe5b1415611f7b57611f7381610751565b600655612139565b600383604001516003811115611f8d57fe5b14156121395760408051600180825281830190925282916060919060208201818038833950506040805160068082528183019092529293506060929150602082018180388339505060408051600680825281830190925292935060609291506020820181803883390190505090508351600d1461200957600080fd5b60005b84518110156120d457600181101561205f578460008151811061202b57fe5b602001015160f81c60f81b8460008151811061204357fe5b60200101906001600160f81b031916908160001a9053506120cc565b600781101561208e5784818151811061207457fe5b602001015160f81c60f81b83600183038151811061204357fe5b84818151811061209a57fe5b602001015160f81c60f81b8260078303815181106120b457fe5b60200101906001600160f81b031916908160001a9053505b60010161200c565b5060006120e083610751565b905060006120ed83610751565b90506040518060400160405280838152602001828152506008600061211188610751565b60ff168152602080820192909252604001600020825181559101516001909101555050505050505b604051339085907f3776071a1b606e078d8aec141249d4c30abe813f5e6752afe84d0c6a25f1388b90600090a350505050565b600081565b60606000806000806000806000612186613e29565b61218f8a613527565b905080600001519850806020015197508060400151965080606001519550806080015194508060a0015193508060c0015192508060e00151915050919395975091939597565b6000826000811180156121ea57506004548111155b6122065760405162461bcd60e51b8152600401610561906147c6565b61220e613e94565b60008581526003602090815260409182902082516101a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f81018690048602830186019096528582529194929385810193919291908301828280156122c75780601f1061229c576101008083540402835291602001916122c7565b820191906000526020600020905b8154815290600101906020018083116122aa57829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156123595780601f1061232e57610100808354040283529160200191612359565b820191906000526020600020905b81548152906001019060200180831161233c57829003601f168201915b5050509183525050600382015460209091019060ff16600181111561237a57fe5b600181111561238557fe5b81526020016003820160019054906101000a900460ff1660038111156123a757fe5b60038111156123b257fe5b815260048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156124405780601f1061241557610100808354040283529160200191612440565b820191906000526020600020905b81548152906001019060200180831161242357829003601f168201915b50505050508152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016007820154815260200160088201805480602002602001604051908101604052809291908181526020016000905b828210156125725760008481526020908190206040805160038602909201805460026001821615610100026000190190911604601f81018590049094028301608090810190925260608301848152929390928492909184918401828280156125465780601f1061251b57610100808354040283529160200191612546565b820191906000526020600020905b81548152906001019060200180831161252957829003601f168201915b50505050508152602001600182015481526020016002820154815250508152602001906001019061249d565b50505050815260200160098201548152602001600a8201548152602001600b8201548152505090508381610120015151116125bf5760405162461bcd60e51b8152600401610561906149e9565b6125c98585612f38565b95945050505050565b6000818152600160205260408120611b4d90613a17565b6000828152600160205260409020600201546126079061041f612a46565b6107475760405162461bcd60e51b815260040161056190614a19565b6000612634604051610a1a906143dc565b806126495750612649604051610a1a906143f3565b15612656575060016107e4565b60055460ff16156126f957600254604051632c9aab9b60e11b81526000916001600160a01b031690635935573690612692903390600401614409565b60206040518083038186803b1580156126aa57600080fd5b505afa1580156126be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126e29190810190614294565b905060065481106126f75760019150506107e4565b505b50600090565b6004546000818152600360209081526040808320600190810180548351600293821615610100026000190190911692909204601f81018590048502830185019093528282526060949384939083018282801561279c5780601f106127715761010080835404028352916020019161279c565b820191906000526020600020905b81548152906001019060200180831161277f57829003601f168201915b505050600087815260036020819052604090912001549697929660ff80821697506101009091041694509192505050565b6060826000811180156127e257506004548111155b6127fe5760405162461bcd60e51b8152600401610561906147c6565b600084815260036020526040902060080154831061282e5760405162461bcd60e51b8152600401610561906149e9565b600084815260036020526040902060080180548490811061284b57fe5b6000918252602091829020600390910201805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156128de5780601f106128b3576101008083540402835291602001916128de565b820191906000526020600020905b8154815290600101906020018083116128c157829003601f168201915b505050505091505092915050565b60008160008111801561290157506004548111155b61291d5760405162461bcd60e51b8152600401610561906147c6565b505060009081526003602052604090206008015490565b61293c612a46565b6000546001600160a01b039081169116146129695760405162461bcd60e51b815260040161056190614aab565b6001600160a01b03811661298f5760405162461bcd60e51b815260040161056190614705565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080600860008460038111156129fd57fe5b60ff1660ff16815260200190815260200160002060000154915060086000846003811115612a2757fe5b60ff1660ff168152602001908152602001600020600101549050915091565b3390565b6000828152600160205260409020612a68908263ffffffff613a2216565b1561066a57612a75612a46565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b612ac1613ceb565b81600081118015612ad457506004548111155b612af05760405162461bcd60e51b8152600401610561906147c6565b612af8613e94565b60008481526003602090815260409182902082516101a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f8101869004860283018601909652858252919492938581019391929190830182828015612bb15780601f10612b8657610100808354040283529160200191612bb1565b820191906000526020600020905b815481529060010190602001808311612b9457829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015612c435780601f10612c1857610100808354040283529160200191612c43565b820191906000526020600020905b815481529060010190602001808311612c2657829003601f168201915b5050509183525050600382015460209091019060ff166001811115612c6457fe5b6001811115612c6f57fe5b81526020016003820160019054906101000a900460ff166003811115612c9157fe5b6003811115612c9c57fe5b815260048201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015612d2a5780601f10612cff57610100808354040283529160200191612d2a565b820191906000526020600020905b815481529060010190602001808311612d0d57829003601f168201915b50505050508152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016007820154815260200160088201805480602002602001604051908101604052809291908181526020016000905b82821015612e5c5760008481526020908190206040805160038602909201805460026001821615610100026000190190911604601f8101859004909402830160809081019092526060830184815292939092849290918491840182828015612e305780601f10612e0557610100808354040283529160200191612e30565b820191906000526020600020905b815481529060010190602001808311612e1357829003601f168201915b505050505081526020016001820154815260200160028201548152505081526020019060010190612d87565b505050908252506009820154602080830191909152600a830154604080840191909152600b9093015460609283015283516001600160a01b0316875260c084015190870152610100830151918601919091526101808201519085015260a001516080840152509092915050565b6000828152600160205260409020612ee7908263ffffffff613a3716565b1561066a57612ef4612a46565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082600081118015612f4d57506004548111155b612f695760405162461bcd60e51b8152600401610561906147c6565b60008481526003602052604090206009810154421115612f8d576000925050610708565b600254604051632c9aab9b60e11b815233916000916001600160a01b0390911690635935573690612fc2908590600401614409565b60206040518083038186803b158015612fda57600080fd5b505afa158015612fee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130129190810190614294565b9050600081116130345760405162461bcd60e51b815260040161056190614925565b6001600160a01b03821660009081526007602090815260408083208a8452909152902060010154156130785760405162461bcd60e51b8152600401610561906148b7565b60408051808201825287815260208082018481526001600160a01b0386166000908152600783528481208c8252909252929020905181559051600191820155600b840180549091019055600a8301805482019055600883018054879081106130dc57fe5b9060005260206000209060030201600101600081548092919060010191905055508083600801878154811061310d57fe5b6000918252602090912060026003909202010180549091019055600683015460ff166131ea576002546040805163ca5c7b9160e01b815290516000926001600160a01b03169163ca5c7b91916004808301926020929190829003018186803b15801561317857600080fd5b505afa15801561318c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131b09190810190614294565b600a850154909150620186a00260008282816131c857fe5b049050856005015481106131e65760068601805460ff191660011790555b5050505b85826001600160a01b0316887f8eea3a81425aea5e440ed6b6289a8aea0db8025c75fdeb1434bd816501770340846040516132259190614474565b60405180910390a45060019695505050505050565b60008083600381111561324957fe5b141561325757506001611b4d565b600183600381111561326557fe5b141561328f57600061327683610751565b6103e8808204908102909103016064149150611b4d9050565b600283600381111561329d57fe5b14156132b95760006132ae83610751565b15159150611b4d9050565b60038360038111156132c757fe5b14156134845781518290600d146132dd57600080fd5b604080516001808252818301909252606091602082018180388339505060408051600680825281830190925292935060609291506020820181803883395050604080516006808252818301909252929350606092915060208201818038833901905050905060005b845181101561340d576001811015613398578460008151811061336457fe5b602001015160f81c60f81b8460008151811061337c57fe5b60200101906001600160f81b031916908160001a905350613405565b60078110156133c7578481815181106133ad57fe5b602001015160f81c60f81b83600183038151811061337c57fe5b8481815181106133d357fe5b602001015160f81c60f81b8260078303815181106133ed57fe5b60200101906001600160f81b031916908160001a9053505b600101613345565b50600061341983610751565b9050600061342683610751565b90506000808311801561343c5750620186a08311155b905080801561344b5750600082115b801561345a5750620186a08211155b90508080156134755750600361346f87610751565b60ff1611155b9750611b4d9650505050505050565b50600092915050565b6000803386866040516020016134a5939291906143b2565b6040516020818303038152906040528051906020012090508084146134dc5760405162461bcd60e51b815260040161056190614b60565b6009546001600160a01b03166134f28585613a4c565b6001600160a01b0316149695505050505050565b6000611b4a8383613b7a565b6000611b4a836001600160a01b038416613bbf565b61352f613e29565b8160008111801561354257506004548111155b61355e5760405162461bcd60e51b8152600401610561906147c6565b613566613e94565b60008481526003602090815260409182902082516101a08101845281546001600160a01b03168152600180830180548651600261010094831615949094026000190190911692909204601f810186900486028301860190965285825291949293858101939192919083018282801561361f5780601f106135f45761010080835404028352916020019161361f565b820191906000526020600020905b81548152906001019060200180831161360257829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156136b15780601f10613686576101008083540402835291602001916136b1565b820191906000526020600020905b81548152906001019060200180831161369457829003601f168201915b5050509183525050600382015460209091019060ff1660018111156136d257fe5b60018111156136dd57fe5b81526020016003820160019054906101000a900460ff1660038111156136ff57fe5b600381111561370a57fe5b815260048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156137985780601f1061376d57610100808354040283529160200191613798565b820191906000526020600020905b81548152906001019060200180831161377b57829003601f168201915b50505050508152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016007820154815260200160088201805480602002602001604051908101604052809291908181526020016000905b828210156138ca5760008481526020908190206040805160038602909201805460026001821615610100026000190190911604601f810185900490940283016080908101909252606083018481529293909284929091849184018282801561389e5780601f106138735761010080835404028352916020019161389e565b820191906000526020600020905b81548152906001019060200180831161388157829003601f168201915b5050505050815260200160018201548152602001600282015481525050815260200190600101906137f5565b505050908252506009820154602080830191909152600a8301546040830152600b90920154606091820152828201518652820151919250840190600181111561390f57fe5b9081600181111561391c57fe5b90525060808101516040840190600381111561393457fe5b9081600381111561394157fe5b90525061014081015160e080850191909152810151151560a084015260008360200151600181111561396f57fe5b1415613a105780610120015160008151811061398757fe5b6020026020010151604001518360600181815250508061012001516001815181106139ae57fe5b602002602001015160400151836080018181525050428360e001511080156139d757508260a001515b15613a08578061016001518360800151620186a002816139f357fe5b610100830151919004101560c0840152613a10565b600060c08401525b5050919050565b6000611b4d82613bd7565b6000611b4a836001600160a01b038416613bdb565b6000611b4a836001600160a01b038416613c25565b60008151604114613a6f5760405162461bcd60e51b81526004016105619061464f565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115613ac15760405162461bcd60e51b8152600401610561906149a7565b8060ff16601b14158015613ad957508060ff16601c14155b15613af65760405162461bcd60e51b815260040161056190614a69565b600060018783868660405160008152602001604052604051613b1b949392919061447d565b6020604051602081039080840390855afa158015613b3d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116613b705760405162461bcd60e51b815260040161056190614587565b9695505050505050565b81546000908210613b9d5760405162461bcd60e51b8152600401610561906145be565b826000018281548110613bac57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000613be78383613bbf565b613c1d57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611b4d565b506000611b4d565b60008181526001830160205260408120548015613ce15783546000198083019190810190600090879083908110613c5857fe5b9060005260206000200154905080876000018481548110613c7557fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080613ca557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611b4d565b6000915050611b4d565b6040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b604051806040016040528060008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613d7e5782800160ff19823516178555613dab565b82800160010185558215613dab579182015b82811115613dab578235825591602001919060010190613d90565b50613db7929150613f12565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613dfc57805160ff1916838001178555613dab565b82800160010185558215613dab579182015b82811115613dab578251825591602001919060010190613e0e565b604080516101008101909152606081526020810160008152602001600081526020016000815260200160008152602001600015158152602001600015158152602001600081525090565b60405180606001604052806060815260200160008152602001600081525090565b604051806101a0016040528060006001600160a01b03168152602001606081526020016060815260200160006001811115613ecb57fe5b815260200160008152602001606081526020016000815260200160001515815260200160008152602001606081526020016000815260200160008152602001600081525090565b6107e491905b80821115613db75760008155600101613f18565b80356001600160a01b0381168114611b4d57600080fd5b60008083601f840112613f54578182fd5b50813567ffffffffffffffff811115613f6b578182fd5b602083019150836020828501011115613f8357600080fd5b9250929050565b803560048110611b4d57600080fd5b600060208284031215613faa578081fd5b611b4a8383613f2c565b60008060408385031215613fc6578081fd5b82358015158114613fd5578182fd5b946020939093013593505050565b600060208284031215613ff4578081fd5b5035919050565b6000806040838503121561400d578182fd5b8235915060208301356001600160a01b038116811461402a578182fd5b809150509250929050565b60008060408385031215614047578182fd5b50508035926020909101359150565b600060208284031215614067578081fd5b611b4a8383613f8a565b60008060008060008060008060a0898b03121561408c578384fd5b883567ffffffffffffffff808211156140a3578586fd5b6140af8c838d01613f43565b909a50985060208b01359150808211156140c7578586fd5b6140d38c838d01613f43565b909850965060408b0135955060608b01359150808211156140f2578485fd5b818b018c601f820112614103578586fd5b8035925081831115614113578586fd5b8c60208085028301011115614126578586fd5b602001945090925061413d90508a60808b01613f8a565b90509295985092959890939650565b60008060008060008060008060a0898b031215614167578384fd5b883567ffffffffffffffff8082111561417e578586fd5b61418a8c838d01613f43565b909a50985060208b01359150808211156141a2578586fd5b6141ae8c838d01613f43565b909850965060408b0135955060608b01359150600482106141cd578485fd5b90935060808a013590808211156141e2578384fd5b506141ef8b828c01613f43565b999c989b5096995094979396929594505050565b600060208284031215614214578081fd5b813567ffffffffffffffff8082111561422b578283fd5b81840185601f82011261423c578384fd5b803592508183111561424c578384fd5b604051601f8401601f19168101602001838111828210171561426c578586fd5b604052838152818401602001871015614283578485fd5b613b70846020830160208501614d41565b6000602082840312156142a5578081fd5b5051919050565b600080604083850312156142be578182fd5b823591506142cf8460208501613f2c565b90509250929050565b600080604083850312156142ea578182fd5b8235915060208301356001600160e01b03198116811461402a578182fd5b60008060008060006080868803121561431f578283fd5b853594506020860135935060408601359250606086013567ffffffffffffffff81111561434a578182fd5b61435688828901613f43565b969995985093965092949392505050565b60008151808452815b8181101561438c57602081850181015186830182015201614370565b8181111561439d5782602083870101525b50601f01601f19169290920160200192915050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b6a564f54494e475f524f4c4560a81b8152600b0190565b6941444d494e5f524f4c4560b01b8152600a0190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038716825285602083015284604083015283606083015260a060808301526108c860a0830184614367565b901515815260200190565b90815260200190565b93845260ff9290921660208401526040830152606082015260800190565b600060a082528660a0830152868860c08401378060c0888401015260c0601f19601f89011683010190506144ce86614d36565b6020830152846040830152836060830152826080830152979650505050505050565b600060208252611b4a6020830184614367565b60006101008083526145178184018c614367565b91505061452389614d2b565b602083015261453188614d36565b60408301526060820196909652608081019490945291151560a0840152151560c083015260e0909101529392505050565b6000606082526145756060830186614367565b60208301949094525060400152919050565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b60208082526028908201527f566f74696e673a2074696d65206d75737420626520626967676572207468616e6040820152670818dd5c9c995b9d60c21b606082015260800190565b60208082526018908201527f526577617264696e673a20667265657a6520706572696f640000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526019908201527f566f74696e673a206e6f206c656164696e67206f7074696f6e00000000000000604082015260600190565b60208082526024908201527f566f74696e673a206d757374206265206174206c656173742074776f206f7074604082015263696f6e7360e01b606082015260800190565b6020808252601f908201527f566f74696e673a2070726f706f73616c20646f6573206e6f7420657869737400604082015260600190565b60208082526025908201527f566f74696e673a20746869732070726f706f73616c206974206e6f7420616363604082015264195c1d195960da1b606082015260800190565b60208082526013908201527214995dd85c991a5b99ce88195e1c1a5c9a5959606a1b604082015260600190565b60208082526028908201527f566f74696e673a20706c656173652063686f6f736520616e206f7074696f6e206040820152670c4f240d2dcc8caf60c31b606082015260800190565b6020808252601e908201527f566f74696e673a20796f75206861766520616c726561647920766f7465640000604082015260600190565b6020808252601e908201527f526577617264696e673a20696e636f7272656374207369676e61747572650000604082015260600190565b6020808252602b908201527f566f74696e673a20796f75206861766520746f206c6f636b20796f757220746f60408201526a6b656e73206265666f726560a81b606082015260800190565b6020808252601f908201527f566f74696e673a20696e636f7272656374207570646174696e67206461746100604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b602080825260169082015275566f74696e673a206f7574206f6620696e646578657360501b604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f526577617264696e673a20696e636f72726563742074696d657374616d700000604082015260600190565b60208082526029908201527f566f74696e673a20766f74696e6720706572696f64206973206e6f742066696e6040820152681a5cda1959081e595d60ba1b606082015260800190565b60208082526019908201527f526577617264696e673a20696e636f7272656374206861736800000000000000604082015260600190565b60208082526022908201527f566f74696e673a20796f7520646f206e6f742068617665207065726d6973736960408201526137b760f11b606082015260800190565b602080825260139082015272566f74696e673a20656d707479207469746c6560681b604082015260600190565b60208082526027908201527f566f74696e673a20746869732070726f706f73616c206973206e6f742065786560408201526663757461626c6560c81b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60208082526021908201527f566f74696e673a20796f752073686f756c642073617920796561206f72206e616040820152607960f81b606082015260800190565b600085825260806020830152614cf66080830186614367565b9050614d0184614d2b565b6040830152614d0f83614d36565b606083015295945050505050565b918252602082015260400190565b806002811061062157fe5b806004811061062157fe5b8281833750600091015256fea58917be9e97f10d8f5ce9fb9644dc60d5e17d8279c0f60c764344720d2fde7ea2646970667358221220a347bd1a308121ca58fd3490dc87eb3d483fea0d60c6781dfdf6ec0b760882ea64736f6c63430006020033",
  "sourceMap": "203:1445:5:-:0;;;865:17:22;885:12;-1:-1:-1;;;;;885:10:22;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:22;-1:-1:-1;;;;;907:18:22;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:22;940:43;;907:6;;940:43;831:159;527:37:4;397:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;527:13:4;:37;:::i;:::-;574:38;464:24;;;;;;574:38;2962:37:6;;;;;;;;2855:9;2962:37;;;2892:9;2962:37;;;;;;;-1:-1:-1;2911:48:6;;;:16;:48;;;:88;;:48;:88;;;;;3014:69;;2855:9;;2892;-1:-1:-1;3014:69:6;;;;2855:9;;2892;;3014:69;;;;;;;;;;3146:37;;;;;;;;;;;;;;;;;;;3116:25;-1:-1:-1;3093:50:6;:16;:50;;:90;;:50;:90;;;;203:1445:5;;590:104:20;677:10;590:104;:::o;6813:196:21:-;6924:12;;;;:6;:12;;;;;;:22;;;6901:57;;6948:9;;6931:4;;6901:57;;6924:12;6901:57;6968:12;;;;:6;:12;;;;;;:22;;:34;6813:196::o;836:372:-1:-;-1:-1;;;282:34;;266:2;335:12;;1016:192;1215:372;-1:-1;;;638:33;;622:2;690:12;;1395:192;1594:324;787:37;;;1904:2;1889:18;;787:37;1740:2;1725:18;;1711:207;;203:1445:5;;;;;;",
  "deployedSourceMap": "203:1445:5:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;203:1445:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:62:4;;;:::i;:::-;;;;;;;;;;;;;;;;14058:176:6;;;;;;;;;:::i;:::-;;;;;;;;4272:112:21;;;;;;;;;:::i;4634:223::-;;;;;;;;;:::i;:::-;;17110:448:6;;;;;;;;;:::i;:::-;;;;;;;;;;;;15109:167;;;;;;;;;:::i;5808:205:21:-;;;;;;;;;:::i;12353:418:6:-;;;;;;;;;:::i;3196:103::-;;;:::i;13265:497::-;;;;;;;;;:::i;:::-;;;;;;;;14692:411;;;;;;;;;:::i;:::-;;;;;;;;;;3553:300;;;;;;;;;:::i;6021:1786::-;;;;;;;;;:::i;402:121:5:-;;;;;;;;;:::i;4284:1731:6:-;;;;;;;;;:::i;15455:191::-;;;;;;;;;:::i;625:100:4:-;;;;;;;;;:::i;1689:145:22:-;;;:::i;360:60:4:-;;;:::i;13165:94:6:-;;;:::i;15282:167::-;;;;;;;;;:::i;1066:77:22:-;;;:::i;:::-;;;;;;;;529:707:5;;;;;;;;;:::i;3955:136:21:-;;;;;;;;;:::i;2940:137::-;;;;;;;;;:::i;7813:2847:6:-;;;;;;;;;:::i;1717:49:21:-;;;:::i;15652:610:6:-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;13768:284;;;;;;;;;:::i;3245:125:21:-;;;;;;;;;:::i;5091:226::-;;;;;;;;;:::i;3859:419:6:-;;;:::i;12777:382::-;;;:::i;:::-;;;;;;;;;;;14409:277;;;;;;;;;:::i;14240:163::-;;;;;;;;;:::i;1983:240:22:-;;;;;;;;;:::i;3305:242:6:-;;;;;;;;;:::i;:::-;;;;;;;;;426:62:4;464:24;;;;;;;;;;;;;;426:62;:::o;14058:176:6:-;14164:13;14131:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;;;;;;;;;14196:19:::1;::::0;;;:10:::1;:19;::::0;;;;;;;;:31:::1;::::0;;::::1;14189:38:::0;;;;::::1;::::0;::::1;;;;-1:-1:-1::0;;14189:38:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;14196:31;;14189:38;::::1;14196:31:::0;14189:38;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14058:176:::0;;;;:::o;4272:112:21:-;4329:7;4355:12;;;:6;:12;;;;;:22;;;4272:112;;;;:::o;4634:223::-;4725:12;;;;:6;:12;;;;;:22;;;4717:45;;4749:12;:10;:12::i;4717:45::-;4709:105;;;;-1:-1:-1;;;4709:105:21;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;17110:448:6:-;17184:15;17209:14;17233:15;17258:11;17279:24;17320:30;;:::i;:::-;17353:24;17369:7;17353:15;:24::i;:::-;17397:12;;17431:14;;;;17468:15;;;;17502:11;;;;17536:15;;;;;17397:12;;17431:14;;-1:-1:-1;17468:15:6;-1:-1:-1;17502:11:6;;-1:-1:-1;17536:15:6;-1:-1:-1;17110:448:6;-1:-1:-1;;;17110:448:6:o;15109:167::-;15218:4;15185:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;-1:-1:-1;;;;;15241:12:6;::::1;;::::0;;;:6:::1;:12;::::0;;;;;;;:21;;;;;;;;:28;;-1:-1:-1;2250:1:6::1;15109:167:::0;;;;;:::o;5808:205:21:-;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:21;:7;-1:-1:-1;;;;;5894:23:21;;5886:83;;;;-1:-1:-1;;;5886:83:21;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;12353:418:6:-;12542:18;;12438:9;;12492:6;;12518:1;;-1:-1:-1;;12542:20:6;12529:236;12578:11;:18;12574:1;:22;12529:236;;;12649:2;12630:11;12642:1;12630:14;;;;;;;;;;;;;;12624:27;;;;:58;;;12680:2;12661:11;12673:1;12661:14;;;;;;;;;;;;;;12655:27;;12624:58;12617:66;;;;12734:1;12730:2;12712:11;12724:1;12712:14;;;;;;;;;;;;;;12706:26;:21;12705:30;;12697:38;;;;;12752:2;12749:5;;;;;-1:-1:-1;;12598:3:6;12529:236;;;;12353:418;;;;;:::o;3196:103::-;3274:18;;3196:103;;:::o;13265:497::-;13366:4;13333:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;-1:-1:-1;;;;;;;;;;;;13462:13:6;::::1;::::0;::::1;::::0;:30:::1;;-1:-1:-1::0;;;;;;;13479:13:6;;::::1;::::0;;::::1;;13462:30;13454:76;;;;-1:-1:-1::0;;;13454:76:6::1;;;;;;;;;13582:19;13548::::0;;;:10:::1;:19;::::0;;;;;;:30:::1;::::0;::::1;;::::0;:53;::::1;;;;;;;13540:106;;;;-1:-1:-1::0;;;13540:106:6::1;;;;;;;;;13656:13;-1:-1:-1::0;;;;;;13687:13:6;;::::1;::::0;;::::1;;13683:31;;;-1:-1:-1::0;13713:1:6::1;13683:31;13731:24;13737:7;13746:8;13731:5;:24::i;:::-;13724:31:::0;13265:497;-1:-1:-1;;;;;;;13265:497:6:o;14692:411::-;14802:18;14822:13;14837:14;14769:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;14871:19:::1;::::0;;;:10:::1;:19;::::0;;;;:27:::1;;:34:::0;:43;-1:-1:-1;14863:78:6::1;;;;-1:-1:-1::0;;;14863:78:6::1;;;;;;;;;14951:26;14980:19:::0;;;:10:::1;:19;::::0;;;;:27:::1;;:35:::0;;15008:6;;14980:35;::::1;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;::::1;;15025:15:::0;;::::1;::::0;;::::1;;::::0;::::1;;;;-1:-1:-1::0;;15025:15:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;14980:35;;-1:-1:-1;15025:15:6;14980:35;;15025:15;;::::1;14980:35:::0;15025:15;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15058:3;:9;;;15050:17;;15086:3;:10;;;15077:19;;2250:1;14692:411:::0;;;;;;:::o;3553:300::-;3653:32;464:24:4;;;;;;;;;;;;;;3674:10:6;3653:7;:32::i;:::-;:67;;;;3689:31;397:23:4;;;;;;3689:31:6;3645:114;;;;-1:-1:-1;;;3645:114:6;;;;;;;;;3769:23;:37;;-1:-1:-1;;3769:37:6;;;;;;;;;;;3816:18;:30;3553:300::o;6021:1786::-;1725:32;464:24:4;;;;;;1725:32:6;:67;;;;1761:31;397:23:4;;;;;;1761:31:6;1721:119;;;6392:23;6384:55:::1;;;;-1:-1:-1::0;;;6384:55:6::1;;;;;;;;;6686:15;6673:10;:28;6665:81;;;;-1:-1:-1::0;;;6665:81:6::1;;;;;;;;;6781:1;6764:18:::0;::::1;6756:67;;;;-1:-1:-1::0;;;6756:67:6::1;;;;;;;;;6834:15;:17:::0;;::::1;;::::0;;;;:15:::1;6890:27:::0;;;:10:::1;:27;::::0;;;;6927:26:::1;;:::i;:::-;6956:16;:38;6979:13;6973:20;;;;;;;;6956:38;;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;6956:38:6;6927:67;;;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;7005:29;;-1:-1:-1;;;;;;7005:29:6::1;7024:10;7005:29;::::0;;6927:67;-1:-1:-1;7044:22:6::1;::::0;:14;::::1;7061:5:::0;;7044:22:::1;:::i;:::-;-1:-1:-1::0;7076:34:6::1;:20;::::0;::::1;7099:11:::0;;7076:34:::1;:::i;:::-;-1:-1:-1::0;7141:14:6;;7120:18:::1;::::0;::::1;:35:::0;7187:15:::1;::::0;::::1;::::0;7165:19:::1;::::0;::::1;:37:::0;7212:19:::1;::::0;::::1;:32:::0;;;7254:19:::1;::::0;;::::1;:40:::0;;-1:-1:-1;;7254:40:6::1;7276:18;7254:40;::::0;;;7329:13;;-1:-1:-1;;7304:38:6;;::::1;::::0;::::1;::::0;7329:13;;7304:38;::::1;;;;;;;;::::0;;-1:-1:-1;7358:6:6::1;7353:305;7370:18:::0;;::::1;7353:305;;;7430:23;7413:13;:40;;;;;;;;;7409:170;;7481:47;7502:13;7517:7;;7525:1;7517:10;;;;;;;;;::::0;::::1;::::0;-1:-1:-1;30:25;::::1;-1:-1:::0;;100:14:::1;96:29:::0;;::::1;92:48:::0;68:73;::::1;58:2;;155:1;152::::0;145:12:::1;58:2;174:33:::0;;::::1;69:4;55:19:::0;::::1;::::0;-1:-1;16:22:::1;93:18;82:30:::0;::::1;79:2;;;125:1;122::::0;115:12:::1;79:2;155:14;151:38:::0;;::::1;137:53:::0;::::1;134:2;;;203:1;200::::0;193:12:::1;134:2;7481:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;;-1:-1;7481:20:6::1;::::0;-1:-1:-1;;;7481:47:6:i:1;:::-;7473:91;;;;-1:-1:-1::0;;;7473:91:6::1;;;;;;;;;7592:8;:16;;7614:32;;;;;;;;7629:7;;7637:1;7629:10;;;;;;;;;::::0;::::1;::::0;-1:-1:-1;30:25;::::1;-1:-1:::0;;100:14:::1;96:29:::0;;::::1;92:48:::0;68:73;::::1;58:2;;155:1;152::::0;145:12:::1;58:2;174:33:::0;;::::1;69:4;55:19:::0;::::1;::::0;-1:-1;16:22:::1;93:18;82:30:::0;::::1;79:2;;;125:1;122::::0;115:12:::1;79:2;155:14;151:38:::0;;::::1;137:53:::0;::::1;134:2;;;203:1;200::::0;193:12:::1;134:2;7614:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;-1:-1;7614:32:6;;;-1:-1:-1;;;7614:32:6::1;::::0;;::::1;::::0;;;;;;;;;;27:10:-1;;39:1:::1;23:18:::0;::::1;45:23:::0;;7592:55:6;;;;;;;;;;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7592:55:6::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;7390:3:::1;7353:305;;;-1:-1:-1::0;7721:18:6::1;7702:10;-1:-1:-1::0;;;;;7673:127:6::1;7685:15;;-1:-1:-1::0;;;;;;;;;;;7714:5:6::1;;7741:13;7756:4;:14;;;7772:4;:15;;;7789:10;7673:127;;;;;;;;;;;;;;;;;;;;1808:1;;1823:7:::0;;1721:119;1853:23;;;;1849:210;;;1909:6;;:34;;-1:-1:-1;;;1909:34:6;;1892:14;;-1:-1:-1;;;;;1909:6:6;;:22;;:34;;1932:10;;1909:34;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1909:34:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1909:34:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1909:34:6;;;;;;;;;1892:51;;1971:18;;1961:6;:28;1957:92;;6392:23;6384:55:::1;;;;-1:-1:-1::0;;;6384:55:6::1;;;;;;;;;6686:15;6673:10;:28;6665:81;;;;-1:-1:-1::0;;;6665:81:6::1;;;;;;;;;6781:1;6764:18:::0;::::1;6756:67;;;;-1:-1:-1::0;;;6756:67:6::1;;;;;;;;;6834:15;:17:::0;;::::1;;::::0;;;;:15:::1;6890:27:::0;;;:10:::1;:27;::::0;;;;6927:26:::1;;:::i;:::-;6956:16;:38;6979:13;6973:20;;;;;;;;6956:38;;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;6956:38:6;6927:67;;;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;7005:29;;-1:-1:-1;;;;;;7005:29:6::1;7024:10;7005:29;::::0;;6927:67;-1:-1:-1;7044:22:6::1;::::0;:14;::::1;7061:5:::0;;7044:22:::1;:::i;:::-;-1:-1:-1::0;7076:34:6::1;:20;::::0;::::1;7099:11:::0;;7076:34:::1;:::i;:::-;-1:-1:-1::0;7141:14:6;;7120:18:::1;::::0;::::1;:35:::0;7187:15:::1;::::0;::::1;::::0;7165:19:::1;::::0;::::1;:37:::0;7212:19:::1;::::0;::::1;:32:::0;;;7254:19:::1;::::0;;::::1;:40:::0;;-1:-1:-1;;7254:40:6::1;7276:18;7254:40;::::0;;;7329:13;;-1:-1:-1;;7304:38:6;;::::1;::::0;::::1;::::0;7329:13;;7304:38;::::1;;;;;;;;::::0;;-1:-1:-1;7358:6:6::1;7353:305;7370:18:::0;;::::1;7353:305;;;7430:23;7413:13;:40;;;;;;;;;7409:170;;7481:47;7502:13;7517:7;;7525:1;7517:10;;;;;;7481:47;7473:91;;;;-1:-1:-1::0;;;7473:91:6::1;;;;;;;;;7592:8;:16;;7614:32;;;;;;;;7629:7;;7637:1;7629:10;;;;;;;;;::::0;::::1;::::0;-1:-1:-1;30:25;::::1;-1:-1:::0;;100:14:::1;96:29:::0;;::::1;92:48:::0;68:73;::::1;58:2;;155:1;152::::0;145:12:::1;58:2;174:33:::0;;::::1;69:4;55:19:::0;::::1;::::0;-1:-1;16:22:::1;93:18;82:30:::0;::::1;79:2;;;125:1;122::::0;115:12:::1;79:2;155:14;151:38:::0;;::::1;137:53:::0;::::1;134:2;;;203:1;200::::0;193:12:::1;134:2;7614:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;-1:-1;7614:32:6;;;-1:-1:-1;;;7614:32:6::1;::::0;;::::1;::::0;;;;;;;;;;27:10:-1;;39:1:::1;23:18:::0;::::1;45:23:::0;;7592:55:6;;;;;;;;;;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7592:55:6::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;7390:3:::1;7353:305;;;-1:-1:-1::0;7721:18:6::1;7702:10;-1:-1:-1::0;;;;;7673:127:6::1;7685:15;;-1:-1:-1::0;;;;;;;;;;;7714:5:6::1;;7741:13;7756:4;:14;;;7772:4;:15;;;7789:10;7673:127;;;;;;;;;;;;;;;;;;;;2009:1;;2028:7:::0;;;1957:92;1849:210;;2068:44;;-1:-1:-1;;;2068:44:6;;;;;;;;6021:1786;;;;;;;;;:::o;402:121:5:-;1280:12:22;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:22;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;;;480:20:5::1;:36:::0;;-1:-1:-1;;;;;;480:36:5::1;-1:-1:-1::0;;;;;480:36:5;;;::::1;::::0;;;::::1;::::0;;402:121::o;4284:1731:6:-;1725:32;464:24:4;;;;;;1725:32:6;:67;;;;1761:31;397:23:4;;;;;;1761:31:6;1721:119;;;4651:23;4643:55:::1;;;;-1:-1:-1::0;;;4643:55:6::1;;;;;;;;;4945:15;4932:10;:28;4924:81;;;;-1:-1:-1::0;;;4924:81:6::1;;;;;;;;;5016:15;:17:::0;;::::1;;::::0;;;;:15:::1;5072:27:::0;;;:10:::1;:27;::::0;;;;5109:26:::1;;:::i;:::-;5138:16;:38;5161:13;5155:20;;;;;;;;5138:38;;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;5138:38:6;5109:67;;;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;5187:29;;-1:-1:-1;;;;;;5187:29:6::1;5206:10;5187:29;::::0;;5109:67;-1:-1:-1;5226:22:6::1;::::0;:14;::::1;5243:5:::0;;5226:22:::1;:::i;:::-;-1:-1:-1::0;5258:34:6::1;:20;::::0;::::1;5281:11:::0;;5258:34:::1;:::i;:::-;-1:-1:-1::0;5323:14:6;;5302:18:::1;::::0;::::1;:35:::0;5369:15:::1;::::0;::::1;::::0;5347:19:::1;::::0;::::1;:37:::0;5394:19:::1;::::0;::::1;:32:::0;;;5436:19:::1;::::0;;::::1;:41:::0;;-1:-1:-1;;5436:41:6;::::1;::::0;;5512:13;;-1:-1:-1;;5487:38:6;;;;::::1;::::0;5512:13;;5487:38;::::1;;;;;;;;::::0;;-1:-1:-1;5557:23:6::1;5540:13;:40;;;;;;;;;5536:208;;5604:47;5625:13;5640:10;;5604:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;;-1:-1;5604:20:6::1;::::0;-1:-1:-1;;;5604:47:6:i:1;:::-;5596:91;;;;-1:-1:-1::0;;;5596:91:6::1;;;;;;;;;5701:32;:19;::::0;::::1;5723:10:::0;;5701:32:::1;:::i;:::-;;5536:208;5776:27;::::0;;;;;;;::::1;;::::0;::::1;::::0;;;-1:-1:-1;;;5776:27:6;;;;;;-1:-1:-1;5776:27:6::1;::::0;;::::1;::::0;;;;;;;;;5754:16:::1;::::0;::::1;27:10:-1::0;;39:1:::1;23:18:::0;::::1;45:23:::0;;5754:50:6;;;;;;;;;;;5776:27;;5754:50;;;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;5754:50:6::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;5836:27;;;;;;;::::1;;::::0;::::1;::::0;;;-1:-1:-1;;;5836:27:6;;;;;;-1:-1:-1;5836:27:6;;::::1;::::0;;;;;;;;;5814:16:::1;::::0;::::1;27:10:-1::0;;23:18;;::::1;45:23:::0;;5814:50:6;;;;;;;;;;5836:27;;5814:50;;;::::1;;::::0;::::1;::::0;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;5814:50:6::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;5909:10:6::1;-1:-1:-1::0;;;;;5880:128:6::1;5892:15;;-1:-1:-1::0;;;;;;;;;;;5921:5:6::1;;5949:13;5964:4;:14;;;5980:4;:15;;;5997:10;5880:128;;;;;;;;;;;;1721:119:::0;1853:23;;;;1849:210;;;1909:6;;:34;;-1:-1:-1;;;1909:34:6;;1892:14;;-1:-1:-1;;;;;1909:6:6;;:22;;:34;;1932:10;;1909:34;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1909:34:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1909:34:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1909:34:6;;;;;;;;;1892:51;;1971:18;;1961:6;:28;1957:92;;4651:23;4643:55:::1;;;;-1:-1:-1::0;;;4643:55:6::1;;;;;;;;;4945:15;4932:10;:28;4924:81;;;;-1:-1:-1::0;;;4924:81:6::1;;;;;;;;;5016:15;:17:::0;;::::1;;::::0;;;;:15:::1;5072:27:::0;;;:10:::1;:27;::::0;;;;5109:26:::1;;:::i;:::-;5138:16;:38;5161:13;5155:20;;;;;;;;5138:38;;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;5138:38:6;5109:67;;;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;5187:29;;-1:-1:-1;;;;;;5187:29:6::1;5206:10;5187:29;::::0;;5109:67;-1:-1:-1;5226:22:6::1;::::0;:14;::::1;5243:5:::0;;5226:22:::1;:::i;:::-;-1:-1:-1::0;5258:34:6::1;:20;::::0;::::1;5281:11:::0;;5258:34:::1;:::i;:::-;-1:-1:-1::0;5323:14:6;;5302:18:::1;::::0;::::1;:35:::0;5369:15:::1;::::0;::::1;::::0;5347:19:::1;::::0;::::1;:37:::0;5394:19:::1;::::0;::::1;:32:::0;;;5436:19:::1;::::0;;::::1;:41:::0;;-1:-1:-1;;5436:41:6;::::1;::::0;;5512:13;;-1:-1:-1;;5487:38:6;;;;::::1;::::0;5512:13;;5487:38;::::1;;;;;;;;::::0;;-1:-1:-1;5557:23:6::1;5540:13;:40;;;;;;;;;5536:208;;5604:47;5625:13;5640:10;;5604:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;;-1:-1;5604:20:6::1;::::0;-1:-1:-1;;;5604:47:6:i:1;:::-;5596:91;;;;-1:-1:-1::0;;;5596:91:6::1;;;;;;;;;5701:32;:19;::::0;::::1;5723:10:::0;;5701:32:::1;:::i;:::-;;5536:208;5776:27;::::0;;;;;;;::::1;;::::0;::::1;::::0;;;-1:-1:-1;;;5776:27:6;;;;;;-1:-1:-1;5776:27:6::1;::::0;;::::1;::::0;;;;;;;;;5754:16:::1;::::0;::::1;27:10:-1::0;;39:1:::1;23:18:::0;::::1;45:23:::0;;5754:50:6;;;;;;;;;;;5776:27;;5754:50;;;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;5754:50:6::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;5836:27;;;;;;;::::1;;::::0;::::1;::::0;;;-1:-1:-1;;;5836:27:6;;;;;;-1:-1:-1;5836:27:6;;::::1;::::0;;;;;;;;;5814:16:::1;::::0;::::1;27:10:-1::0;;23:18;;::::1;45:23:::0;;5814:50:6;;;;;;;;;;5836:27;;5814:50;;;::::1;;::::0;::::1;::::0;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;5814:50:6::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;5909:10:6::1;-1:-1:-1::0;;;;;5880:128:6::1;5892:15;;-1:-1:-1::0;;;;;;;;;;;5921:5:6::1;;5949:13;5964:4;:14;;;5980:4;:15;;;5997:10;5880:128;;;;;;;;;;;;15455:191:::0;15575:4;15542:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;15598:19:::1;::::0;;;:10:::1;:19;::::0;;;;:27:::1;;:35:::0;;15626:6;;15598:35;::::1;;;;;;;;;;;;;;;:41;;;15591:48;;15455:191:::0;;;;;:::o;625:100:4:-;1280:12:22;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:22;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;;;687:31:4::1;397:23;;;;;;;;;;;;;;710:7;687:10;:31::i;:::-;625:100:::0;:::o;1689:145:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:22;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:22;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:22::1;::::0;;1689:145::o;360:60:4:-;397:23;;;;;;13165:94:6;13237:15;;13165:94;:::o;15282:167::-;15391:4;15358:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;-1:-1:-1;;;;;;;15414:12:6::1;;::::0;;;:6:::1;:12;::::0;;;;;;;:21;;;;;;;:28:::1;;::::0;;15282:167::o;1066:77:22:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:22;1066:77;:::o;529:707:5:-;681:4;707:2;739:15;727:27;;719:70;;;;-1:-1:-1;;;719:70:5;;;;;;;;;837:2;825:9;807:15;:27;:32;799:64;;;;-1:-1:-1;;;799:64:5;;;;;;;;;905:10;899:17;;;;:5;:17;;;;;;881:15;:35;:40;-1:-1:-1;873:77:5;;;;-1:-1:-1;;;873:77:5;;;;;;;;;968:48;981:6;989:9;1000:4;1006:9;;968:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;968:12:5;;-1:-1:-1;;;968:48:5:i;:::-;960:91;;;;-1:-1:-1;;;960:91:5;;;;;;;;;1067:10;1061:17;;;;:5;:17;;;;;;;1081:15;1061:35;;1106:6;;:49;;-1:-1:-1;;;1106:49:5;;-1:-1:-1;;;;;1106:6:5;;;;:29;;:49;;1067:10;1148:6;;1106:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:49:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1106:49:5;;;;1189:10;-1:-1:-1;;;;;1170:38:5;;1201:6;1170:38;;;;;;;;;;;;;;;-1:-1:-1;1225:4:5;;529:707;-1:-1:-1;;;;;;529:707:5:o;3955:136:21:-;4028:7;4054:12;;;:6;:12;;;;;:30;;4078:5;4054:30;:23;:30;:::i;:::-;4047:37;;3955:136;;;;;:::o;2940:137::-;3009:4;3032:12;;;:6;:12;;;;;:38;;3062:7;3032:38;:29;:38;:::i;7813:2847:6:-;7869:24;;:::i;:::-;7896:22;7910:7;7896:13;:22::i;:::-;7869:49;;7929:36;;:::i;:::-;7968:24;7984:7;7968:15;:24::i;:::-;8011:18;;7929:63;;-1:-1:-1;;;;;;8011:32:6;8033:10;8011:32;;:68;;;8047:32;464:24:4;;;;;;8047:32:6;8011:103;;;;8083:31;397:23:4;;;;;;8083:31:6;8003:150;;;;-1:-1:-1;;;8003:150:6;;;;;;;;;8193:23;8171:4;:18;;;:45;;;;;;;;;;8163:97;;;;-1:-1:-1;;;8163:97:6;;;;;;;;;8296:15;8278:4;:15;;;:33;8270:87;;;;-1:-1:-1;;;8270:87:6;;;;;;;;;8390:19;8371:4;:15;;;:38;;;;;;;;;8367:131;;;8432:4;:13;;;8424:63;;;;-1:-1:-1;;;8424:63:6;;;;;;;;;8508:24;8565:18;8546:4;:15;;;:37;;;;;;;;;8542:760;;;8599:13;;;;8676:426;8697:19;;;;:10;:19;;;;;:27;;:34;8693:38;;8676:426;;;8756:28;;:::i;:::-;8787:19;;;;:10;:19;;;;;:27;;:30;;8815:1;;8787:30;;;;;;;;;;;;;;;8756:61;;;8787:30;;;;;;;;8756:61;;;;;;;;;-1:-1:-1;;8756:61:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8787:30;;8756:61;;;;8787:30;;8756:61;;8787:30;8756:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8855:9;8839:6;:13;;;:25;8835:253;;;8899:1;8888:12;;8934:6;:13;;;8922:25;;8975:5;8969:11;;8835:253;;;9026:9;9009:6;:13;;;:26;9005:83;;;9065:4;9059:10;;9005:83;-1:-1:-1;8733:3:6;;8676:426;;;;9124:3;9123:4;9115:42;;;;-1:-1:-1;;;9115:42:6;;;;;;;;;9184:19;;;;:10;:19;;;;;:27;;:37;;9212:8;;9184:37;;;;;;;;;;;;;;;;;;;;9171:55;;;;;;;-1:-1:-1;;9171:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9184:37;9171:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8542:760;;;;;;-1:-1:-1;9270:21:6;;;;8542:760;9338:25;9316:4;:18;;;:47;;;;;;;;;9312:1293;;;9379:13;9395:20;9404:10;9395:8;:20::i;:::-;9530:6;;:51;;-1:-1:-1;;;9530:51:6;;9379:36;;-1:-1:-1;9455:4:6;9447:12;;;;9499:17;;;9491:25;;;-1:-1:-1;;;;;9530:6:6;;:27;;:51;;9447:12;;9491:25;;9530:51;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9530:51:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9530:51:6;;;;9312:1293;;;;;;9624:30;9602:4;:18;;;:52;;;;;;;;;9598:1007;;;9691:20;9700:10;9691:8;:20::i;:::-;9670:18;:41;9598:1007;;;9754:28;9732:4;:18;;;:50;;;;;;;;;9728:877;;;9873:12;;;9883:1;9873:12;;;;;;;;;9826:10;;9798:19;;9873:12;;;;21:6:-1;;104:10;9873:12:6;87:34:-1;-1:-1;;9927:12:6;;;9937:1;9927:12;;;;;;;;;9851:34;;-1:-1:-1;9899:25:6;;9927:12;-1:-1:-1;9927:12:6;;;9937:1;;104:10:-1;9927:12:6;87:34:-1;-1:-1;;9982:12:6;;;9992:1;9982:12;;;;;;;;;9899:40;;-1:-1:-1;9953:26:6;;9982:12;-1:-1:-1;9982:12:6;;;9992:1;;104:10:-1;9982:12:6;87:34:-1;135:17;;-1:-1;9982:12:6;9953:41;;10016:6;:13;10033:2;10016:19;10008:28;;;;;;10054:6;10050:312;10070:6;:13;10066:1;:17;10050:312;;;10115:1;10111;:5;10107:241;;;10152:6;10159:1;10152:9;;;;;;;;;;;;;;;;10140:6;10147:1;10140:9;;;;;;;;;;;:21;-1:-1:-1;;;;;10140:21:6;;;;;;;;;10107:241;;;10194:1;10190;:5;10186:162;;;10241:6;10248:1;10241:9;;;;;;;;;;;;;;;;10219:12;10236:1;10232;:5;10219:19;;;;;;;10186:162;10320:6;10327:1;10320:9;;;;;;;;;;;;;;;;10297:13;10315:1;10311;:5;10297:20;;;;;;;;;;;:32;-1:-1:-1;;;;;10297:32:6;;;;;;;;;10186:162;10085:3;;10050:312;;;;10375:17;10395:30;10411:12;10395:8;:30::i;:::-;10375:50;;10439:18;10460:31;10476:13;10460:8;:31::i;:::-;10439:52;;10557:37;;;;;;;;10572:9;10557:37;;;;10583:10;10557:37;;;10505:16;:49;10528:24;10544:6;10528:8;:24::i;:::-;10505:49;;;;;;;;;;;;;;-1:-1:-1;10505:49:6;:89;;;;;;;;;;;;-1:-1:-1;;;;;;9728:877:6;10620:33;;10642:10;;10633:7;;10620:33;;;;;7813:2847;;;;:::o;1717:49:21:-;1762:4;1717:49;:::o;15652:610:6:-;15724:19;15753:23;15786:29;15825:8;15843;15861:14;15885:13;15908:15;15940:24;;:::i;:::-;15967:22;15981:7;15967:13;:22::i;:::-;15940:49;;16007:4;:10;;;15999:18;;16040:4;:15;;;16027:28;;16081:4;:18;;;16065:34;;16115:4;:8;;;16109:14;;16139:4;:8;;;16133:14;;16169:4;:14;;;16157:26;;16204:4;:13;;;16193:24;;16240:4;:15;;;16227:28;;15652:610;;;;;;;;;;:::o;13768:284::-;13867:4;13834:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;13883:24:::1;;:::i;:::-;13910:19;::::0;;;:10:::1;:19;::::0;;;;;;;;13883:46;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;13883:46:6::1;::::0;;;;;::::1;::::0;;;;::::1;;::::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;13883:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;13910:19;;13883:46;;::::1;::::0;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;13883:46:6;;;-1:-1:-1;;13883:46:6::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;;::::0;::::1;;;;-1:-1:-1::0;;13883:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;13883:46:6;;;-1:-1:-1;;13883:46:6::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;;;::::0;::::1;;;;-1:-1:-1::0;;13883:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;;::::0;::::1;;;;-1:-1:-1::0;;13883:46:6;;;::::1;;;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;13973:6;13947:8;:16;;;:23;:32;13939:67;;;;-1:-1:-1::0;;;13939:67:6::1;;;;;;;;;14023:22;14029:7;14038:6;14023:5;:22::i;:::-;14016:29:::0;13768:284;-1:-1:-1;;;;;13768:284:6:o;3245:125:21:-;3308:7;3334:12;;;:6;:12;;;;;:29;;:27;:29::i;5091:226::-;5183:12;;;;:6;:12;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:21;;;;;;;;3859:419:6;3920:4;3940:32;464:24:4;;;;;;3940:32:6;:67;;;;3976:31;397:23:4;;;;;;3976:31:6;3936:109;;;-1:-1:-1;4030:4:6;4023:11;;3936:109;4058:23;;;;4054:196;;;4114:6;;:34;;-1:-1:-1;;;4114:34:6;;4097:14;;-1:-1:-1;;;;;4114:6:6;;:22;;:34;;4137:10;;4114:34;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4114:34:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4114:34:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4114:34:6;;;;;;;;;4097:51;;4176:18;;4166:6;:28;4162:78;;4221:4;4214:11;;;;;4162:78;4054:196;;-1:-1:-1;4266:5:6;3859:419;:::o;12777:382::-;12982:15;;12842:12;13015:19;;;:10;:19;;;;;;;;:25;;;;13007:33;;;;;;;;;;;-1:-1:-1;;13007:33:6;;;;;;;;;;;;;;;;;;;;;;;;;;12864:19;;12842:12;;;13007:33;;;13015:25;13007:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13063:19:6;;;;:10;:19;;;;;;;;:30;;13074:7;;13007:33;;13063:30;;;;;-1:-1:-1;13063:30:6;13119:33;;;;;-1:-1:-1;12777:382:6;;-1:-1:-1;;;12777:382:6:o;14409:277::-;14519:13;14486:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;14552:19:::1;::::0;;;:10:::1;:19;::::0;;;;:27:::1;;:34:::0;:43;-1:-1:-1;14544:78:6::1;;;;-1:-1:-1::0;;;14544:78:6::1;;;;;;;;;14639:19;::::0;;;:10:::1;:19;::::0;;;;:27:::1;;:35:::0;;14667:6;;14639:35;::::1;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;;14632:47:::0;;::::1;::::0;;::::1;;-1:-1:-1::0;;14632:47:6::1;;::::0;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;14639:35:::0;14632:47;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14409:277:::0;;;;;:::o;14240:163::-;14339:4;14306:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;-1:-1:-1;;14362:19:6::1;::::0;;;:10:::1;:19;::::0;;;;:27:::1;;:34:::0;;14240:163::o;1983:240:22:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:22;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:22;;;;;;;;;-1:-1:-1;;;;;2071:22:22;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:22::1;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:22;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:22::1;-1:-1:-1::0;;;;;2199:17:22;;;::::1;::::0;;;::::1;::::0;;1983:240::o;3305:242:6:-;3383:14;3399:15;3438:16;:29;3461:4;3455:11;;;;;;;;3438:29;;;;;;;;;;;;;;;:39;;;3426:51;;3500:16;:29;3523:4;3517:11;;;;;;;;3500:29;;;;;;;;;;;;;;;:40;;;3487:53;;3305:242;;;:::o;590:104:20:-;677:10;590:104;:::o;7015:184:21:-;7088:12;;;;:6;:12;;;;;:33;;7113:7;7088:33;:24;:33;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:21;7160:7;-1:-1:-1;;;;;7142:40:21;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;17564:420:6:-;17664:30;;:::i;:::-;17633:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;17711:24:::1;;:::i;:::-;17738:19;::::0;;;:10:::1;:19;::::0;;;;;;;;17711:46;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;17711:46:6::1;::::0;;;;;::::1;::::0;;;;::::1;;::::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;17711:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;17738:19;;17711:46;;::::1;::::0;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;17711:46:6;;;-1:-1:-1;;17711:46:6::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;;::::0;::::1;;;;-1:-1:-1::0;;17711:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;17711:46:6;;;-1:-1:-1;;17711:46:6::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;;;::::0;::::1;;;;-1:-1:-1::0;;17711:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;;::::0;::::1;;;;-1:-1:-1::0;;17711:46:6;;;::::1;;;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;-1:-1:-1::0;;;17711:46:6;;;-1:-1:-1;17711:46:6::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;17783:16;;-1:-1:-1;;;;;17768:31:6::1;::::0;;17826:18:::1;::::0;::::1;::::0;17809:14;;::::1;:35:::0;17872:19:::1;::::0;::::1;::::0;17854:15;;::::1;:37:::0;;;;17915:15:::1;::::0;::::1;::::0;17901:11;;::::1;:29:::0;-1:-1:-1;17958:19:6::1;::::0;17940:15:::1;::::0;::::1;:37:::0;-1:-1:-1;17768:4:6;;17564:420;-1:-1:-1;;17564:420:6:o;7205:188:21:-;7279:12;;;;:6;:12;;;;;:36;;7307:7;7279:36;:27;:36;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:21;7354:7;-1:-1:-1;;;;;7336:40:21;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;17990:1112:6:-;18078:4;18056:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;18098:25:::1;18126:19:::0;;;:10:::1;:19;::::0;;;;18159::::1;::::0;::::1;::::0;18181:15:::1;-1:-1:-1::0;18155:55:6::1;;;18205:5;18198:12;;;;;18155:55;18274:6;::::0;:30:::1;::::0;-1:-1:-1;;;18274:30:6;;18237:10:::1;::::0;18220:14:::1;::::0;-1:-1:-1;;;;;18274:6:6;;::::1;::::0;:22:::1;::::0;:30:::1;::::0;18237:10;;18274:30:::1;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;18274:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;18274:30:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18274:30:6;;;;;;;;;18257:47;;18331:1;18322:6;:10;18314:66;;;;-1:-1:-1::0;;;18314:66:6::1;;;;;;;;;-1:-1:-1::0;;;;;18398:14:6;::::1;;::::0;;;:6:::1;:14;::::0;;;;;;;:23;;;;;;;;:30:::1;;::::0;:35;18390:78:::1;;;;-1:-1:-1::0;;;18390:78:6::1;;;;;;;;;18505:23;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;18479:14:6;::::1;-1:-1:-1::0;18479:14:6;;;:6:::1;:14:::0;;;;;:23;;;;;;;;;:49;;;;;;::::1;::::0;;::::1;::::0;18539:15:::1;::::0;::::1;:17:::0;;;;::::1;::::0;;18566:25:::1;::::0;::::1;:35:::0;;;::::1;::::0;;18611:16:::1;::::0;::::1;:24:::0;;18513:6;;18611:24;::::1;;;;;;;;;;;;;;;:30;;;:32;;;;;;;;;;;;;18688:6;18653:8;:16;;18670:6;18653:24;;;;;;;;;::::0;;;::::1;::::0;;;:31:::1;:24;::::0;;::::1;;:31;:41:::0;;;;::::1;::::0;;18710:18:::1;::::0;::::1;::::0;::::1;;18705:314;;18758:6;::::0;:21:::1;::::0;;-1:-1:-1;;;18758:21:6;;;;18744:11:::1;::::0;-1:-1:-1;;;;;18758:6:6::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:6;:21;::::1;;5:2:-1::0;::::1;;;30:1;27::::0;20:12:::1;5:2;18758:21:6;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;18758:21:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18758:21:6;;;;;;;;;18810:25;::::0;::::1;::::0;18744:35;;-1:-1:-1;18838:6:6::1;18810:34;18793:14;18744:35:::0;18810:34;18744:35;18878:18:::1;;;;;18858:38;;18931:8;:18;;;18915:12;:34;18911:98;;18969:18;::::0;::::1;:25:::0;;-1:-1:-1;;18969:25:6::1;18990:4;18969:25;::::0;;18911:98:::1;18705:314;;;;19058:6;19050;-1:-1:-1::0;;;;;19034:39:6::1;19041:7;19034:39;19066:6;19034:39;;;;;;;;;;;;;;;-1:-1:-1::0;19091:4:6::1;::::0;17990:1112;-1:-1:-1;;;;;;17990:1112:6:o;10666:1681::-;10797:4;;10817:13;:40;;;;;;;;;10813:57;;;-1:-1:-1;10866:4:6;10859:11;;10813:57;10901:25;10884:13;:42;;;;;;;;;10880:1439;;;10942:13;10958:20;10967:10;10958:8;:20::i;:::-;11018:4;11010:12;;;11062:17;;;11054:25;;;11101:23;11128:3;11101:30;;-1:-1:-1;11093:39:6;;-1:-1:-1;11093:39:6;10880:1439;11170:30;11153:13;:47;;;;;;;;;11149:1170;;;11216:13;11232:20;11241:10;11232:8;:20::i;:::-;11273:9;;;-1:-1:-1;11266:16:6;;-1:-1:-1;11266:16:6;11149:1170;11320:28;11303:13;:45;;;;;;;;;11299:1020;;;11425:13;;11392:10;;11442:2;11425:19;11417:28;;;;;;11481:12;;;11491:1;11481:12;;;;;;;;;11459:19;;11481:12;;;21:6:-1;;104:10;11481:12:6;87:34:-1;-1:-1;;11535:12:6;;;11545:1;11535:12;;;;;;;;;11459:34;;-1:-1:-1;11507:25:6;;11535:12;-1:-1:-1;11535:12:6;;;11545:1;;104:10:-1;11535:12:6;87:34:-1;-1:-1;;11590:12:6;;;11600:1;11590:12;;;;;;;;;11507:40;;-1:-1:-1;11561:26:6;;11590:12;-1:-1:-1;11590:12:6;;;11600:1;;104:10:-1;11590:12:6;87:34:-1;135:17;;-1:-1;;11561:41:6;-1:-1:-1;11620:6:6;11616:312;11636:6;:13;11632:1;:17;11616:312;;;11681:1;11677;:5;11673:241;;;11718:6;11725:1;11718:9;;;;;;;;;;;;;;;;11706:6;11713:1;11706:9;;;;;;;;;;;:21;-1:-1:-1;;;;;11706:21:6;;;;;;;;;11673:241;;;11760:1;11756;:5;11752:162;;;11807:6;11814:1;11807:9;;;;;;;;;;;;;;;;11785:12;11802:1;11798;:5;11785:19;;;;;;;11752:162;11886:6;11893:1;11886:9;;;;;;;;;;;;;;;;11863:13;11881:1;11877;:5;11863:20;;;;;;;;;;;:32;-1:-1:-1;;;;;11863:32:6;;;;;;;;;11752:162;11651:3;;11616:312;;;;11941:17;11961:30;11977:12;11961:8;:30::i;:::-;11941:50;;12005:18;12026:31;12042:13;12026:8;:31::i;:::-;12005:52;;12071:8;12094:1;12082:9;:13;:38;;;;;12112:8;12099:9;:21;;12082:38;12071:49;;12140:3;:21;;;;;12160:1;12147:10;:14;12140:21;:47;;;;;12179:8;12165:10;:22;;12140:47;12134:53;;12207:3;:77;;;;-1:-1:-1;12255:28:6;12220:24;12236:6;12220:8;:24::i;:::-;12214:70;;;;12207:77;12201:83;-1:-1:-1;12298:10:6;;-1:-1:-1;;;;;;;12298:10:6;11299:1020;-1:-1:-1;12335:5:6;10666:1681;;;;:::o;1242:403:5:-;1406:4;1422:18;1470:10;1482:6;1490:9;1453:47;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1453:47:5;;;1443:58;;;;;;1422:79;;1527:10;1519:4;:18;1511:56;;;;-1:-1:-1;;;1511:56:5;;;;;;;;;1618:20;;-1:-1:-1;;;;;1618:20:5;1584:30;1598:4;1604:9;1584:13;:30::i;:::-;-1:-1:-1;;;;;1584:54:5;;;1242:403;-1:-1:-1;;;;;;1242:403:5:o;6085:147:28:-;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:28;;5504:9;:46::i;16268:836:6:-;16366:24;;:::i;:::-;16335:7;2178:1;2173:2;:6;:31;;;;;2189:15;;2183:2;:21;;2173:31;2165:75;;;;-1:-1:-1;;;2165:75:6;;;;;;;;;16407:24:::1;;:::i;:::-;16434:19;::::0;;;:10:::1;:19;::::0;;;;;;;;16407:46;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;16407:46:6::1;::::0;;;;;::::1;::::0;;;;::::1;;::::0;;::::1;;::::0;;;::::1;-1:-1:-1::0;;16407:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;16434:19;;16407:46;;::::1;::::0;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;16407:46:6;;;-1:-1:-1;;16407:46:6::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;;::::0;::::1;;;;-1:-1:-1::0;;16407:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;16407:46:6;;;-1:-1:-1;;16407:46:6::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;;;::::0;::::1;;;;-1:-1:-1::0;;16407:46:6;;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;;::::0;::::1;;;;-1:-1:-1::0;;16407:46:6;;;::::1;;;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;-1:-1:-1::0;;;16407:46:6;;;-1:-1:-1;16407:46:6::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;16477:14;;::::1;::::0;16464:27;;16519:19;::::1;::::0;16407:46;;-1:-1:-1;16501:15:6;::::1;::::0;:37:::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;16569:22:6::1;::::0;::::1;::::0;16548:18:::1;::::0;::::1;::::0;:43:::1;::::0;::::1;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;16619:19:6::1;::::0;::::1;::::0;16601:15:::1;::::0;;::::1;:37:::0;;;;16665:18;::::1;::::0;16648:35:::1;;:14;::::0;::::1;:35:::0;-1:-1:-1;16697:4:6::1;:15;;;:38;;;;;;;;;16694:404;;;16761:8;:16;;;16778:1;16761:19;;;;;;;;;;;;;;:26;;;16750:4;:8;;:37;;;::::0;::::1;16812:8;:16;;;16829:1;16812:19;;;;;;;;;;;;;;:26;;;16801:4;:8;;:37;;;::::0;::::1;16874:15;16856:4;:15;;;:33;:51;;;;;16893:4;:14;;;16856:51;16852:236;;;16987:8;:25;;;16967:4;:8;;;16978:6;16967:17;:45;;;;;16943:19;::::0;::::1;::::0;16967:45;;::::1;-1:-1:-1::0;16943:70:6::1;16927:13;::::0;::::1;:86:::0;16852:236:::1;;;17068:5;17052:13;::::0;::::1;:21:::0;16852:236:::1;2250:1;16268:836:::0;;;;:::o;5638:115:28:-;5701:7;5727:19;5735:3;5727:7;:19::i;4864:141::-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:28;;4957:4;:41::i;5173:147::-;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:28;;5269:7;:44::i;1064:2068:23:-;1142:7;1203:9;:16;1223:2;1203:22;1199:94;;1241:41;;-1:-1:-1;;;1241:41:23;;;;;;;;1199:94;1643:4;1628:20;;1622:27;1688:4;1673:20;;1667:27;1741:4;1726:20;;1720:27;1359:9;1712:36;2659:66;2646:79;;2642:154;;;2741:44;;-1:-1:-1;;;2741:44:23;;;;;;;;2642:154;2810:1;:7;;2815:2;2810:7;;:18;;;;;2821:1;:7;;2826:2;2821:7;;2810:18;2806:93;;;2844:44;;-1:-1:-1;;;2844:44:23;;;;;;;;2806:93;2993:14;3010:24;3020:4;3026:1;3029;3032;3010:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3010:24:23;;-1:-1:-1;;3010:24:23;;;-1:-1:-1;;;;;;;3052:20:23;;3044:57;;;;-1:-1:-1;;;3044:57:23;;;;;;;;;3119:6;1064:2068;-1:-1:-1;;;;;;1064:2068:23:o;4423:201:28:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:28;;;;-1:-1:-1;;;4509:73:28;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:28;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:28;1986:12;;2183:1512;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:28;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;203:1445:5;;;;;;;;;;-1:-1:-1;;;;;203:1445:5;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;203:1445:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;203:1445:5;;;-1:-1:-1;203:1445:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;203:1445:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;203:1445:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;-1:-1;;;;;45488:54;;47617:35;;47607:2;;47666:1;;47656:12;944:336;;;1058:3;1051:4;1043:6;1039:17;1035:27;1025:2;;-1:-1;;1066:12;1025:2;-1:-1;1096:20;;1136:18;1125:30;;1122:2;;;-1:-1;;1158:12;1122:2;1202:4;1194:6;1190:17;1178:29;;1253:3;1202:4;1233:17;1194:6;1219:32;;1216:41;1213:2;;;1270:1;;1260:12;1213:2;1018:262;;;;;;1288:170;1375:20;;48135:1;48125:12;;48115:2;;48151:1;;48141:12;2554:241;;2658:2;2646:9;2637:7;2633:23;2629:32;2626:2;;;-1:-1;;2664:12;2626:2;2726:53;2771:7;2747:22;2726:53;;2802:360;;;2920:2;2908:9;2899:7;2895:23;2891:32;2888:2;;;-1:-1;;2926:12;2888:2;604:6;591:20;47763:5;44870:13;44863:21;47741:5;47738:32;47728:2;;-1:-1;;47774:12;47728:2;2978:60;3075:2;3114:22;;;;2343:20;;-1:-1;;;2882:280;3169:241;;3273:2;3261:9;3252:7;3248:23;3244:32;3241:2;;;-1:-1;;3279:12;3241:2;-1:-1;725:20;;3235:175;-1:-1;3235:175;3417:366;;;3538:2;3526:9;3517:7;3513:23;3509:32;3506:2;;;-1:-1;;3544:12;3506:2;725:20;;;-1:-1;3696:2;3735:22;;72:20;-1:-1;;;;;45488:54;;47617:35;;47607:2;;-1:-1;;47656:12;47607:2;3704:63;;;;3500:283;;;;;;3790:366;;;3911:2;3899:9;3890:7;3886:23;3882:32;3879:2;;;-1:-1;;3917:12;3879:2;-1:-1;;725:20;;;4069:2;4108:22;;;2343:20;;-1:-1;3873:283;4163:281;;4287:2;4275:9;4266:7;4262:23;4258:32;4255:2;;;-1:-1;;4293:12;4255:2;4355:73;4420:7;4396:22;4355:73;;4451:1207;;;;;;;;;4726:3;4714:9;4705:7;4701:23;4697:33;4694:2;;;-1:-1;;4733:12;4694:2;4791:17;4778:31;4829:18;;4821:6;4818:30;4815:2;;;-1:-1;;4851:12;4815:2;4889:65;4946:7;4937:6;4926:9;4922:22;4889:65;;;4879:75;;-1:-1;4879:75;-1:-1;5019:2;5004:18;;4991:32;;-1:-1;5032:30;;;5029:2;;;-1:-1;;5065:12;5029:2;5103:65;5160:7;5151:6;5140:9;5136:22;5103:65;;;5093:75;;-1:-1;5093:75;-1:-1;5205:2;5244:22;;2343:20;;-1:-1;5341:2;5326:18;;5313:32;;-1:-1;5354:30;;;5351:2;;;-1:-1;;5387:12;5351:2;5496:6;5485:9;5481:22;297:3;290:4;282:6;278:17;274:27;264:2;;-1:-1;;305:12;264:2;348:6;335:20;325:30;;4829:18;367:6;364:30;361:2;;;-1:-1;;397:12;361:2;492:3;5019:2;;476:6;472:17;433:6;458:32;;455:41;452:2;;;-1:-1;;499:12;452:2;5019;429:17;;-1:-1;5415:98;;-1:-1;5569:73;;-1:-1;5634:7;5550:3;5610:22;;5569:73;;;5559:83;;4688:970;;;;;;;;;;;;5665:1161;;;;;;;;;5917:3;5905:9;5896:7;5892:23;5888:33;5885:2;;;-1:-1;;5924:12;5885:2;5982:17;5969:31;6020:18;;6012:6;6009:30;6006:2;;;-1:-1;;6042:12;6006:2;6080:65;6137:7;6128:6;6117:9;6113:22;6080:65;;;6070:75;;-1:-1;6070:75;-1:-1;6210:2;6195:18;;6182:32;;-1:-1;6223:30;;;6220:2;;;-1:-1;;6256:12;6220:2;6294:65;6351:7;6342:6;6331:9;6327:22;6294:65;;;6284:75;;-1:-1;6284:75;-1:-1;6396:2;6435:22;;2343:20;;-1:-1;6504:2;6563:22;;1375:20;;-1:-1;48135:1;48125:12;;48115:2;;-1:-1;;48141:12;48115:2;6512:83;;-1:-1;6660:3;6645:19;;6632:33;;6674:30;;;6671:2;;;-1:-1;;6707:12;6671:2;;6745:65;6802:7;6793:6;6782:9;6778:22;6745:65;;;5879:947;;;;-1:-1;5879:947;;-1:-1;5879:947;;;;;;6735:75;-1:-1;;;5879:947;6833:347;;6947:2;6935:9;6926:7;6922:23;6918:32;6915:2;;;-1:-1;;6953:12;6915:2;7011:17;6998:31;7049:18;;7041:6;7038:30;7035:2;;;-1:-1;;7071:12;7035:2;7147:6;7136:9;7132:22;1928:3;1921:4;1913:6;1909:17;1905:27;1895:2;;-1:-1;;1936:12;1895:2;1983:6;1970:20;1956:34;;7049:18;43952:6;43949:30;43946:2;;;-1:-1;;43982:12;43946:2;43615;43609:9;44055;44036:17;;-1:-1;;44032:33;43641:17;;6947:2;43641:17;43701:34;;;43737:22;;;43698:62;43695:2;;;-1:-1;;43763:12;43695:2;43615;43782:22;2076:21;;;2176:16;;;6947:2;2176:16;2173:25;-1:-1;2170:2;;;-1:-1;;2201:12;2170:2;2221:41;2255:6;6947:2;2152:5;2148:16;6947:2;2118:6;2114:17;2221:41;;7435:263;;7550:2;7538:9;7529:7;7525:23;7521:32;7518:2;;;-1:-1;;7556:12;7518:2;-1:-1;2491:13;;7512:186;-1:-1;7512:186;7705:366;;;7826:2;7814:9;7805:7;7801:23;7797:32;7794:2;;;-1:-1;;7832:12;7794:2;2356:6;2343:20;7884:63;;8002:53;8047:7;7984:2;8027:9;8023:22;8002:53;;;7992:63;;7788:283;;;;;;8078:364;;;8198:2;8186:9;8177:7;8173:23;8169:32;8166:2;;;-1:-1;;8204:12;8166:2;2343:20;;;-1:-1;8356:2;8394:22;;861:20;-1:-1;;;;;;45036:78;;47982:34;;47972:2;;-1:-1;;48020:12;8822:741;;;;;;8996:3;8984:9;8975:7;8971:23;8967:33;8964:2;;;-1:-1;;9003:12;8964:2;2356:6;2343:20;9055:63;;9155:2;9198:9;9194:22;2343:20;9163:63;;9263:2;9306:9;9302:22;725:20;9271:63;;9399:2;9388:9;9384:18;9371:32;9423:18;9415:6;9412:30;9409:2;;;-1:-1;;9445:12;9409:2;9483:64;9539:7;9530:6;9519:9;9515:22;9483:64;;;8958:605;;;;-1:-1;8958:605;;-1:-1;9473:74;;;8958:605;-1:-1;;;8958:605;10926:347;;11071:5;44233:12;44390:6;44385:3;44378:19;-1:-1;46627:101;46641:6;46638:1;46635:13;46627:101;;;44427:4;46708:11;;;;;46702:18;46689:11;;;;;46682:39;46656:10;46627:101;;;46743:6;46740:1;46737:13;46734:2;;;-1:-1;44427:4;46799:6;44422:3;46790:16;;46783:27;46734:2;-1:-1;44055:9;47186:14;-1:-1;;47182:28;11229:39;;;;44427:4;11229:39;;11018:255;-1:-1;;11018:255;23244:554;47297:2;47293:14;;;;-1:-1;;47293:14;9824:74;;23548:2;23539:12;;10212:37;;;;23650:12;;;10212:37;23761:12;;;23423:375;23805:372;-1:-1;;;19492:34;;19476:2;19545:12;;23985:192;24184:372;-1:-1;;;19848:33;;19832:2;19900:12;;24364:192;24563:213;-1:-1;;;;;45488:54;;;;9981:37;;24681:2;24666:18;;24652:124;25019:340;-1:-1;;;;;45488:54;;;;9649:58;;25345:2;25330:18;;10212:37;25173:2;25158:18;;25144:215;25366:747;;45499:42;;;;;45492:5;45488:54;9988:3;9981:37;10242:5;25781:2;25770:9;25766:18;10212:37;10242:5;25864:2;25853:9;25849:18;10212:37;10242:5;25947:2;25936:9;25932:18;10212:37;25616:3;25984;25973:9;25969:19;25962:49;26025:78;25616:3;25605:9;25601:19;26089:6;26025:78;;26120:201;44870:13;;44863:21;10095:34;;26232:2;26217:18;;26203:118;26328:213;10212:37;;;26446:2;26431:18;;26417:124;26548:539;10212:37;;;45704:4;45693:16;;;;26907:2;26892:18;;23197:35;26990:2;26975:18;;10212:37;27073:2;27058:18;;10212:37;26746:3;26731:19;;26717:370;27094:803;;27372:3;27394:17;27387:47;44390:6;27372:3;27361:9;27357:19;44378;46482:6;46477:3;44418:14;27361:9;44418:14;46459:30;-1:-1;44418:14;46529:6;27361:9;46520:16;;46513:27;44418:14;44055:9;;47206:2;10904:6;47186:14;47182:28;27361:9;10873:39;;27440:96;;46101:44;10574:5;46101:44;;;44427:4;27622:9;27618:18;10513:68;10242:5;27716:2;27705:9;27701:18;10212:37;10242:5;27799:2;27788:9;27784:18;10212:37;10242:5;27882:3;27871:9;27867:19;10212:37;27343:554;;;;;;;;;;27904:301;;28042:2;28063:17;28056:47;28117:78;28042:2;28031:9;28027:18;28181:6;28117:78;;28212:1125;;28567:3;;28589:17;28582:47;28643:78;28567:3;28556:9;28552:19;28707:6;28643:78;;;28635:86;;;45951:41;10405:5;45951:41;;;28815:2;28804:9;28800:18;10347:65;46101:44;10574:5;46101:44;;;28916:2;28901:18;;10513:68;28999:2;28984:18;;10212:37;;;;29082:3;29067:19;;10212:37;;;;44870:13;;44863:21;29160:3;29145:19;;10095:34;44870:13;44863:21;29238:3;29223:19;;10095:34;29322:3;29307:19;;;10212:37;28538:799;;-1:-1;;;28538:799;29344:523;;29538:2;29559:17;29552:47;29613:78;29538:2;29527:9;29523:18;29677:6;29613:78;;;29770:2;29755:18;;10212:37;;;;-1:-1;29853:2;29838:18;10212:37;29605:86;29509:358;-1:-1;29509:358;29874:407;30065:2;30079:47;;;11505:2;30050:18;;;44378:19;11541:26;44418:14;;;11521:47;11587:12;;;30036:245;30288:407;30479:2;30493:47;;;11838:2;30464:18;;;44378:19;11874:34;44418:14;;;11854:55;-1:-1;;;11929:12;;;11922:26;11967:12;;;30450:245;30702:407;30893:2;30907:47;;;12218:2;30878:18;;;44378:19;12254:34;44418:14;;;12234:55;-1:-1;;;12309:12;;;12302:39;12360:12;;;30864:245;31116:407;31307:2;31321:47;;;12611:2;31292:18;;;44378:19;12647:33;44418:14;;;12627:54;12700:12;;;31278:245;31530:407;31721:2;31735:47;;;12951:2;31706:18;;;44378:19;12987:34;44418:14;;;12967:55;-1:-1;;;13042:12;;;13035:32;13086:12;;;31692:245;31944:407;32135:2;32149:47;;;13337:2;32120:18;;;44378:19;13373:26;44418:14;;;13353:47;13419:12;;;32106:245;32358:407;32549:2;32563:47;;;13670:2;32534:18;;;44378:19;13706:34;44418:14;;;13686:55;-1:-1;;;13761:12;;;13754:30;13803:12;;;32520:245;32772:407;32963:2;32977:47;;;14054:2;32948:18;;;44378:19;14090:27;44418:14;;;14070:48;14137:12;;;32934:245;33186:407;33377:2;33391:47;;;14388:2;33362:18;;;44378:19;14424:34;44418:14;;;14404:55;-1:-1;;;14479:12;;;14472:28;14519:12;;;33348:245;33600:407;33791:2;33805:47;;;14770:2;33776:18;;;44378:19;14806:33;44418:14;;;14786:54;14859:12;;;33762:245;34014:407;34205:2;34219:47;;;15110:2;34190:18;;;44378:19;15146:34;44418:14;;;15126:55;-1:-1;;;15201:12;;;15194:29;15242:12;;;34176:245;34428:407;34619:2;34633:47;;;15493:2;34604:18;;;44378:19;-1:-1;;;44418:14;;;15509:42;15570:12;;;34590:245;34842:407;35033:2;35047:47;;;15821:2;35018:18;;;44378:19;15857:34;44418:14;;;15837:55;-1:-1;;;15912:12;;;15905:32;15956:12;;;35004:245;35256:407;35447:2;35461:47;;;16207:2;35432:18;;;44378:19;16243:32;44418:14;;;16223:53;16295:12;;;35418:245;35670:407;35861:2;35875:47;;;16546:2;35846:18;;;44378:19;16582:32;44418:14;;;16562:53;16634:12;;;35832:245;36084:407;36275:2;36289:47;;;16885:2;36260:18;;;44378:19;16921:34;44418:14;;;16901:55;-1:-1;;;16976:12;;;16969:35;17023:12;;;36246:245;36498:407;36689:2;36703:47;;;17274:2;36674:18;;;44378:19;17310:33;44418:14;;;17290:54;17363:12;;;36660:245;36912:407;37103:2;37117:47;;;17614:2;37088:18;;;44378:19;17650:34;44418:14;;;17630:55;-1:-1;;;17705:12;;;17698:26;17743:12;;;37074:245;37326:407;37517:2;37531:47;;;17994:2;37502:18;;;44378:19;-1:-1;;;44418:14;;;18010:45;18074:12;;;37488:245;37740:407;37931:2;37945:47;;;18325:2;37916:18;;;44378:19;18361:34;44418:14;;;18341:55;-1:-1;;;18416:12;;;18409:40;18468:12;;;37902:245;38154:407;38345:2;38359:47;;;18719:2;38330:18;;;44378:19;18755:34;44418:14;;;18735:55;-1:-1;;;18810:12;;;18803:26;18848:12;;;38316:245;38568:407;38759:2;38773:47;;;38744:18;;;44378:19;19135:34;44418:14;;;19115:55;19189:12;;;38730:245;38982:407;39173:2;39187:47;;;20151:2;39158:18;;;44378:19;20187:32;44418:14;;;20167:53;20239:12;;;39144:245;39396:407;39587:2;39601:47;;;20490:2;39572:18;;;44378:19;20526:34;44418:14;;;20506:55;-1:-1;;;20581:12;;;20574:33;20626:12;;;39558:245;39810:407;40001:2;40015:47;;;20877:2;39986:18;;;44378:19;20913:27;44418:14;;;20893:48;20960:12;;;39972:245;40224:407;40415:2;40429:47;;;21211:2;40400:18;;;44378:19;21247:34;44418:14;;;21227:55;-1:-1;;;21302:12;;;21295:26;21340:12;;;40386:245;40638:407;40829:2;40843:47;;;21591:2;40814:18;;;44378:19;-1:-1;;;44418:14;;;21607:42;21668:12;;;40800:245;41052:407;41243:2;41257:47;;;21919:2;41228:18;;;44378:19;21955:34;44418:14;;;21935:55;-1:-1;;;22010:12;;;22003:31;22053:12;;;41214:245;41466:407;41657:2;41671:47;;;22304:2;41642:18;;;44378:19;22340:34;44418:14;;;22320:55;-1:-1;;;22395:12;;;22388:39;22446:12;;;41628:245;41880:407;42071:2;42085:47;;;22697:2;42056:18;;;44378:19;22733:34;44418:14;;;22713:55;-1:-1;;;22788:12;;;22781:25;22825:12;;;42042:245;42514:701;;10242:5;10219:3;10212:37;42769:3;42888:2;42877:9;42873:18;42866:48;42928:78;42769:3;42758:9;42754:19;42992:6;42928:78;;;42920:86;;45951:41;10405:5;45951:41;;;43100:2;43089:9;43085:18;10347:65;46101:44;10574:5;46101:44;;;43201:2;43190:9;43186:18;10513:68;42740:475;;;;;;;;43222:324;10212:37;;;43532:2;43517:18;;10212:37;43368:2;43353:18;;43339:207;45126:140;45194:16;47411:1;47401:12;;47391:2;;47417:9;45273:146;45344:16;47529:1;47519:12;;47509:2;;47535:9;46401:145;46482:6;46477:3;46472;46459:30;-1:-1;46538:1;46520:16;;46513:27;46452:94",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.2;\npragma experimental ABIEncoderV2;\n\nimport \"./Voting.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/cryptography/ECDSA.sol\";\n\n\ncontract Rewarding is Voting {\n\n    address private _verifyRewardAddress;\n\n    mapping (address => uint) private _logs;\n\n    event ClaimStakingReward(address indexed recipient, uint256 amount);\n\n    function setRewardAddress(address rewardAddress) external onlyOwner {\n        _verifyRewardAddress = rewardAddress;\n    }\n\n    function claimReward(\n        uint256 reward,\n        uint256 timestamp,\n        bytes32 hash,\n        bytes calldata signature\n    ) external returns (bool) {\n        uint to = 90;\n        require(timestamp < block.timestamp, \"Rewarding: incorrect timestamp\");\n        require(block.timestamp - timestamp < to, \"Rewarding: expiried\");\n        require(block.timestamp - _logs[msg.sender] > to, \"Rewarding: freeze period\");\n        require(verifyReward(reward, timestamp, hash, signature), \"Rewarding: incorrect signature\");\n        _logs[msg.sender] = block.timestamp;\n        _Token.transferStakingRewards(msg.sender, reward);\n        emit ClaimStakingReward(msg.sender, reward);\n        return true;\n    }\n\n    function verifyReward(\n        uint256 reward,\n        uint256 timestamp,\n        bytes32 hash,\n        bytes memory signature\n    )\n    internal view\n    returns (bool) {\n        bytes32 verifyHash = keccak256(abi.encodePacked(msg.sender, reward, timestamp));\n        require(hash == verifyHash, \"Rewarding: incorrect hash\");\n        return ECDSA.recover(hash, signature) == _verifyRewardAddress;\n    }\n\n}\n",
  "sourcePath": "/home/pirat/Desktop/DAO/contracts/DAO/Rewarding.sol",
  "ast": {
    "absolutePath": "/home/pirat/Desktop/DAO/contracts/DAO/Rewarding.sol",
    "exportedSymbols": {
      "Rewarding": [
        1242
      ]
    },
    "id": 1243,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1088,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:5"
      },
      {
        "id": 1089,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:5"
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO/contracts/DAO/Voting.sol",
        "file": "./Voting.sol",
        "id": 1090,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 3339,
        "src": "94:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/cryptography/ECDSA.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/cryptography/ECDSA.sol",
        "id": 1091,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 7442,
        "src": "117:83:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1092,
              "name": "Voting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3338,
              "src": "225:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Voting_$3338",
                "typeString": "contract Voting"
              }
            },
            "id": 1093,
            "nodeType": "InheritanceSpecifier",
            "src": "225:6:5"
          }
        ],
        "contractDependencies": [
          1086,
          3338,
          6973,
          7243,
          7346
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1242,
        "linearizedBaseContracts": [
          1242,
          3338,
          1086,
          7243,
          7346,
          6973
        ],
        "name": "Rewarding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1095,
            "name": "_verifyRewardAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1242,
            "src": "239:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1094,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "239:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1099,
            "name": "_logs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1242,
            "src": "282:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1098,
              "keyType": {
                "id": 1096,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "291:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "282:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1097,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "302:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1105,
            "name": "ClaimStakingReward",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "indexed": true,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1105,
                  "src": "353:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1103,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1105,
                  "src": "380:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "352:43:5"
            },
            "src": "328:68:5"
          },
          {
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "470:53:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1112,
                      "name": "_verifyRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1095,
                      "src": "480:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "rewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1107,
                      "src": "503:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "480:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "480:36:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5e00e679",
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1109,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7297,
                  "src": "460:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "460:9:5"
              }
            ],
            "name": "setRewardAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "name": "rewardAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1117,
                  "src": "428:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "427:23:5"
            },
            "returnParameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:5"
            },
            "scope": 1242,
            "src": "402:121:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "687:549:5",
              "statements": [
                {
                  "assignments": [
                    1131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1131,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1199,
                      "src": "697:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1130,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "697:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1133,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3930",
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "707:2:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_90_by_1",
                      "typeString": "int_const 90"
                    },
                    "value": "90"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "697:12:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1135,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "727:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1136,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "739:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "739:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "727:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a20696e636f72726563742074696d657374616d70",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "756:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8d778e666e45c0912698d768abfbd099422ea7d25f8cbcadf7921dbf8e9178",
                          "typeString": "literal_string \"Rewarding: incorrect timestamp\""
                        },
                        "value": "Rewarding: incorrect timestamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8d778e666e45c0912698d768abfbd099422ea7d25f8cbcadf7921dbf8e9178",
                          "typeString": "literal_string \"Rewarding: incorrect timestamp\""
                        }
                      ],
                      "id": 1134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "719:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "719:70:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1143,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "807:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "807:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1145,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1121,
                            "src": "825:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "807:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1131,
                          "src": "837:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "807:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a206578706972696564",
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "841:21:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e5a32ebdb48d64c9b5f54a27c37ea8245c0d247a5a00f476c72b476cee7ff76",
                          "typeString": "literal_string \"Rewarding: expiried\""
                        },
                        "value": "Rewarding: expiried"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e5a32ebdb48d64c9b5f54a27c37ea8245c0d247a5a00f476c72b476cee7ff76",
                          "typeString": "literal_string \"Rewarding: expiried\""
                        }
                      ],
                      "id": 1142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "799:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1151,
                  "nodeType": "ExpressionStatement",
                  "src": "799:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1153,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "881:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "881:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1155,
                              "name": "_logs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1099,
                              "src": "899:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1158,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1156,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "905:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "905:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "899:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "881:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1160,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1131,
                          "src": "919:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "881:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a20667265657a6520706572696f64",
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "923:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21b7a33341330fd405582b6e3e7e5a7efeb40ab00969b31e9ae76b45f4b82fda",
                          "typeString": "literal_string \"Rewarding: freeze period\""
                        },
                        "value": "Rewarding: freeze period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21b7a33341330fd405582b6e3e7e5a7efeb40ab00969b31e9ae76b45f4b82fda",
                          "typeString": "literal_string \"Rewarding: freeze period\""
                        }
                      ],
                      "id": 1152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "873:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:77:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "873:77:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1167,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "981:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1168,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1121,
                            "src": "989:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1169,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "1000:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1170,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1006:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 1166,
                          "name": "verifyReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1241,
                          "src": "968:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256,bytes32,bytes memory) view returns (bool)"
                          }
                        },
                        "id": 1171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "968:48:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a20696e636f7272656374207369676e6174757265",
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1018:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_478f727396cc290ebe850ca30cb69de9a06fa701df5650c166ed137ab2dd9e99",
                          "typeString": "literal_string \"Rewarding: incorrect signature\""
                        },
                        "value": "Rewarding: incorrect signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_478f727396cc290ebe850ca30cb69de9a06fa701df5650c166ed137ab2dd9e99",
                          "typeString": "literal_string \"Rewarding: incorrect signature\""
                        }
                      ],
                      "id": 1165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "960:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:91:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "960:91:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1175,
                        "name": "_logs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "1061:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1178,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1067:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1067:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1061:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1179,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1081:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1081:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1061:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:35:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1136:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1136:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1188,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "1148:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1183,
                        "name": "_Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "1106:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICitadelDaoTransport_$3372",
                          "typeString": "contract ICitadelDaoTransport"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferStakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3359,
                      "src": "1106:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1190,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:49:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1189:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1189:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1194,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "1201:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1191,
                      "name": "ClaimStakingReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "1170:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "EmitStatement",
                  "src": "1165:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1225:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1129,
                  "id": 1198,
                  "nodeType": "Return",
                  "src": "1218:11:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8e0a1372",
            "id": 1200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "559:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "583:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "610:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "632:24:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:113:5"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "681:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "680:6:5"
            },
            "scope": 1242,
            "src": "529:707:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "1412:233:5",
              "statements": [
                {
                  "assignments": [
                    1214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1214,
                      "name": "verifyHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1240,
                      "src": "1422:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1213,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1422:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1224,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1218,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1470:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1470:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1220,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "1482:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1221,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1204,
                            "src": "1490:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1216,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1453:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1453:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1453:47:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1215,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1443:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1422:79:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1226,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1206,
                          "src": "1519:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1227,
                          "name": "verifyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "1527:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1519:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a20696e636f72726563742068617368",
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1539:27:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d13fe46e0650c0660d1ca1ca4051e104e9354d3e97185d22762a6d2d4b3e80c2",
                          "typeString": "literal_string \"Rewarding: incorrect hash\""
                        },
                        "value": "Rewarding: incorrect hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d13fe46e0650c0660d1ca1ca4051e104e9354d3e97185d22762a6d2d4b3e80c2",
                          "typeString": "literal_string \"Rewarding: incorrect hash\""
                        }
                      ],
                      "id": 1225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1511:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:56:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1234,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1206,
                          "src": "1598:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1235,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "1604:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1232,
                          "name": "ECDSA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7441,
                          "src": "1584:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ECDSA_$7441_$",
                            "typeString": "type(library ECDSA)"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7424,
                        "src": "1584:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1584:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1237,
                      "name": "_verifyRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1095,
                      "src": "1618:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1212,
                  "id": 1239,
                  "nodeType": "Return",
                  "src": "1577:61:5"
                }
              ]
            },
            "documentation": null,
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1273:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1204,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1297:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1206,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1324:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1208,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1346:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1263:111:5"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1211,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1406:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1405:6:5"
            },
            "scope": 1242,
            "src": "1242:403:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1243,
        "src": "203:1445:5"
      }
    ],
    "src": "36:1613:5"
  },
  "legacyAST": {
    "absolutePath": "/home/pirat/Desktop/DAO/contracts/DAO/Rewarding.sol",
    "exportedSymbols": {
      "Rewarding": [
        1242
      ]
    },
    "id": 1243,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1088,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:5"
      },
      {
        "id": 1089,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:5"
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO/contracts/DAO/Voting.sol",
        "file": "./Voting.sol",
        "id": 1090,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 3339,
        "src": "94:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/cryptography/ECDSA.sol",
        "file": "../../node_modules/openzeppelin-solidity/contracts/cryptography/ECDSA.sol",
        "id": 1091,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 7442,
        "src": "117:83:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1092,
              "name": "Voting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3338,
              "src": "225:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Voting_$3338",
                "typeString": "contract Voting"
              }
            },
            "id": 1093,
            "nodeType": "InheritanceSpecifier",
            "src": "225:6:5"
          }
        ],
        "contractDependencies": [
          1086,
          3338,
          6973,
          7243,
          7346
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1242,
        "linearizedBaseContracts": [
          1242,
          3338,
          1086,
          7243,
          7346,
          6973
        ],
        "name": "Rewarding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1095,
            "name": "_verifyRewardAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1242,
            "src": "239:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1094,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "239:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1099,
            "name": "_logs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1242,
            "src": "282:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1098,
              "keyType": {
                "id": 1096,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "291:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "282:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1097,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "302:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1105,
            "name": "ClaimStakingReward",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1101,
                  "indexed": true,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1105,
                  "src": "353:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1103,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1105,
                  "src": "380:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "352:43:5"
            },
            "src": "328:68:5"
          },
          {
            "body": {
              "id": 1116,
              "nodeType": "Block",
              "src": "470:53:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1112,
                      "name": "_verifyRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1095,
                      "src": "480:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "rewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1107,
                      "src": "503:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "480:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "480:36:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5e00e679",
            "id": 1117,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1109,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7297,
                  "src": "460:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "460:9:5"
              }
            ],
            "name": "setRewardAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "name": "rewardAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1117,
                  "src": "428:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "427:23:5"
            },
            "returnParameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:5"
            },
            "scope": 1242,
            "src": "402:121:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "687:549:5",
              "statements": [
                {
                  "assignments": [
                    1131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1131,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1199,
                      "src": "697:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1130,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "697:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1133,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3930",
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "707:2:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_90_by_1",
                      "typeString": "int_const 90"
                    },
                    "value": "90"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "697:12:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1135,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "727:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1136,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "739:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "739:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "727:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a20696e636f72726563742074696d657374616d70",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "756:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be8d778e666e45c0912698d768abfbd099422ea7d25f8cbcadf7921dbf8e9178",
                          "typeString": "literal_string \"Rewarding: incorrect timestamp\""
                        },
                        "value": "Rewarding: incorrect timestamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be8d778e666e45c0912698d768abfbd099422ea7d25f8cbcadf7921dbf8e9178",
                          "typeString": "literal_string \"Rewarding: incorrect timestamp\""
                        }
                      ],
                      "id": 1134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "719:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1141,
                  "nodeType": "ExpressionStatement",
                  "src": "719:70:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1143,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "807:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "807:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1145,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1121,
                            "src": "825:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "807:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1147,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1131,
                          "src": "837:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "807:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a206578706972696564",
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "841:21:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e5a32ebdb48d64c9b5f54a27c37ea8245c0d247a5a00f476c72b476cee7ff76",
                          "typeString": "literal_string \"Rewarding: expiried\""
                        },
                        "value": "Rewarding: expiried"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e5a32ebdb48d64c9b5f54a27c37ea8245c0d247a5a00f476c72b476cee7ff76",
                          "typeString": "literal_string \"Rewarding: expiried\""
                        }
                      ],
                      "id": 1142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "799:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1151,
                  "nodeType": "ExpressionStatement",
                  "src": "799:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1153,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "881:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "881:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1155,
                              "name": "_logs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1099,
                              "src": "899:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1158,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1156,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "905:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "905:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "899:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "881:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1160,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1131,
                          "src": "919:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "881:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a20667265657a6520706572696f64",
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "923:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21b7a33341330fd405582b6e3e7e5a7efeb40ab00969b31e9ae76b45f4b82fda",
                          "typeString": "literal_string \"Rewarding: freeze period\""
                        },
                        "value": "Rewarding: freeze period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21b7a33341330fd405582b6e3e7e5a7efeb40ab00969b31e9ae76b45f4b82fda",
                          "typeString": "literal_string \"Rewarding: freeze period\""
                        }
                      ],
                      "id": 1152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "873:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:77:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "873:77:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1167,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "981:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1168,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1121,
                            "src": "989:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1169,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "1000:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1170,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "1006:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 1166,
                          "name": "verifyReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1241,
                          "src": "968:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256,bytes32,bytes memory) view returns (bool)"
                          }
                        },
                        "id": 1171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "968:48:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a20696e636f7272656374207369676e6174757265",
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1018:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_478f727396cc290ebe850ca30cb69de9a06fa701df5650c166ed137ab2dd9e99",
                          "typeString": "literal_string \"Rewarding: incorrect signature\""
                        },
                        "value": "Rewarding: incorrect signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_478f727396cc290ebe850ca30cb69de9a06fa701df5650c166ed137ab2dd9e99",
                          "typeString": "literal_string \"Rewarding: incorrect signature\""
                        }
                      ],
                      "id": 1165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "960:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:91:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "960:91:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1175,
                        "name": "_logs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "1061:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1178,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1067:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1067:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1061:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1179,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1081:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1081:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1061:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:35:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1136:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1136:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1188,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "1148:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1183,
                        "name": "_Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "1106:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICitadelDaoTransport_$3372",
                          "typeString": "contract ICitadelDaoTransport"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferStakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3359,
                      "src": "1106:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1190,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:49:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1192,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1189:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1189:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1194,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "1201:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1191,
                      "name": "ClaimStakingReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "1170:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1170:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1196,
                  "nodeType": "EmitStatement",
                  "src": "1165:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1225:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1129,
                  "id": 1198,
                  "nodeType": "Return",
                  "src": "1218:11:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8e0a1372",
            "id": 1200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "559:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "583:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "610:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "632:24:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:113:5"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1200,
                  "src": "681:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "680:6:5"
            },
            "scope": 1242,
            "src": "529:707:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "1412:233:5",
              "statements": [
                {
                  "assignments": [
                    1214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1214,
                      "name": "verifyHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1240,
                      "src": "1422:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1213,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1422:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1224,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1218,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1470:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1470:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1220,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "1482:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1221,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1204,
                            "src": "1490:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1216,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1453:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1453:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1453:47:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1215,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1443:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1422:79:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1226,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1206,
                          "src": "1519:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1227,
                          "name": "verifyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "1527:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1519:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526577617264696e673a20696e636f72726563742068617368",
                        "id": 1229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1539:27:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d13fe46e0650c0660d1ca1ca4051e104e9354d3e97185d22762a6d2d4b3e80c2",
                          "typeString": "literal_string \"Rewarding: incorrect hash\""
                        },
                        "value": "Rewarding: incorrect hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d13fe46e0650c0660d1ca1ca4051e104e9354d3e97185d22762a6d2d4b3e80c2",
                          "typeString": "literal_string \"Rewarding: incorrect hash\""
                        }
                      ],
                      "id": 1225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1511:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:56:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1234,
                          "name": "hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1206,
                          "src": "1598:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1235,
                          "name": "signature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "1604:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1232,
                          "name": "ECDSA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7441,
                          "src": "1584:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ECDSA_$7441_$",
                            "typeString": "type(library ECDSA)"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recover",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7424,
                        "src": "1584:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (bytes32,bytes memory) pure returns (address)"
                        }
                      },
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1584:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1237,
                      "name": "_verifyRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1095,
                      "src": "1618:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1212,
                  "id": 1239,
                  "nodeType": "Return",
                  "src": "1577:61:5"
                }
              ]
            },
            "documentation": null,
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1273:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1204,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1297:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1206,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1324:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1208,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1346:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1207,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1263:111:5"
            },
            "returnParameters": {
              "id": 1212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1211,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1241,
                  "src": "1406:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1405:6:5"
            },
            "scope": 1242,
            "src": "1242:403:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1243,
        "src": "203:1445:5"
      }
    ],
    "src": "36:1613:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-12-28T08:47:24.942Z",
  "devdoc": {
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}