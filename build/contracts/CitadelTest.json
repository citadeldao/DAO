{
  "contractName": "CitadelTest",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "ChangeInflation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "ChangeVesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "InflationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "NewDaoTransport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "NewVestingTransport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "SetInflationStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countInflationPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "delegateToDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "delegateTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDaoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInflationStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSavedInflationYear",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "inflationPoint",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "inflationPct",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakingPct",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "yearlySupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "internalType": "struct CitadelInflation.InflationValues",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daoAddress",
          "type": "address"
        }
      ],
      "name": "initDaoTransport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vestAddress",
          "type": "address"
        }
      ],
      "name": "initVestingTransport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "lockHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "lockHistoryCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "lockedBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedCoins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemFromDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startInflation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "startInflationTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplyHistoryCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "updateInflation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateSnapshot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "updateVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "setTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "setInflation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"ChangeInflation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"ChangeVesting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InflationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"NewDaoTransport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"NewVestingTransport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"SetInflationStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countInflationPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegateToDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegateTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInflationStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSavedInflationYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"inflationPoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"inflationPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yearlySupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"internalType\":\"struct CitadelInflation.InflationValues\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"}],\"name\":\"initDaoTransport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vestAddress\",\"type\":\"address\"}],\"name\":\"initVestingTransport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"lockHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lockHistoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedCoins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemFromDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"setInflation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"setTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startInflation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"startInflationTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"totalSupplyHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyHistoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"updateInflation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"updateVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/pirat/Desktop/DAO_update/DAO/contracts/CitadelTest.sol\":\"CitadelTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/pirat/Desktop/DAO_update/DAO/contracts/Citadel.sol\":{\"keccak256\":\"0x76e47a4cb9f84675e1f1a48e6b3a6aa49282021bd7f3170aa4af4415c0520af8\",\"urls\":[\"bzz-raw://b86514f5b8e709ff26f96c82eec6ee99edf1dd7c20875d282cd9ad9c23d8995a\",\"dweb:/ipfs/QmXZgXnBHq7XbVsaX1tx9h1TNQnuPoJNwp12gjN1A3pF44\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/CitadelTest.sol\":{\"keccak256\":\"0xa2b5ffd3b71b4741bc10fa67865500f0fa65b88e8ebc1f374410d1115d5a2e34\",\"urls\":[\"bzz-raw://d8bc706b9d807465dae7dcc02b4b503ace0538fc24e39e72718d70a00ef7faa9\",\"dweb:/ipfs/QmfY2beVQWL89LPPhKdavoZc5ufbyBPCrXSbvtyYrozCSW\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/ICitadelDao.sol\":{\"keccak256\":\"0xd8f6039ac8a8dabc55cc471f625437fa0e6db978109930f18b783908330a0b3f\",\"urls\":[\"bzz-raw://4ce5e24674abe3be12c26a0fe9b7e031a49cb804054b5d0fca3e8e3887d15c10\",\"dweb:/ipfs/QmXR95inmjb2NGBK2PhYVNm13WPzTqMAdiRskKs5yS5Zu6\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/ICitadelVesting.sol\":{\"keccak256\":\"0xf23a41f64c9d84de4fc942597ed0c8f3f97b2a3d68123f234d46e13a73fdc83e\",\"urls\":[\"bzz-raw://850705dfe2486d8aecbf6b35c716c36f8d0b341992508724594316b1455769fa\",\"dweb:/ipfs/Qmcr7uVSsU8ahERGYvRA3pjbEbyopVJUoTkfjncpZSNENb\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/Token/CitadelInflation.sol\":{\"keccak256\":\"0x507f821ec10e314428bb43f07edbfd9cc2801878ccc8d8de22cf746c12ebdd9f\",\"urls\":[\"bzz-raw://873b9307c8cfc92fb47d78c7d019f88ef1e501ccb227a8e01de9cae13a2cd124\",\"dweb:/ipfs/QmdHsLK6oaNAoX8v3opb1X9myTDE9GV4iprynQ5Unu23Ai\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/Token/CitadelToken.sol\":{\"keccak256\":\"0xedccc029b43ec00af4a3a4b1484b6c4346fe2e67e3f3953121724c76e9fc3e7a\",\"urls\":[\"bzz-raw://4e06883fcab550df07c5bff128cda06b4e8de6f5654044f441817d47263337e7\",\"dweb:/ipfs/Qmez9Z2RiPXwZrAvAAn1stsC83BPHhWQ9FsTERU67iYCHY\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/Token/CitadelTokenLocker.sol\":{\"keccak256\":\"0x6bd4af45add7bfbb94f2706cd92548a9bc8b5a739959695c643af9dc26bf2987\",\"urls\":[\"bzz-raw://3c94a7d64ec4737c65270f139714c8998124f1437e05cd4c81dff5468b236b4a\",\"dweb:/ipfs/QmYR1MhatDqQfwxNSDke9SinSY48FwRdgZWZrkmKBKF3SA\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a4369746164656c2e6f6e6560a81b815250604051806040016040528060038152602001621610d560ea1b81525081600390805190602001906200006a9291906200051b565b508051620000809060049060208401906200051b565b50506005805460ff19166012179055506000620000a56001600160e01b03620001cc16565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506005805460ff60a81b1916905542600690815562000122906001600160e01b03620001d116565b600062000145620f4240631dcd6500620001e760201b620029731790919060201c565b90506200015d6001826001600160e01b036200023916565b62000177818061032060286001600160e01b036200032516565b6200018c60026001600160e01b036200042616565b620001c130620001b2620f4240631dcd6500620001e760201b620029731790919060201c565b6001600160e01b036200023916565b5042601455620006f6565b335b90565b6005805460ff191660ff92909216919091179055565b600082620001f85750600062000233565b828202828482816200020657fe5b0414620002305760405162461bcd60e51b81526004016200022790620005f4565b60405180910390fd5b90505b92915050565b6001600160a01b038216620002625760405162461bcd60e51b815260040162000227906200066c565b62000279600083836001600160e01b036200046916565b6200029581600254620004dd60201b62001d571790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620002c891839062001d57620004dd821b17901c565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9062000319908590620006ed565b60405180910390a35050565b600a5460ff16156200033657600080fd5b600a805460ff19166001179055838301600b55600c849055600e8490556040805160a0810182528381526020810183905290810185905260608101859052600f90608081016200038e6001600160e01b036200050516565b9052815460018181018455600093845260209384902083516005909302019182559282015192810192909255604080820151600284015560608201516003840155608090910151600490920191909155600f5490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d049162000418916000199190910190620006ed565b60405180910390a150505050565b60115460ff16156200043757600080fd5b601180546001600160a01b0390921661010002610100600160a81b031960ff1990931660011792909216919091179055565b62000481838383620004d860201b6200219f1760201c565b6103e83311620004a55760405162461bcd60e51b8152600401620002279062000635565b620004b86001600160e01b036200050b16565b15620004d85760405162461bcd60e51b81526004016200022790620006a3565b505050565b600082820183811015620002305760405162461bcd60e51b81526004016200022790620005bd565b60145490565b600554600160a81b900460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200055e57805160ff19168380011785556200058e565b828001600101855582156200058e579182015b828111156200058e57825182559160200191906001019062000571565b506200059c929150620005a0565b5090565b620001ce91905b808211156200059c5760008155600101620005a7565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526019908201527f4369746164656c546f6b656e3a2066616b652073656e64657200000000000000604082015260600190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b90815260200190565b612ab280620007066000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c806370a0823111610167578063c108a402116100ce578063f1474bd811610087578063f1474bd814610562578063f2fde38b14610582578063f3fef3a314610595578063f905c15a146105a8578063f9b7ce02146105b0578063ff1764a4146105b8576102a0565b8063c108a402146104fb578063c2ad5b741461050e578063c686781d14610521578063ca5c7b9114610534578063dd62ed3e1461053c578063e0a8ed521461054f576102a0565b8063a0a2b57311610120578063a0a2b57314610489578063a457c2d71461049c578063a694fc3a146104af578063a9059cbb146104c2578063ac3cd7c6146104d5578063bf17282a146104e8576102a0565b806370a0823114610438578063715018a61461044b5780637fa7faf81461045357806389bb6081146104665780638da5cb5b1461047957806395d89b4114610481576102a0565b806344c404641161020b57806355b28b37116101c457806355b28b37146103f257806359355736146103fa5780635c975abb1461040d5780636641d9a014610415578063692404261461042857806369668fe914610430576102a0565b806344c404641461039e5780634ab68e14146103b15780634b45aa12146103b95780634c0f38c2146103c15780634cf54195146103c95780634f91440d146103ea576102a0565b80632e17de781161025d5780632e17de7814610328578063313ce5671461033d57806339509351146103525780633ba71a151461036557806342966c681461037857806344263fcb1461038b576102a0565b806306fdde03146102a5578063095ea7b3146102c357806318160ddd146102e35780631d0a67e1146102f85780631d68702d1461030057806323b872dd14610315575b600080fd5b6102ad6105c0565b6040516102ba9190612330565b60405180910390f35b6102d66102d1366004612296565b610656565b6040516102ba9190612325565b6102eb610674565b6040516102ba9190612939565b6102eb61067a565b610308610680565b6040516102ba9190612311565b6102d6610323366004612256565b61068f565b61033b6103363660046122c0565b61071c565b005b610345610876565b6040516102ba9190612950565b6102d6610360366004612296565b61087f565b61033b610373366004612296565b6108d3565b61033b6103863660046122c0565b6108fa565b61033b610399366004612207565b61094d565b61033b6103ac366004612296565b6109dd565b6102eb610a00565b6102eb610a06565b6102eb610a0c565b6103dc6103d7366004612296565b610a12565b6040516102ba929190612942565b61033b610ace565b6102eb610c05565b6102eb610408366004612207565b610c0b565b6102d6610c26565b6103dc6104233660046122c0565b610c36565b61033b610ca3565b6102eb610cd9565b6102eb610446366004612207565b610cdf565b61033b610cfa565b61033b610461366004612207565b610d84565b6102eb610474366004612207565b610e09565b610308610e24565b6102ad610e38565b61033b6104973660046122c0565b610e99565b6102d66104aa366004612296565b610ed8565b61033b6104bd3660046122c0565b610f46565b6102d66104d0366004612296565b610fa2565b61033b6104e33660046122f0565b610fb6565b6102eb6104f6366004612207565b6110e6565b61033b6105093660046122f0565b6110f8565b61033b61051c366004612296565b61121b565b61033b61052f3660046122c0565b611260565b6102eb611353565b6102eb61054a366004612222565b611362565b61033b61055d3660046122c0565b61138d565b6105756105703660046122c0565b611407565b6040516102ba91906128ff565b61033b610590366004612207565b61148f565b61033b6105a3366004612296565b611556565b6102eb611596565b61033b61159c565b610308611665565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b5050505050905090565b600061066a610663611674565b8484611678565b5060015b92915050565b60025490565b600d5490565b6008546001600160a01b031690565b600061069c84848461172c565b610712846106a8611674565b61070d85604051806060016040528060288152602001612a30602891396001600160a01b038a166000908152600160205260408120906106e6611674565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61184d16565b611678565b5060019392505050565b60006009541180156107375750610731611879565b60095411155b61075c5760405162461bcd60e51b815260040161075390612652565b60405180910390fd5b3360009081526010602052604090205481111561077857600080fd5b61078061187f565b60115461079c9061010090046001600160a01b0316338361172c565b336000908152601060205260409020546107bc908263ffffffff611c0816565b3360009081526010602052604090819020919091558051808201909152601290806107e5611c51565b81526020016107f2611879565b905281546001818101845560009384526020808520845160029094020192835592830151910155338252601381526040808320815180830183526010845291909320548152908101610842611879565b9052815460018181018455600093845260209384902083516002909302019182559290910151910155610873611c6e565b50565b60055460ff1690565b600061066a61088c611674565b8461070d856001600061089d611674565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611d5716565b6008546001600160a01b031633146108ea57600080fd5b6108f6600a838361172c565b5050565b6103e8331161091b5760405162461bcd60e51b8152600401610753906126be565b8061092533610cdf565b10156109435760405162461bcd60e51b815260040161075390612486565b6108733382611d7c565b610955611674565b60055461010090046001600160a01b039081169116146109875760405162461bcd60e51b815260040161075390612689565b600880546001600160a01b0319166001600160a01b0383161790556040517f9e006baa245780a8a3d4098c11dd27a97c8d0c2e25b998fa057c6ab8eb079191906109d2908390612311565b60405180910390a150565b6008546001600160a01b031633146109f457600080fd5b6108f682600a8361172c565b60125490565b600f5490565b600b5490565b6001600160a01b03821660009081526013602052604081205481908310610a4b5760405162461bcd60e51b8152600401610753906125c9565b6001600160a01b0384166000908152601360205260409020805484908110610a6f57fe5b906000526020600020906002020160000154915060136000856001600160a01b03166001600160a01b031681526020019081526020016000208381548110610ab357fe5b90600052602060002090600202016001015490509250929050565b6000600954118015610ae95750610ae3611879565b60095411155b610b055760405162461bcd60e51b815260040161075390612652565b6007546001600160a01b0316610b2d5760405162461bcd60e51b815260040161075390612383565b60075460405163ddeae03360e01b81526000916001600160a01b03169063ddeae03390610b5e903390600401612311565b602060405180830381600087803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb091908101906122d8565b905060008111610bbf57600080fd5b610bc761187f565b601154610be59060019061010090046001600160a01b03168361172c565b336000908152601060205260409020546107bc908263ffffffff611d5716565b60095490565b6001600160a01b031660009081526010602052604090205490565b600554600160a81b900460ff1690565b60125460009081908310610c5c5760405162461bcd60e51b8152600401610753906125c9565b60128381548110610c6957fe5b906000526020600020906002020160000154915060128381548110610c8a57fe5b9060005260206000209060020201600101549050915091565b6007546001600160a01b0316331480610cc657506008546001600160a01b031633145b610ccf57600080fd5b610cd761187f565b565b60065481565b6001600160a01b031660009081526020819052604090205490565b610d02611674565b60055461010090046001600160a01b03908116911614610d345760405162461bcd60e51b815260040161075390612689565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b610d8c611674565b60055461010090046001600160a01b03908116911614610dbe5760405162461bcd60e51b815260040161075390612689565b600780546001600160a01b0319166001600160a01b0383161790556040517f68e937a920bca55a7c599d782170d8606e7d5fe31c1c9cdc4c1fd7c74ca1de1c906109d2908390612311565b6001600160a01b031660009081526013602052604090205490565b60055461010090046001600160a01b031690565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561064c5780601f106106215761010080835404028352916020019161064c565b610ea1611674565b60055461010090046001600160a01b03908116911614610ed35760405162461bcd60e51b815260040161075390612689565b601455565b600061066a610ee5611674565b8461070d85604051806060016040528060258152602001612a586025913960016000610f0f611674565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61184d16565b6000600954118015610f615750610f5b611879565b60095411155b610f7d5760405162461bcd60e51b815260040161075390612652565b610f8561187f565b601154610be590339061010090046001600160a01b03168361172c565b600061066a610faf611674565b848461172c565b6008546001600160a01b03163314610fcd57600080fd5b600a8110158015610fdf5750605a8111155b610ffb5760405162461bcd60e51b815260040161075390612823565b6110036121c1565b600f8054600019810190811061101557fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611071611879565b03905062278d008110156110975760405162461bcd60e51b815260040161075390612869565b61109f61187f565b6110a883611e6a565b837f96a647810411309169e354743b6a4e9d05e3c777f5fae278e65f6168fe7279ba846040516110d89190612939565b60405180910390a250505050565b60106020526000908152604090205481565b6008546001600160a01b0316331461110f57600080fd5b60c881101580156111225750610bb88111155b61113e5760405162461bcd60e51b81526004016107539061260d565b6111466121c1565b600f8054600019810190811061115857fe5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050600081608001516111b4611879565b03905062278d008110156111da5760405162461bcd60e51b815260040161075390612869565b6111e261187f565b6111eb83612013565b837f8f4db2ceeda2c579bf7d6f7036f9f300565d76719308713e3c85d3484b4ebb30846040516110d89190612939565b611223611674565b60055461010090046001600160a01b039081169116146112555760405162461bcd60e51b815260040161075390612689565b6108f630838361172c565b611268611674565b60055461010090046001600160a01b0390811691161461129a5760405162461bcd60e51b815260040161075390612689565b60095415806112b157506112ac611879565b600954115b6112cd5760405162461bcd60e51b81526004016107539061277b565b6112d5611879565b81116112f35760405162461bcd60e51b815260040161075390612414565b6009819055600d819055600f805482919060009061130d57fe5b9060005260206000209060050201600401819055507f9fc22fadaf2a60d0fc0b55f067aab3d342cd367b0ab3ffb49d3a4f8420768a3c6009546040516109d29190612939565b600061135d611c51565b905090565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611395611674565b60055461010090046001600160a01b039081169116146113c75760405162461bcd60e51b815260040161075390612689565b60c881101580156113da5750610bb88111155b6113f65760405162461bcd60e51b81526004016107539061260d565b6113fe61187f565b61087381612013565b61140f6121c1565b600f5482106114305760405162461bcd60e51b815260040161075390612587565b600f828154811061143d57fe5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b611497611674565b60055461010090046001600160a01b039081169116146114c95760405162461bcd60e51b815260040161075390612689565b6001600160a01b0381166114ef5760405162461bcd60e51b8152600401610753906124c8565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6007546001600160a01b031633148061157957506008546001600160a01b031633145b61158257600080fd5b61158a61187f565b6108f66001838361172c565b60065490565b6115a4611674565b60055461010090046001600160a01b039081169116146115d65760405162461bcd60e51b815260040161075390612689565b600954156115f65760405162461bcd60e51b81526004016107539061277b565b6115fe611879565b6009819055600d819055600f805460009061161557fe5b9060005260206000209060050201600401819055507f9fc22fadaf2a60d0fc0b55f067aab3d342cd367b0ab3ffb49d3a4f8420768a3c60095460405161165b9190612939565b60405180910390a1565b6007546001600160a01b031690565b3390565b6001600160a01b03831661169e5760405162461bcd60e51b8152600401610753906127b2565b6001600160a01b0382166116c45760405162461bcd60e51b81526004016107539061250e565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061171f908590612939565b60405180910390a3505050565b6001600160a01b0383166117525760405162461bcd60e51b815260040161075390612736565b6001600160a01b0382166117785760405162461bcd60e51b8152600401610753906123d1565b61178383838361214e565b6117c681604051806060016040528060268152602001612a0a602691396001600160a01b038616600090815260208190526040902054919063ffffffff61184d16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546117fb908263ffffffff611d5716565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061171f908590612939565b600081848411156118715760405162461bcd60e51b81526004016107539190612330565b505050900390565b60145490565b600c54600b541161188f57610cd7565b6000600d5461189c611879565b0390506301e133808110156118b15750610cd7565b6118b96121c1565b600f805460001981019081106118cb57fe5b600091825260208083206040805160a0810182526005909402909101805480855260018201549385019390935260028101549184019190915260038101546060840152600401546080830152909250905b6301e133808404811015611bfc576301e13380600d6000828254019250508190555060006127106301e133808560800151600d540385600e5402028161195e57fe5b048161196657fe5b049050600d54846080018181525050600b54600c54820110158061198a575060c883105b15611a5e57600b54600c81905550600f6040518060a001604052806119ad6121a4565b815260208781015181830152600c546040808401829052606080850192909252600d54608094850152855460018181018855600097885296849020865160059092020190815592850151958301959095558385015160028301558301516003820155910151600490910155600f5490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491611a50916000199190910190612939565b60405180910390a150611bfc565b600c80548201905560c8831115611a885760328303925060c8831015611a835760c892505b611aac565b8260c81415611aac576000611a9b6121a4565b905060c8811015611aaa578093505b505b6040805160a081018252848152602086810151908201908152600c5482840181815260608401918252600d5460808501908152600f8054600181018255600082905295517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80260059097029687015593517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80386015590517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80485015590517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac805840155517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac806909201919091555490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491611beb916000199190910190612939565b60405180910390a15060010161191c565b5050600c54600e555050565b6000611c4a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061184d565b9392505050565b60115460009061135d9061010090046001600160a01b0316610cdf565b6008546001600160a01b031615611ce25760085460405163070c88f360e41b81526001600160a01b03909116906370c88f3090611caf903390600401612311565b600060405180830381600087803b158015611cc957600080fd5b505af1158015611cdd573d6000803e3d6000fd5b505050505b6007546001600160a01b031615610cd7576007546040516303d9eba760e41b81526001600160a01b0390911690633d9eba7090611d23903390600401612311565b600060405180830381600087803b158015611d3d57600080fd5b505af1158015611d51573d6000803e3d6000fd5b50505050565b600082820183811015611c4a5760405162461bcd60e51b815260040161075390612550565b6001600160a01b038216611da25760405162461bcd60e51b8152600401610753906126f5565b611dae8260008361214e565b611df1816040518060600160405280602281526020016129e8602291396001600160a01b038516600090815260208190526040902054919063ffffffff61184d16565b6001600160a01b038316600090815260208190526040902055600254611e1d908263ffffffff611c0816565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611e5e908590612939565b60405180910390a35050565b600c54600b541415611e7b57600080fd5b611e836121c1565b600f80546000198101908110611e9557fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611ef1611879565b0390506127106301e13380828460000151600e54020281611f0e57fe5b0481611f1657fe5b04600c60008282540192505081905550600b54600c5410611f495760405162461bcd60e51b815260040161075390612457565b600f6040518060a0016040528084600001518152602001858152602001600c548152602001600e548152602001611f7e611879565b9052815460018181018455600093845260209384902083516005909302019182559282015192810192909255604080820151600284015560608201516003840155608090910151600490920191909155600f5490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491612006916000199190910190612939565b60405180910390a1505050565b600c54600b54141561202457600080fd5b61202c6121c1565b600f8054600019810190811061203e57fe5b90600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000816080015161209a611879565b0390506127106301e13380828460000151600e540202816120b757fe5b04816120bf57fe5b04600c60008282540192505081905550600b54600c54106120f25760405162461bcd60e51b815260040161075390612457565b6120fa6121a4565b8311156121195760405162461bcd60e51b8152600401610753906127f6565b600f6040518060a0016040528085815260200184602001518152602001600c548152602001600e548152602001611f7e611879565b61215983838361219f565b6103e8331161217a5760405162461bcd60e51b8152600401610753906126be565b612182610c26565b1561219f5760405162461bcd60e51b8152600401610753906128b5565b505050565b6000600c54600c54600b540361271002816121bb57fe5b04905090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461066e57600080fd5b600060208284031215612218578081fd5b611c4a83836121f0565b60008060408385031215612234578081fd5b61223e84846121f0565b915061224d84602085016121f0565b90509250929050565b60008060006060848603121561226a578081fd5b83356122758161295e565b925060208401356122858161295e565b929592945050506040919091013590565b600080604083850312156122a8578182fd5b6122b284846121f0565b946020939093013593505050565b6000602082840312156122d1578081fd5b5035919050565b6000602082840312156122e9578081fd5b5051919050565b60008060408385031215612302578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561235c57858101830151858201604001528201612340565b8181111561236d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f4369746164656c546f6b656e4c6f636b65723a2076657374696e6720636f6e7460408201526d1c9858dd081d5b9919599a5b995960921b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526023908201527f5374617274696e672064617465206d75737420626520696e207468652066757460408201526275726560e81b606082015260800190565b60208082526015908201527413585e081cdd5c1c1b1e481a5cc81c995858da1959605a1b604082015260600190565b60208082526022908201527f4369746164656c546f6b656e3a20696e73756666696369656e742062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526022908201527f4369746164656c496e666c6174696f6e3a20756e657870656374656420696e646040820152610caf60f31b606082015260800190565b60208082526024908201527f4369746164656c546f6b656e4c6f636b65723a20756e657870656374656420696040820152630dcc8caf60e31b606082015260800190565b60208082526025908201527f50657263656e74616765206d757374206265206265747765656e20322520616e604082015264642033302560d81b606082015260800190565b6020808252601d908201527f4369746164656c496e666c6174696f6e3a20636f6d696e6720736f6f6e000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526019908201527f4369746164656c546f6b656e3a2066616b652073656e64657200000000000000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252601c908201527f496e666c6174696f6e20697320616c7265616479207374617274656400000000604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b602080825260139082015272546f6f20686967682070657263656e7461676560681b604082015260600190565b60208082526026908201527f50657263656e74616765206d757374206265206265747765656e2031302520616040820152656e642039302560d01b606082015260800190565b6020808252602c908201527f596f75206861766520746f20776169742033302064617973206166746572206c60408201526b617374206368616e67696e6760a01b606082015260800190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6001600160a01b038116811461087357600080fd5b6000826129825750600061066e565b8282028284828161298f57fe5b0414611c4a5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161075356fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212200e16a688d9852f74ead7d182985b4f22533ebb9bd53b3ff0f43853765e0fc39464736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102a05760003560e01c806370a0823111610167578063c108a402116100ce578063f1474bd811610087578063f1474bd814610562578063f2fde38b14610582578063f3fef3a314610595578063f905c15a146105a8578063f9b7ce02146105b0578063ff1764a4146105b8576102a0565b8063c108a402146104fb578063c2ad5b741461050e578063c686781d14610521578063ca5c7b9114610534578063dd62ed3e1461053c578063e0a8ed521461054f576102a0565b8063a0a2b57311610120578063a0a2b57314610489578063a457c2d71461049c578063a694fc3a146104af578063a9059cbb146104c2578063ac3cd7c6146104d5578063bf17282a146104e8576102a0565b806370a0823114610438578063715018a61461044b5780637fa7faf81461045357806389bb6081146104665780638da5cb5b1461047957806395d89b4114610481576102a0565b806344c404641161020b57806355b28b37116101c457806355b28b37146103f257806359355736146103fa5780635c975abb1461040d5780636641d9a014610415578063692404261461042857806369668fe914610430576102a0565b806344c404641461039e5780634ab68e14146103b15780634b45aa12146103b95780634c0f38c2146103c15780634cf54195146103c95780634f91440d146103ea576102a0565b80632e17de781161025d5780632e17de7814610328578063313ce5671461033d57806339509351146103525780633ba71a151461036557806342966c681461037857806344263fcb1461038b576102a0565b806306fdde03146102a5578063095ea7b3146102c357806318160ddd146102e35780631d0a67e1146102f85780631d68702d1461030057806323b872dd14610315575b600080fd5b6102ad6105c0565b6040516102ba9190612330565b60405180910390f35b6102d66102d1366004612296565b610656565b6040516102ba9190612325565b6102eb610674565b6040516102ba9190612939565b6102eb61067a565b610308610680565b6040516102ba9190612311565b6102d6610323366004612256565b61068f565b61033b6103363660046122c0565b61071c565b005b610345610876565b6040516102ba9190612950565b6102d6610360366004612296565b61087f565b61033b610373366004612296565b6108d3565b61033b6103863660046122c0565b6108fa565b61033b610399366004612207565b61094d565b61033b6103ac366004612296565b6109dd565b6102eb610a00565b6102eb610a06565b6102eb610a0c565b6103dc6103d7366004612296565b610a12565b6040516102ba929190612942565b61033b610ace565b6102eb610c05565b6102eb610408366004612207565b610c0b565b6102d6610c26565b6103dc6104233660046122c0565b610c36565b61033b610ca3565b6102eb610cd9565b6102eb610446366004612207565b610cdf565b61033b610cfa565b61033b610461366004612207565b610d84565b6102eb610474366004612207565b610e09565b610308610e24565b6102ad610e38565b61033b6104973660046122c0565b610e99565b6102d66104aa366004612296565b610ed8565b61033b6104bd3660046122c0565b610f46565b6102d66104d0366004612296565b610fa2565b61033b6104e33660046122f0565b610fb6565b6102eb6104f6366004612207565b6110e6565b61033b6105093660046122f0565b6110f8565b61033b61051c366004612296565b61121b565b61033b61052f3660046122c0565b611260565b6102eb611353565b6102eb61054a366004612222565b611362565b61033b61055d3660046122c0565b61138d565b6105756105703660046122c0565b611407565b6040516102ba91906128ff565b61033b610590366004612207565b61148f565b61033b6105a3366004612296565b611556565b6102eb611596565b61033b61159c565b610308611665565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b5050505050905090565b600061066a610663611674565b8484611678565b5060015b92915050565b60025490565b600d5490565b6008546001600160a01b031690565b600061069c84848461172c565b610712846106a8611674565b61070d85604051806060016040528060288152602001612a30602891396001600160a01b038a166000908152600160205260408120906106e6611674565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61184d16565b611678565b5060019392505050565b60006009541180156107375750610731611879565b60095411155b61075c5760405162461bcd60e51b815260040161075390612652565b60405180910390fd5b3360009081526010602052604090205481111561077857600080fd5b61078061187f565b60115461079c9061010090046001600160a01b0316338361172c565b336000908152601060205260409020546107bc908263ffffffff611c0816565b3360009081526010602052604090819020919091558051808201909152601290806107e5611c51565b81526020016107f2611879565b905281546001818101845560009384526020808520845160029094020192835592830151910155338252601381526040808320815180830183526010845291909320548152908101610842611879565b9052815460018181018455600093845260209384902083516002909302019182559290910151910155610873611c6e565b50565b60055460ff1690565b600061066a61088c611674565b8461070d856001600061089d611674565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611d5716565b6008546001600160a01b031633146108ea57600080fd5b6108f6600a838361172c565b5050565b6103e8331161091b5760405162461bcd60e51b8152600401610753906126be565b8061092533610cdf565b10156109435760405162461bcd60e51b815260040161075390612486565b6108733382611d7c565b610955611674565b60055461010090046001600160a01b039081169116146109875760405162461bcd60e51b815260040161075390612689565b600880546001600160a01b0319166001600160a01b0383161790556040517f9e006baa245780a8a3d4098c11dd27a97c8d0c2e25b998fa057c6ab8eb079191906109d2908390612311565b60405180910390a150565b6008546001600160a01b031633146109f457600080fd5b6108f682600a8361172c565b60125490565b600f5490565b600b5490565b6001600160a01b03821660009081526013602052604081205481908310610a4b5760405162461bcd60e51b8152600401610753906125c9565b6001600160a01b0384166000908152601360205260409020805484908110610a6f57fe5b906000526020600020906002020160000154915060136000856001600160a01b03166001600160a01b031681526020019081526020016000208381548110610ab357fe5b90600052602060002090600202016001015490509250929050565b6000600954118015610ae95750610ae3611879565b60095411155b610b055760405162461bcd60e51b815260040161075390612652565b6007546001600160a01b0316610b2d5760405162461bcd60e51b815260040161075390612383565b60075460405163ddeae03360e01b81526000916001600160a01b03169063ddeae03390610b5e903390600401612311565b602060405180830381600087803b158015610b7857600080fd5b505af1158015610b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb091908101906122d8565b905060008111610bbf57600080fd5b610bc761187f565b601154610be59060019061010090046001600160a01b03168361172c565b336000908152601060205260409020546107bc908263ffffffff611d5716565b60095490565b6001600160a01b031660009081526010602052604090205490565b600554600160a81b900460ff1690565b60125460009081908310610c5c5760405162461bcd60e51b8152600401610753906125c9565b60128381548110610c6957fe5b906000526020600020906002020160000154915060128381548110610c8a57fe5b9060005260206000209060020201600101549050915091565b6007546001600160a01b0316331480610cc657506008546001600160a01b031633145b610ccf57600080fd5b610cd761187f565b565b60065481565b6001600160a01b031660009081526020819052604090205490565b610d02611674565b60055461010090046001600160a01b03908116911614610d345760405162461bcd60e51b815260040161075390612689565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b610d8c611674565b60055461010090046001600160a01b03908116911614610dbe5760405162461bcd60e51b815260040161075390612689565b600780546001600160a01b0319166001600160a01b0383161790556040517f68e937a920bca55a7c599d782170d8606e7d5fe31c1c9cdc4c1fd7c74ca1de1c906109d2908390612311565b6001600160a01b031660009081526013602052604090205490565b60055461010090046001600160a01b031690565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561064c5780601f106106215761010080835404028352916020019161064c565b610ea1611674565b60055461010090046001600160a01b03908116911614610ed35760405162461bcd60e51b815260040161075390612689565b601455565b600061066a610ee5611674565b8461070d85604051806060016040528060258152602001612a586025913960016000610f0f611674565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61184d16565b6000600954118015610f615750610f5b611879565b60095411155b610f7d5760405162461bcd60e51b815260040161075390612652565b610f8561187f565b601154610be590339061010090046001600160a01b03168361172c565b600061066a610faf611674565b848461172c565b6008546001600160a01b03163314610fcd57600080fd5b600a8110158015610fdf5750605a8111155b610ffb5760405162461bcd60e51b815260040161075390612823565b6110036121c1565b600f8054600019810190811061101557fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611071611879565b03905062278d008110156110975760405162461bcd60e51b815260040161075390612869565b61109f61187f565b6110a883611e6a565b837f96a647810411309169e354743b6a4e9d05e3c777f5fae278e65f6168fe7279ba846040516110d89190612939565b60405180910390a250505050565b60106020526000908152604090205481565b6008546001600160a01b0316331461110f57600080fd5b60c881101580156111225750610bb88111155b61113e5760405162461bcd60e51b81526004016107539061260d565b6111466121c1565b600f8054600019810190811061115857fe5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050600081608001516111b4611879565b03905062278d008110156111da5760405162461bcd60e51b815260040161075390612869565b6111e261187f565b6111eb83612013565b837f8f4db2ceeda2c579bf7d6f7036f9f300565d76719308713e3c85d3484b4ebb30846040516110d89190612939565b611223611674565b60055461010090046001600160a01b039081169116146112555760405162461bcd60e51b815260040161075390612689565b6108f630838361172c565b611268611674565b60055461010090046001600160a01b0390811691161461129a5760405162461bcd60e51b815260040161075390612689565b60095415806112b157506112ac611879565b600954115b6112cd5760405162461bcd60e51b81526004016107539061277b565b6112d5611879565b81116112f35760405162461bcd60e51b815260040161075390612414565b6009819055600d819055600f805482919060009061130d57fe5b9060005260206000209060050201600401819055507f9fc22fadaf2a60d0fc0b55f067aab3d342cd367b0ab3ffb49d3a4f8420768a3c6009546040516109d29190612939565b600061135d611c51565b905090565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611395611674565b60055461010090046001600160a01b039081169116146113c75760405162461bcd60e51b815260040161075390612689565b60c881101580156113da5750610bb88111155b6113f65760405162461bcd60e51b81526004016107539061260d565b6113fe61187f565b61087381612013565b61140f6121c1565b600f5482106114305760405162461bcd60e51b815260040161075390612587565b600f828154811061143d57fe5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b611497611674565b60055461010090046001600160a01b039081169116146114c95760405162461bcd60e51b815260040161075390612689565b6001600160a01b0381166114ef5760405162461bcd60e51b8152600401610753906124c8565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6007546001600160a01b031633148061157957506008546001600160a01b031633145b61158257600080fd5b61158a61187f565b6108f66001838361172c565b60065490565b6115a4611674565b60055461010090046001600160a01b039081169116146115d65760405162461bcd60e51b815260040161075390612689565b600954156115f65760405162461bcd60e51b81526004016107539061277b565b6115fe611879565b6009819055600d819055600f805460009061161557fe5b9060005260206000209060050201600401819055507f9fc22fadaf2a60d0fc0b55f067aab3d342cd367b0ab3ffb49d3a4f8420768a3c60095460405161165b9190612939565b60405180910390a1565b6007546001600160a01b031690565b3390565b6001600160a01b03831661169e5760405162461bcd60e51b8152600401610753906127b2565b6001600160a01b0382166116c45760405162461bcd60e51b81526004016107539061250e565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061171f908590612939565b60405180910390a3505050565b6001600160a01b0383166117525760405162461bcd60e51b815260040161075390612736565b6001600160a01b0382166117785760405162461bcd60e51b8152600401610753906123d1565b61178383838361214e565b6117c681604051806060016040528060268152602001612a0a602691396001600160a01b038616600090815260208190526040902054919063ffffffff61184d16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546117fb908263ffffffff611d5716565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061171f908590612939565b600081848411156118715760405162461bcd60e51b81526004016107539190612330565b505050900390565b60145490565b600c54600b541161188f57610cd7565b6000600d5461189c611879565b0390506301e133808110156118b15750610cd7565b6118b96121c1565b600f805460001981019081106118cb57fe5b600091825260208083206040805160a0810182526005909402909101805480855260018201549385019390935260028101549184019190915260038101546060840152600401546080830152909250905b6301e133808404811015611bfc576301e13380600d6000828254019250508190555060006127106301e133808560800151600d540385600e5402028161195e57fe5b048161196657fe5b049050600d54846080018181525050600b54600c54820110158061198a575060c883105b15611a5e57600b54600c81905550600f6040518060a001604052806119ad6121a4565b815260208781015181830152600c546040808401829052606080850192909252600d54608094850152855460018181018855600097885296849020865160059092020190815592850151958301959095558385015160028301558301516003820155910151600490910155600f5490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491611a50916000199190910190612939565b60405180910390a150611bfc565b600c80548201905560c8831115611a885760328303925060c8831015611a835760c892505b611aac565b8260c81415611aac576000611a9b6121a4565b905060c8811015611aaa578093505b505b6040805160a081018252848152602086810151908201908152600c5482840181815260608401918252600d5460808501908152600f8054600181018255600082905295517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80260059097029687015593517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80386015590517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80485015590517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac805840155517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac806909201919091555490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491611beb916000199190910190612939565b60405180910390a15060010161191c565b5050600c54600e555050565b6000611c4a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061184d565b9392505050565b60115460009061135d9061010090046001600160a01b0316610cdf565b6008546001600160a01b031615611ce25760085460405163070c88f360e41b81526001600160a01b03909116906370c88f3090611caf903390600401612311565b600060405180830381600087803b158015611cc957600080fd5b505af1158015611cdd573d6000803e3d6000fd5b505050505b6007546001600160a01b031615610cd7576007546040516303d9eba760e41b81526001600160a01b0390911690633d9eba7090611d23903390600401612311565b600060405180830381600087803b158015611d3d57600080fd5b505af1158015611d51573d6000803e3d6000fd5b50505050565b600082820183811015611c4a5760405162461bcd60e51b815260040161075390612550565b6001600160a01b038216611da25760405162461bcd60e51b8152600401610753906126f5565b611dae8260008361214e565b611df1816040518060600160405280602281526020016129e8602291396001600160a01b038516600090815260208190526040902054919063ffffffff61184d16565b6001600160a01b038316600090815260208190526040902055600254611e1d908263ffffffff611c0816565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611e5e908590612939565b60405180910390a35050565b600c54600b541415611e7b57600080fd5b611e836121c1565b600f80546000198101908110611e9557fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611ef1611879565b0390506127106301e13380828460000151600e54020281611f0e57fe5b0481611f1657fe5b04600c60008282540192505081905550600b54600c5410611f495760405162461bcd60e51b815260040161075390612457565b600f6040518060a0016040528084600001518152602001858152602001600c548152602001600e548152602001611f7e611879565b9052815460018181018455600093845260209384902083516005909302019182559282015192810192909255604080820151600284015560608201516003840155608090910151600490920191909155600f5490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491612006916000199190910190612939565b60405180910390a1505050565b600c54600b54141561202457600080fd5b61202c6121c1565b600f8054600019810190811061203e57fe5b90600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000816080015161209a611879565b0390506127106301e13380828460000151600e540202816120b757fe5b04816120bf57fe5b04600c60008282540192505081905550600b54600c54106120f25760405162461bcd60e51b815260040161075390612457565b6120fa6121a4565b8311156121195760405162461bcd60e51b8152600401610753906127f6565b600f6040518060a0016040528085815260200184602001518152602001600c548152602001600e548152602001611f7e611879565b61215983838361219f565b6103e8331161217a5760405162461bcd60e51b8152600401610753906126be565b612182610c26565b1561219f5760405162461bcd60e51b8152600401610753906128b5565b505050565b6000600c54600c54600b540361271002816121bb57fe5b04905090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461066e57600080fd5b600060208284031215612218578081fd5b611c4a83836121f0565b60008060408385031215612234578081fd5b61223e84846121f0565b915061224d84602085016121f0565b90509250929050565b60008060006060848603121561226a578081fd5b83356122758161295e565b925060208401356122858161295e565b929592945050506040919091013590565b600080604083850312156122a8578182fd5b6122b284846121f0565b946020939093013593505050565b6000602082840312156122d1578081fd5b5035919050565b6000602082840312156122e9578081fd5b5051919050565b60008060408385031215612302578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561235c57858101830151858201604001528201612340565b8181111561236d5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f4369746164656c546f6b656e4c6f636b65723a2076657374696e6720636f6e7460408201526d1c9858dd081d5b9919599a5b995960921b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526023908201527f5374617274696e672064617465206d75737420626520696e207468652066757460408201526275726560e81b606082015260800190565b60208082526015908201527413585e081cdd5c1c1b1e481a5cc81c995858da1959605a1b604082015260600190565b60208082526022908201527f4369746164656c546f6b656e3a20696e73756666696369656e742062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526022908201527f4369746164656c496e666c6174696f6e3a20756e657870656374656420696e646040820152610caf60f31b606082015260800190565b60208082526024908201527f4369746164656c546f6b656e4c6f636b65723a20756e657870656374656420696040820152630dcc8caf60e31b606082015260800190565b60208082526025908201527f50657263656e74616765206d757374206265206265747765656e20322520616e604082015264642033302560d81b606082015260800190565b6020808252601d908201527f4369746164656c496e666c6174696f6e3a20636f6d696e6720736f6f6e000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526019908201527f4369746164656c546f6b656e3a2066616b652073656e64657200000000000000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252601c908201527f496e666c6174696f6e20697320616c7265616479207374617274656400000000604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b602080825260139082015272546f6f20686967682070657263656e7461676560681b604082015260600190565b60208082526026908201527f50657263656e74616765206d757374206265206265747765656e2031302520616040820152656e642039302560d01b606082015260800190565b6020808252602c908201527f596f75206861766520746f20776169742033302064617973206166746572206c60408201526b617374206368616e67696e6760a01b606082015260800190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6001600160a01b038116811461087357600080fd5b6000826129825750600061066e565b8282028284828161298f57fe5b0414611c4a5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161075356fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212200e16a688d9852f74ead7d182985b4f22533ebb9bd53b3ff0f43853765e0fc39464736f6c63430006020033",
  "sourceMap": "121:547:29:-:0;;;191:70;8:9:-1;5:2;;;30:1;27;20:12;5:2;191:70:29;2013:141:54;;;;;;;;;;;;;-1:-1:-1;;;2013:141:54;;;;;;;;;;;;;;;;-1:-1:-1;;;2013:141:54;;;2093:4;2085:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2107:16:54;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:54;:14;;-1:-1:-1;;2133:14:54;2145:2;2133:14;;;-1:-1:-1;2133:9:54;885:12:51;-1:-1:-1;;;;;885:10:51;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:51;;-1:-1:-1;;;;;907:18:51;;;;;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:51;-1:-1:-1;;940:43:51;;-1:-1:-1;;940:43:51;-1:-1:-1;923:7:58;:15;;-1:-1:-1;;;;923:15:58;;;1123::47;1110:10;:28;;;1149:17;;-1:-1:-1;;;;;1149:14:47;:17;:::i;:::-;246:14:24;263:24;283:3;268:9;263:19;;;;;;:24;;;;:::i;:::-;246:41;-1:-1:-1;297:28:24;311:1;246:41;-1:-1:-1;;;;;297:5:24;:28;:::i;:::-;336:45;351:9;;373:3;378:2;-1:-1:-1;;;;;336:14:24;:45;:::i;:::-;392:35;424:1;-1:-1:-1;;;;;392:23:24;:35;:::i;:::-;438:46;452:4;459:24;479:3;464:9;459:19;;;;;;:24;;;;:::i;:::-;-1:-1:-1;;;;;438:5:24;:46;:::i;:::-;-1:-1:-1;239:15:29;227:9;:27;121:547;;590:104:49;677:10;590:104;;:::o;10020:88:54:-;10080:9;:21;;-1:-1:-1;;10080:21:54;;;;;;;;;;;;10020:88::o;2180:459:53:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:53;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:53;;;;;;;;;;;;;;;;;2631:1;-1:-1:-1;2180:459:53;;;;;:::o;7835:370:54:-;-1:-1:-1;;;;;7918:21:54;;7910:65;;;;-1:-1:-1;;;7910:65:54;;;;;;;;;7986:49;8015:1;8019:7;8028:6;-1:-1:-1;;;;;7986:20:54;:49;:::i;:::-;8061:24;8078:6;8061:12;;:16;;;;;;:24;;;;:::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:54;;:9;:18;;;;;;;;;;;;:30;;8139:6;;8116:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8095:18:54;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;8095:18;;:9;8161:37;;;;8191:6;;8161:37;;;;;;;;;;7835:370;;:::o;6695:526:46:-;6855:14;;;;6854:15;6846:24;;;;;;6881:14;:21;;-1:-1:-1;;6881:21:46;6898:4;6881:21;;;6926:22;;;6913:10;:35;6958:15;:26;;;6994:19;:30;;;7058:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7035:17;;7058:93;;;7138:12;-1:-1:-1;;;;;7138:10:46;:12;:::i;:::-;7058:93;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;7035:117:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7184:17;:24;7167:46;;;;;;-1:-1:-1;;7184:28:46;;;;;7167:46;;;;;;;;;;6695:526;;;;:::o;3631:182:48:-;3717:14;;;;3716:15;3708:24;;;;;;3743:14;:21;;-1:-1:-1;;;;;3774:31:48;;;3743:21;3774:31;-1:-1:-1;;;;;;;;3743:21:48;;;3760:4;3743:21;3774:31;;;;;;;;;;3631:182::o;2343:305:47:-;2451:44;2478:4;2484:2;2488:6;2451:26;;;;;:44;;:::i;:::-;2533:4;2519:10;2514:23;2506:61;;;;-1:-1:-1;;;2506:61:47;;;;;;;;;2586:8;-1:-1:-1;;;;;2586:6:47;:8;:::i;:::-;2585:9;2577:64;;;;-1:-1:-1;;;2577:64:47;;;;;;;;;2343:305;;;:::o;874:176:53:-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:53;;;;;;;;358:93:29;435:9;;358:93;:::o;1040:76:58:-;1102:7;;-1:-1:-1;;;1102:7:58;;;;;1040:76::o;121:547:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;121:547:29;;;-1:-1:-1;121:547:29;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;1902:407:-1;2093:2;2107:47;;;230:2;2078:18;;;4296:19;266:29;4336:14;;;246:50;315:12;;;2064:245;2316:407;2507:2;2521:47;;;566:2;2492:18;;;4296:19;602:34;4336:14;;;582:55;-1:-1;;;657:12;;;650:25;694:12;;;2478:245;2730:407;2921:2;2935:47;;;945:2;2906:18;;;4296:19;981:27;4336:14;;;961:48;1028:12;;;2892:245;3144:407;3335:2;3349:47;;;1279:2;3320:18;;;4296:19;1315:33;4336:14;;;1295:54;1368:12;;;3306:245;3558:407;3749:2;3763:47;;;1619:2;3734:18;;;4296:19;1655:34;4336:14;;;1635:55;-1:-1;;;1710:12;;;1703:34;1756:12;;;3720:245;3972:213;1853:37;;;4090:2;4075:18;;4061:124;;121:547:29;;;;;;",
  "deployedSourceMap": "121:547:29:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;121:547:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:54;;;:::i;:::-;;;;;;;;;;;;;;;;4255:166;;;;;;;;;:::i;:::-;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;1070:109:46;;;:::i;1959:94:47:-;;;:::i;:::-;;;;;;;;4881:317:54;;;;;;;;;:::i;2156:535:48:-;;;;;;;;;:::i;:::-;;3121:81:54;;;:::i;:::-;;;;;;;;5593:215;;;;;;;;;:::i;2203:134:47:-;;;;;;;;;:::i;1269:237::-;;;;;;;;;:::i;1799:154::-;;;;;;;;;:::i;2059:138::-;;;;;;;;;:::i;720:124:48:-;;;:::i;1512:113:46:-;;;:::i;1185:91::-;;;:::i;1320:336:48:-;;;;;;;;;:::i;:::-;;;;;;;;;2697:672;;;:::i;956:108:46:-;;;:::i;496:115:48:-;;;;;;;;;:::i;1040:76:58:-;;;:::i;850:329:48:-;;;;;;;;;:::i;2587:102:46:-;;;:::i;480:22:47:-;;;:::i;3418:117:54:-;;;;;;;;;:::i;1689:145:51:-;;;:::i;1512:173:47:-;;;;;;;;;:::i;1185:129:48:-;;;;;;;;;:::i;1066:77:51:-;;;:::i;2413:85:54:-;;;:::i;267::29:-;;;;;;;;;:::i;6295:266:54:-;;;;;;;;;:::i;1662:488:48:-;;;;;;;;;:::i;3738:172:54:-;;;;;;;;;:::i;3221:512:46:-;;;;;;;;;:::i;254:44:48:-;;;;;;;;;:::i;2695:520:46:-;;;;;;;;;:::i;497:122:24:-;;;;;;;;;:::i;1966:447:46:-;;;;;;;;;:::i;617:97:48:-;;;:::i;3968:149:54:-;;;;;;;;;:::i;457:208:29:-;;;;;;;;;:::i;1282:224:46:-;;;;;;;;;:::i;:::-;;;;;;;;1983:240:51;;;;;;;;;:::i;2419:162:46:-;;;;;;;;;:::i;1180:83:47:-;;;:::i;1631:329:46:-;;;:::i;1691:102:47:-;;;:::i;2219:81:54:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:54;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;1070:109:46:-;1153:19;;1070:109;:::o;1959:94:47:-;2041:4;;-1:-1:-1;;;;;2041:4:47;1959:94;:::o;4881:317:54:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:54;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:54;;;;;;;;;;;;-1:-1:-1;5080:33:54;;;:89;;:37;:89;:::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:54;4881:317;;;;;:::o;2156:535:48:-;859:1:46;838:18;;:22;:60;;;;;886:12;:10;:12::i;:::-;864:18;;:34;;838:60;830:102;;;;-1:-1:-1;;;830:102:46;;;;;;;;;;;;;;;;;2242:10:48::1;2230:23;::::0;;;:11:::1;:23;::::0;;;;;:33;-1:-1:-1;2230:33:48::1;2222:42;;;::::0;::::1;;2275:24;:22;:24::i;:::-;2320:14;::::0;2310:45:::1;::::0;2320:14:::1;::::0;::::1;-1:-1:-1::0;;;;;2320:14:48::1;2336:10;2348:6:::0;2310:9:::1;:45::i;:::-;2403:10;2391:23;::::0;;;:11:::1;:23;::::0;;;;;:35:::1;::::0;2419:6;2391:35:::1;:27;:35;:::i;:::-;2377:10;2365:23;::::0;;;:11:::1;:23;::::0;;;;;;:61;;;;2498:47;;;;::::1;::::0;;;2467:25:::1;::::0;2498:47;2510:20:::1;:18;:20::i;:::-;2498:47;;;;2532:12;:10;:12::i;:::-;2498:47:::0;;27:10:-1;;39:1:::1;23:18:::0;;::::1;45:23:::0;;-1:-1;2467:79:48;;;::::1;::::0;;;;;::::1;::::0;;::::1;;::::0;;;;;::::1;::::0;;::::1;::::0;2576:10:::1;2556:31:::0;;:19:::1;:31:::0;;;;;;2593:50;;;;::::1;::::0;;2605:11:::1;:23:::0;;;;;;;2593:50;;;;::::1;2630:12;:10;:12::i;:::-;2593:50:::0;;27:10:-1;;39:1:::1;23:18:::0;;::::1;45:23:::0;;-1:-1;2556:88:48;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;;;;;;::::1;::::0;;::::1;::::0;2669:14:::1;:12;:14::i;:::-;2156:535:::0;:::o;3121:81:54:-;3186:9;;;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:54;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:54;;;:34;;;;;;;;;;;:50;:38;:50;:::i;2203:134:47:-;905:4;;-1:-1:-1;;;;;905:4:47;883:10;:27;875:36;;;;;;2286:44:::1;636:2;2319;2323:6;2286:9;:44::i;:::-;2203:134:::0;;:::o;1269:237::-;1342:4;1328:10;1323:23;1315:61;;;;-1:-1:-1;;;1315:61:47;;;;;;;;;1419:6;1394:21;1404:10;1394:9;:21::i;:::-;:31;;1386:78;;;;-1:-1:-1;;;1386:78:47;;;;;;;;;1474:25;1480:10;1492:6;1474:5;:25::i;1799:154::-;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;1874:4:47::1;:30:::0;;-1:-1:-1;;;;;;1874:30:47::1;-1:-1:-1::0;;;;;1874:30:47;::::1;;::::0;;1919:27:::1;::::0;::::1;::::0;::::1;::::0;1874:30;;1919:27:::1;;;;;;;;;;1799:154:::0;:::o;2059:138::-;905:4;;-1:-1:-1;;;;;905:4:47;883:10;:27;875:36;;;;;;2144:46:::1;2154:4;636:2;2183:6;2144:9;:46::i;720:124:48:-:0;805:25;:32;720:124;:::o;1512:113:46:-;1594:17;:24;1512:113;:::o;1185:91::-;1259:10;;1185:91;:::o;1320:336:48:-;-1:-1:-1;;;;;1466:25:48;;1403:10;1466:25;;;:19;:25;;;;;:32;1403:10;;1458:40;;1449:90;;;;-1:-1:-1;;;1449:90:48;;;;;;;;;-1:-1:-1;;;;;1557:25:48;;;;;;:19;:25;;;;;:32;;1583:5;;1557:32;;;;;;;;;;;;;;;;:38;;;1549:46;;1612:19;:25;1632:4;-1:-1:-1;;;;;1612:25:48;-1:-1:-1;;;;;1612:25:48;;;;;;;;;;;;1638:5;1612:32;;;;;;;;;;;;;;;;;;:37;;;1605:44;;1320:336;;;;;:::o;2697:672::-;859:1:46;838:18;;:22;:60;;;;;886:12;:10;:12::i;:::-;864:18;;:34;;838:60;830:102;;;;-1:-1:-1;;;830:102:46;;;;;;;;;2768:8:48::1;::::0;-1:-1:-1;;;;;2768:8:48::1;2752:90;;;;-1:-1:-1::0;;;2752:90:48::1;;;;;;;;;2875:8;::::0;:29:::1;::::0;-1:-1:-1;;;2875:29:48;;2861:11:::1;::::0;-1:-1:-1;;;;;2875:8:48::1;::::0;:17:::1;::::0;:29:::1;::::0;2893:10:::1;::::0;2875:29:::1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;2875:29:48;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2875:29:48;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2875:29:48;;;;;;;;;2861:43;;2932:1;2923:6;:10;2915:19;;;::::0;::::1;;2945:24;:22;:24::i;:::-;3001:14;::::0;2979:45:::1;::::0;2997:1:::1;::::0;3001:14:::1;::::0;::::1;-1:-1:-1::0;;;;;3001:14:48::1;3017:6:::0;2979:9:::1;:45::i;:::-;3081:10;3069:23;::::0;;;:11:::1;:23;::::0;;;;;:35:::1;::::0;3097:6;3069:35:::1;:27;:35;:::i;956:108:46:-:0;1039:18;;956:108;:::o;496:115:48:-;-1:-1:-1;;;;;584:20:48;561:4;584:20;;;:11;:20;;;;;;;496:115::o;1040:76:58:-;1102:7;;-1:-1:-1;;;1102:7:58;;;;;1040:76::o;850:329:48:-;989:25;:32;926:10;;;;981:40;;972:90;;;;-1:-1:-1;;;972:90:48;;;;;;;;;1080:25;1106:5;1080:32;;;;;;;;;;;;;;;;;;:38;;;1072:46;;1135:25;1161:5;1135:32;;;;;;;;;;;;;;;;;;:37;;;1128:44;;850:329;;;:::o;2587:102:46:-;1012:8:47;;-1:-1:-1;;;;;1012:8:47;990:10;:31;;:62;;-1:-1:-1;1047:4:47;;-1:-1:-1;;;;;1047:4:47;1025:10;:27;990:62;982:71;;;;;;2658:24:46::1;:22;:24::i;:::-;2587:102::o:0;480:22:47:-;;;;:::o;3418:117:54:-;-1:-1:-1;;;;;3510:18:54;3484:7;3510:18;;;;;;;;;;;;3418:117::o;1689:145:51:-;1280:12;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;1779:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1779:6:51::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:51::1;::::0;;1689:145::o;1512:173:47:-;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;1592:8:47::1;:39:::0;;-1:-1:-1;;;;;;1592:39:47::1;-1:-1:-1::0;;;;;1592:39:47;::::1;;::::0;;1646:32:::1;::::0;::::1;::::0;::::1;::::0;1592:39;;1646:32:::1;;1185:129:48::0;-1:-1:-1;;;;;1275:25:48;1252:4;1275:25;;;:19;:25;;;;;:32;;1185:129::o;1066:77:51:-;1130:6;;;;;-1:-1:-1;;;;;1130:6:51;;1066:77::o;2413:85:54:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;267:85:29;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;329:9:29::1;:16:::0;267:85::o;6295:266:54:-;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:54;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:54;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;1662:488:48:-;859:1:46;838:18;;:22;:60;;;;;886:12;:10;:12::i;:::-;864:18;;:34;;838:60;830:102;;;;-1:-1:-1;;;830:102:46;;;;;;;;;1734:24:48::1;:22;:24::i;:::-;1791:14;::::0;1769:45:::1;::::0;1779:10:::1;::::0;1791:14:::1;::::0;::::1;-1:-1:-1::0;;;;;1791:14:48::1;1807:6:::0;1769:9:::1;:45::i;3738:172:54:-:0;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;3221:512:46:-;905:4:47;;-1:-1:-1;;;;;905:4:47;883:10;:27;875:36;;;;;;3318:2:46::1;3311:3;:9;;:22;;;;;3331:2;3324:3;:9;;3311:22;3303:73;;;;-1:-1:-1::0;;;3303:73:46::1;;;;;;;;;3395:32;;:::i;:::-;3430:17;3448:24:::0;;-1:-1:-1;;3448:28:46;;;3430:47;::::1;;;;;;;;;;;;;;;3395:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3487:14;3519:9;:14;;;3504:12;:10;:12::i;:::-;:29;3487:46;;3564:7;3551:9;:20;;3543:77;;;;-1:-1:-1::0;;;3543:77:46::1;;;;;;;;;3631:24;:22;:24::i;:::-;3665:19;3680:3;3665:14;:19::i;:::-;3713:7;3699:27;3722:3;3699:27;;;;;;;;;;;;;;;921:1:47;;3221:512:46::0;;:::o;254:44:48:-;;;;;;;;;;;;;:::o;2695:520:46:-;905:4:47;;-1:-1:-1;;;;;905:4:47;883:10;:27;875:36;;;;;;2794:3:46::1;2787;:10;;:25;;;;;2808:4;2801:3;:11;;2787:25;2779:75;;;;-1:-1:-1::0;;;2779:75:46::1;;;;;;;;;2873:32;;:::i;:::-;2908:17;2926:24:::0;;-1:-1:-1;;2926:28:46;;;2908:47;::::1;;;;;;;;;;;;;;;2873:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2965:14;2997:9;:14;;;2982:12;:10;:12::i;:::-;:29;2965:46;;3042:7;3029:9;:20;;3021:77;;;;-1:-1:-1::0;;;3021:77:46::1;;;;;;;;;3109:24;:22;:24::i;:::-;3143:21;3160:3;3143:16;:21::i;:::-;3195:7;3179:29;3204:3;3179:29;;;;;;;497:122:24::0;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;576:36:24::1;594:4;601:2;605:6;576:9;:36::i;1966:447:46:-:0;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;2041:18:46::1;::::0;:23;;:60:::1;;;2089:12;:10;:12::i;:::-;2068:18;;:33;2041:60;2032:102;;;;-1:-1:-1::0;;;2032:102:46::1;;;;;;;;;2160:12;:10;:12::i;:::-;2153:4;:19;2144:68;;;;-1:-1:-1::0;;;2144:68:46::1;;;;;;;;;2222:18;:25:::0;;;2257:19:::1;:40:::0;;;2307:17:::1;:20:::0;;2243:4;;2307:17;-1:-1:-1;;2307:20:46::1;;;;;;;;;;;;;;:25;;:47;;;;2369:37;2387:18;;2369:37;;;;;;;617:97:48::0;664:4;687:20;:18;:20::i;:::-;680:27;;617:97;:::o;3968:149:54:-;-1:-1:-1;;;;;4083:18:54;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;457:208:29:-;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;533:3:29::1;526;:10;;:25;;;;;547:4;540:3;:11;;526:25;518:75;;;;-1:-1:-1::0;;;518:75:29::1;;;;;;;;;603:24;:22;:24::i;:::-;637:21;654:3;637:16;:21::i;1282:224:46:-:0;1345:22;;:::i;:::-;1395:17;:24;1387:32;;1379:79;;;;-1:-1:-1;;;1379:79:46;;;;;;;;;1475:17;1493:5;1475:24;;;;;;;;;;;;;;;;;;1468:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:224;;;:::o;1983:240:51:-;1280:12;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;-1:-1:-1;;;;;2071:22:51;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:51::1;;;;;;;;;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:51;;::::1;::::0;2172:6:::1;::::0;::::1;;::::0;2151:38:::1;::::0;;;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;2199:17:51;;::::1;;;-1:-1:-1::0;;;;;;2199:17:51;;::::1;::::0;;;::::1;::::0;;1983:240::o;2419:162:46:-;1012:8:47;;-1:-1:-1;;;;;1012:8:47;990:10;:31;;:62;;-1:-1:-1;1047:4:47;;-1:-1:-1;;;;;1047:4:47;1025:10;:27;990:62;982:71;;;;;;2507:24:46::1;:22;:24::i;:::-;2541:33;2559:1;2563:2;2567:6;2541:9;:33::i;1180:83:47:-:0;1246:10;;1180:83;:::o;1631:329:46:-;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;1695:18:46::1;::::0;:23;1686:65:::1;;;;-1:-1:-1::0;;;1686:65:46::1;;;;;;;;;1782:12;:10;:12::i;:::-;1761:18;:33:::0;;;1804:19:::1;:40:::0;;;1854:17:::1;:20:::0;;-1:-1:-1;;1854:20:46::1;;;;;;;;;;;;;;:25;;:47;;;;1916:37;1934:18;;1916:37;;;;;;;;;;;;;;;1631:329::o:0;1691:102:47:-;1777:8;;-1:-1:-1;;;;;1777:8:47;1691:102;:::o;590:104:49:-;677:10;590:104;:::o;9357:340:54:-;-1:-1:-1;;;;;9458:19:54;;9450:68;;;;-1:-1:-1;;;9450:68:54;;;;;;;;;-1:-1:-1;;;;;9536:21:54;;9528:68;;;;-1:-1:-1;;;9528:68:54;;;;;;;;;-1:-1:-1;;;;;9607:18:54;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9658:32;;;;;9637:6;;9658:32;;;;;;;;;;9357:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:54;;7132:70;;;;-1:-1:-1;;;7132:70:54;;;;;;;;;-1:-1:-1;;;;;7220:23:54;;7212:71;;;;-1:-1:-1;;;7212:71:54;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:54;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7352:17:54;;;:9;:17;;;;;;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7453:20:54;;;:9;:20;;;;;;;;;;;;:55;;;;7523:35;;;;;;;;;;7551:6;;7523:35;;1746:187:53;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:53;;;;;;;;;;-1:-1:-1;;;1902:5:53;;;1746:187::o;358:93:29:-;435:9;;358:93;:::o;5049:1640:46:-;5120:15;;5106:10;;:29;5102:42;;5137:7;;5102:42;5154:14;5186:19;;5171:12;:10;:12::i;:::-;:34;5154:51;;5231:8;5219:9;:20;5215:33;;;5241:7;;;5215:33;5258:32;;:::i;:::-;5293:17;5311:24;;-1:-1:-1;;5311:28:46;;;5293:47;;;;;;;;;;;;;;5258:82;;;;;;;;5293:47;;;;;;;5258:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5258:82:46;5395:1241;5428:8;5416:9;:20;5412:1;:24;5395:1241;;;5480:8;5457:19;;:31;;;;;;;;;;;5502:17;5603:5;5592:8;5574:9;:14;;;5552:19;;:36;5544:4;5522:19;;:26;:67;:78;;;;;;:86;;;;;;5502:106;;5639:19;;5622:9;:14;;:36;;;;;5710:10;;5691:15;;5676:12;:30;:44;;:58;;;;5731:3;5724:4;:10;5676:58;5672:953;;;5772:10;;5754:15;:28;;;;5800:17;5823:108;;;;;;;;5839:14;:12;:14::i;:::-;5823:108;;;5855:20;;;;5823:108;;;;5877:15;;5823:108;;;;;;;;;;;;;;;5911:19;;5823:108;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;5800:132:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5972:17;:24;5955:46;;;;;;-1:-1:-1;;5972:28:46;;;;;5955:46;;;;;;;;;;6019:5;;;5672:953;6063:15;:31;;;;;;6123:3;6116:10;;6112:290;;;6158:2;6150:10;;;;6212:3;6205:4;:10;6201:26;;;6224:3;6217:10;;6201:26;6112:290;;;6273:4;6281:3;6273:11;6269:133;;;6308:9;6320:14;:12;:14::i;:::-;6308:26;;6367:3;6360:4;:10;6356:27;;;6379:4;6372:11;;6356:27;6269:133;;6442:98;;;;;;;;;;;;6464:20;;;;6442:98;;;;;;6486:15;;6442:98;;;;;;;;;;;;6520:19;;6442:98;;;;;;6419:17;27:10:-1;;39:1;23:18;;45:23;;-1:-1;6419:122:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6581:24;6564:46;;;;;;-1:-1:-1;;6581:28:46;;;;;6564:46;;;;;;;;;;-1:-1:-1;5438:3:46;;5395:1241;;;-1:-1:-1;;6667:15:46;;6645:19;:37;-1:-1:-1;;5049:1640:46:o;1321:134:53:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;1321:134;-1:-1:-1;;;1321:134:53:o;3819:107:48:-;3904:14;;3871:4;;3894:25;;3904:14;;;-1:-1:-1;;;;;3904:14:48;3894:9;:25::i;3375:250::-;3438:4;;-1:-1:-1;;;;;3438:4:48;3430:27;3426:87;;3473:4;;:29;;-1:-1:-1;;;3473:29:48;;-1:-1:-1;;;;;3473:4:48;;;;:17;;:29;;3491:10;;3473:29;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3473:29:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3473:29:48;;;;3426:87;3534:8;;-1:-1:-1;;;;;3534:8:48;3526:31;3522:97;;3573:8;;:35;;-1:-1:-1;;;3573:35:48;;-1:-1:-1;;;;;3573:8:48;;;;:23;;:35;;3597:10;;3573:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3573:35:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3573:35:48;;;;3375:250::o;874:176:53:-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:53;;;;;;;;8524:410:54;-1:-1:-1;;;;;8607:21:54;;8599:67;;;;-1:-1:-1;;;8599:67:54;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:54;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8737:18:54;;:9;:18;;;;;;;;;;:89;8851:12;;:24;;8868:6;8851:24;:16;:24;:::i;:::-;8836:12;:39;8890:37;;8916:1;;-1:-1:-1;;;;;8890:37:54;;;;;;;8920:6;;8890:37;;;;;;;;;;8524:410;;:::o;4426:617:46:-;4501:15;;4487:10;;:29;;4479:38;;;;;;4528:32;;:::i;:::-;4563:17;4581:24;;-1:-1:-1;;4581:28:46;;;4563:47;;;;;;;;;;;;;;;;4528:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4620:14;4652:9;:14;;;4637:12;:10;:12::i;:::-;:29;4620:46;;4766:5;4755:8;4743:9;4718;:22;;;4696:19;;:44;:56;:67;;;;;;:75;;;;;;4677:15;;:94;;;;;;;;;;;4808:10;;4790:15;;:28;4782:62;;;;-1:-1:-1;;;4782:62:46;;;;;;;;;4855:17;4878:96;;;;;;;;4894:9;:22;;;4878:96;;;;4918:3;4878:96;;;;4923:15;;4878:96;;;;4940:19;;4878:96;;;;4961:12;:10;:12::i;:::-;4878:96;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;4855:120:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5007:17;:24;4990:46;;;;;;-1:-1:-1;;5007:28:46;;;;;4990:46;;;;;;;;;;4426:617;;;:::o;3739:681::-;3816:15;;3802:10;;:29;;3794:38;;;;;;3843:32;;:::i;:::-;3878:17;3896:24;;-1:-1:-1;;3896:28:46;;;3878:47;;;;;;;;;;;;;;;;3843:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3935:14;3967:9;:14;;;3952:12;:10;:12::i;:::-;:29;3935:46;;4081:5;4070:8;4058:9;4033;:22;;;4011:19;;:44;:56;:67;;;;;;:75;;;;;;3992:15;;:94;;;;;;;;;;;4123:10;;4105:15;;:28;4097:62;;;;-1:-1:-1;;;4097:62:46;;;;;;;;;4185:14;:12;:14::i;:::-;4178:3;:21;;4170:53;;;;-1:-1:-1;;;4170:53:46;;;;;;;;;4234:17;4257:94;;;;;;;;4273:3;4257:94;;;;4278:9;:20;;;4257:94;;;;4300:15;;4257:94;;;;4317:19;;4257:94;;;;4338:12;:10;:12::i;2343:305:47:-;2451:44;2478:4;2484:2;2488:6;2451:26;:44::i;:::-;2533:4;2519:10;2514:23;2506:61;;;;-1:-1:-1;;;2506:61:47;;;;;;;;;2586:8;:6;:8::i;:::-;2585:9;2577:64;;;;-1:-1:-1;;;2577:64:47;;;;;;;;;2343:305;;;:::o;7227:132:46:-;7273:4;7337:15;;7310;;7297:10;;:28;7329:5;7296:38;:56;;;;;;7289:63;;7227:132;:::o;121:547:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;-1:-1;;;;;24810:54;;25863:35;;25853:2;;25912:1;;25902:12;420:241;;524:2;512:9;503:7;499:23;495:32;492:2;;;-1:-1;;530:12;492:2;592:53;637:7;613:22;592:53;;668:366;;;789:2;777:9;768:7;764:23;760:32;757:2;;;-1:-1;;795:12;757:2;857:53;902:7;878:22;857:53;;;847:63;;965:53;1010:7;947:2;990:9;986:22;965:53;;;955:63;;751:283;;;;;;1041:491;;;;1179:2;1167:9;1158:7;1154:23;1150:32;1147:2;;;-1:-1;;1185:12;1147:2;85:6;72:20;97:33;124:5;97:33;;;1237:63;-1:-1;1337:2;1376:22;;72:20;97:33;72:20;97:33;;;1141:391;;1345:63;;-1:-1;;;1445:2;1484:22;;;;209:20;;1141:391;1539:366;;;1660:2;1648:9;1639:7;1635:23;1631:32;1628:2;;;-1:-1;;1666:12;1628:2;1728:53;1773:7;1749:22;1728:53;;;1718:63;1818:2;1857:22;;;;209:20;;-1:-1;;;1622:283;1912:241;;2016:2;2004:9;1995:7;1991:23;1987:32;1984:2;;;-1:-1;;2022:12;1984:2;-1:-1;209:20;;1978:175;-1:-1;1978:175;2160:263;;2275:2;2263:9;2254:7;2250:23;2246:32;2243:2;;;-1:-1;;2281:12;2243:2;-1:-1;357:13;;2237:186;-1:-1;2237:186;2430:366;;;2551:2;2539:9;2530:7;2526:23;2522:32;2519:2;;;-1:-1;;2557:12;2519:2;-1:-1;;209:20;;;2709:2;2748:22;;;209:20;;-1:-1;2513:283;13057:213;-1:-1;;;;;24810:54;;;;3023:37;;13175:2;13160:18;;13146:124;13513:201;24722:13;;24715:21;3137:34;;13625:2;13610:18;;13596:118;13721:301;;13859:2;;13880:17;13873:47;3328:5;24345:12;24502:6;13859:2;13848:9;13844:18;24490:19;-1:-1;25495:101;25509:6;25506:1;25503:13;25495:101;;;25576:11;;;;;25570:18;25557:11;;;24530:14;25557:11;25550:39;25524:10;;25495:101;;;25611:6;25608:1;25605:13;25602:2;;;-1:-1;24530:14;25667:6;13848:9;25658:16;;25651:27;25602:2;-1:-1;25783:7;25767:14;-1:-1;;25763:28;3486:39;;;;24530:14;3486:39;;13830:192;-1:-1;;;13830:192;14029:407;14220:2;14234:47;;;3762:2;14205:18;;;24490:19;3798:34;24530:14;;;3778:55;-1:-1;;;3853:12;;;3846:38;3903:12;;;14191:245;14443:407;14634:2;14648:47;;;4154:2;14619:18;;;24490:19;4190:34;24530:14;;;4170:55;-1:-1;;;4245:12;;;4238:27;4284:12;;;14605:245;14857:407;15048:2;15062:47;;;4535:2;15033:18;;;24490:19;4571:34;24530:14;;;4551:55;-1:-1;;;4626:12;;;4619:27;4665:12;;;15019:245;15271:407;15462:2;15476:47;;;4916:2;15447:18;;;24490:19;-1:-1;;;24530:14;;;4932:44;4995:12;;;15433:245;15685:407;15876:2;15890:47;;;5246:2;15861:18;;;24490:19;5282:34;24530:14;;;5262:55;-1:-1;;;5337:12;;;5330:26;5375:12;;;15847:245;16099:407;16290:2;16304:47;;;5626:2;16275:18;;;24490:19;5662:34;24530:14;;;5642:55;-1:-1;;;5717:12;;;5710:30;5759:12;;;16261:245;16513:407;16704:2;16718:47;;;6010:2;16689:18;;;24490:19;6046:34;24530:14;;;6026:55;-1:-1;;;6101:12;;;6094:26;6139:12;;;16675:245;16927:407;17118:2;17132:47;;;6390:2;17103:18;;;24490:19;6426:29;24530:14;;;6406:50;6475:12;;;17089:245;17341:407;17532:2;17546:47;;;6726:2;17517:18;;;24490:19;6762:34;24530:14;;;6742:55;-1:-1;;;6817:12;;;6810:26;6855:12;;;17503:245;17755:407;17946:2;17960:47;;;7106:2;17931:18;;;24490:19;7142:34;24530:14;;;7122:55;-1:-1;;;7197:12;;;7190:28;7237:12;;;17917:245;18169:407;18360:2;18374:47;;;7488:2;18345:18;;;24490:19;7524:34;24530:14;;;7504:55;-1:-1;;;7579:12;;;7572:29;7620:12;;;18331:245;18583:407;18774:2;18788:47;;;7871:2;18759:18;;;24490:19;7907:31;24530:14;;;7887:52;7958:12;;;18745:245;18997:407;19188:2;19202:47;;;19173:18;;;24490:19;8245:34;24530:14;;;8225:55;8299:12;;;19159:245;19411:407;19602:2;19616:47;;;8550:2;19587:18;;;24490:19;8586:27;24530:14;;;8566:48;8633:12;;;19573:245;19825:407;20016:2;20030:47;;;8884:2;20001:18;;;24490:19;8920:34;24530:14;;;8900:55;-1:-1;;;8975:12;;;8968:25;9012:12;;;19987:245;20239:407;20430:2;20444:47;;;9263:2;20415:18;;;24490:19;9299:34;24530:14;;;9279:55;-1:-1;;;9354:12;;;9347:29;9395:12;;;20401:245;20653:407;20844:2;20858:47;;;9646:2;20829:18;;;24490:19;9682:30;24530:14;;;9662:51;9732:12;;;20815:245;21067:407;21258:2;21272:47;;;9983:2;21243:18;;;24490:19;10019:34;24530:14;;;9999:55;-1:-1;;;10074:12;;;10067:28;10114:12;;;21229:245;21481:407;21672:2;21686:47;;;10365:2;21657:18;;;24490:19;-1:-1;;;24530:14;;;10381:42;10442:12;;;21643:245;21895:407;22086:2;22100:47;;;10693:2;22071:18;;;24490:19;10729:34;24530:14;;;10709:55;-1:-1;;;10784:12;;;10777:30;10826:12;;;22057:245;22309:407;22500:2;22514:47;;;11077:2;22485:18;;;24490:19;11113:34;24530:14;;;11093:55;-1:-1;;;11168:12;;;11161:36;11216:12;;;22471:245;22723:407;22914:2;22928:47;;;11467:2;22899:18;;;24490:19;11503:34;24530:14;;;11483:55;-1:-1;;;11558:12;;;11551:34;11604:12;;;22885:245;23137:350;;23323:3;23312:9;23308:19;23300:27;;11960:16;11954:23;12781:3;12774:37;12131:4;12124:5;12120:16;12114:23;12131:4;12195:3;12191:14;12774:37;12294:4;12287:5;12283:16;12277:23;12294:4;12358:3;12354:14;12774:37;12456:4;12449:5;12445:16;12439:23;12456:4;12520:3;12516:14;12774:37;12610:4;12603:5;12599:16;12593:23;12610:4;12674:3;12670:14;12774:37;23294:193;;;;;23494:213;12774:37;;;23612:2;23597:18;;23583:124;23714:324;12774:37;;;24024:2;24009:18;;12774:37;23860:2;23845:18;;23831:207;24045:205;25026:4;25015:16;;;;13010:35;;24159:2;24144:18;;24130:120;25804:117;-1:-1;;;;;24810:54;;25863:35;;25853:2;;25912:1;;25902:12;25847:74;2238:7:53;2479:6;2475:45;;-1:-1:-1;2508:1:53;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:53;;575:2:-1;2557:56:53;;;589:47:-1;230:2;560:18;;;902:19;266:34;942:14;;;246:55;-1:-1;;;321:12;;;314:25;358:12;;2557:56:53;546:245:-1",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.2;\npragma experimental ABIEncoderV2;\n\n\nimport \"./Citadel.sol\";\n\n\ncontract CitadelTest is Citadel() {\n\n    uint private _fakeTime;\n\n    constructor ()\n    public {\n        _fakeTime = block.timestamp;\n    }\n\n    function setTimestamp(uint date) external onlyOwner {\n        _fakeTime = date;\n    }\n\n    function _timestamp() internal override view returns (uint) {\n        return _fakeTime;\n    }\n\n    function setInflation(uint pct) external onlyOwner {\n        require(pct >= 200 && pct <= 3000, \"Percentage must be between 2% and 30%\");\n        _makeInflationSnapshot();\n        _updateInflation(pct);\n    }\n\n}\n",
  "sourcePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/CitadelTest.sol",
  "ast": {
    "absolutePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/CitadelTest.sol",
    "exportedSymbols": {
      "CitadelTest": [
        9556
      ]
    },
    "id": 9557,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9493,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:29"
      },
      {
        "id": 9494,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:29"
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/Citadel.sol",
        "file": "./Citadel.sol",
        "id": 9495,
        "nodeType": "ImportDirective",
        "scope": 9557,
        "sourceUnit": 8368,
        "src": "95:23:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 9496,
              "name": "Citadel",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8367,
              "src": "145:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Citadel_$8367",
                "typeString": "contract Citadel"
              }
            },
            "id": 9497,
            "nodeType": "InheritanceSpecifier",
            "src": "145:9:29"
          }
        ],
        "contractDependencies": [
          8367,
          16862,
          17139,
          17567,
          17590,
          17963,
          18733,
          18802,
          19450
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9556,
        "linearizedBaseContracts": [
          9556,
          8367,
          17567,
          16862,
          17139,
          19450,
          17963,
          18733,
          18802,
          17590
        ],
        "name": "CitadelTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9499,
            "name": "_fakeTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9556,
            "src": "162:22:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9498,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "162:4:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9507,
              "nodeType": "Block",
              "src": "217:44:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9502,
                      "name": "_fakeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9499,
                      "src": "227:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9503,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "239:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "239:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "227:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9506,
                  "nodeType": "ExpressionStatement",
                  "src": "227:27:29"
                }
              ]
            },
            "documentation": null,
            "id": 9508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:29"
            },
            "returnParameters": {
              "id": 9501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:0:29"
            },
            "scope": 9556,
            "src": "191:70:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9519,
              "nodeType": "Block",
              "src": "319:33:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9515,
                      "name": "_fakeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9499,
                      "src": "329:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9516,
                      "name": "date",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9510,
                      "src": "341:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "329:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9518,
                  "nodeType": "ExpressionStatement",
                  "src": "329:16:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a0a2b573",
            "id": 9520,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9513,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9512,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17914,
                  "src": "309:9:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "309:9:29"
              }
            ],
            "name": "setTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9510,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9520,
                  "src": "289:9:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9509,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "288:11:29"
            },
            "returnParameters": {
              "id": 9514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:0:29"
            },
            "scope": 9556,
            "src": "267:85:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17138
            ],
            "body": {
              "id": 9528,
              "nodeType": "Block",
              "src": "418:33:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9526,
                    "name": "_fakeTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9499,
                    "src": "435:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9525,
                  "id": 9527,
                  "nodeType": "Return",
                  "src": "428:16:29"
                }
              ]
            },
            "documentation": null,
            "id": 9529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_timestamp",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9522,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "389:8:29"
            },
            "parameters": {
              "id": 9521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:29"
            },
            "returnParameters": {
              "id": 9525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9524,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9529,
                  "src": "412:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9523,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:6:29"
            },
            "scope": 9556,
            "src": "358:93:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9554,
              "nodeType": "Block",
              "src": "508:157:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 9537,
                            "name": "pct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9531,
                            "src": "526:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "323030",
                            "id": 9538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "533:3:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "526:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 9540,
                            "name": "pct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9531,
                            "src": "540:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33303030",
                            "id": 9541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "547:4:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3000_by_1",
                              "typeString": "int_const 3000"
                            },
                            "value": "3000"
                          },
                          "src": "540:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "526:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50657263656e74616765206d757374206265206265747765656e20322520616e6420333025",
                        "id": 9544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "553:39:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_820934cf5a7bf13206538ef040261940a69d5fc2beac57973180b1c1f70b6057",
                          "typeString": "literal_string \"Percentage must be between 2% and 30%\""
                        },
                        "value": "Percentage must be between 2% and 30%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_820934cf5a7bf13206538ef040261940a69d5fc2beac57973180b1c1f70b6057",
                          "typeString": "literal_string \"Percentage must be between 2% and 30%\""
                        }
                      ],
                      "id": 9536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "518:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:75:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9546,
                  "nodeType": "ExpressionStatement",
                  "src": "518:75:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9547,
                      "name": "_makeInflationSnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16791,
                      "src": "603:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "603:24:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9549,
                  "nodeType": "ExpressionStatement",
                  "src": "603:24:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9551,
                        "name": "pct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9531,
                        "src": "654:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9550,
                      "name": "_updateInflation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16545,
                      "src": "637:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 9552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:21:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9553,
                  "nodeType": "ExpressionStatement",
                  "src": "637:21:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e0a8ed52",
            "id": 9555,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9534,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9533,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17914,
                  "src": "498:9:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "498:9:29"
              }
            ],
            "name": "setInflation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9531,
                  "name": "pct",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9555,
                  "src": "479:8:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9530,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "478:10:29"
            },
            "returnParameters": {
              "id": 9535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:29"
            },
            "scope": 9556,
            "src": "457:208:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9557,
        "src": "121:547:29"
      }
    ],
    "src": "36:633:29"
  },
  "legacyAST": {
    "absolutePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/CitadelTest.sol",
    "exportedSymbols": {
      "CitadelTest": [
        9556
      ]
    },
    "id": 9557,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9493,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:29"
      },
      {
        "id": 9494,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:29"
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/Citadel.sol",
        "file": "./Citadel.sol",
        "id": 9495,
        "nodeType": "ImportDirective",
        "scope": 9557,
        "sourceUnit": 8368,
        "src": "95:23:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 9496,
              "name": "Citadel",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8367,
              "src": "145:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Citadel_$8367",
                "typeString": "contract Citadel"
              }
            },
            "id": 9497,
            "nodeType": "InheritanceSpecifier",
            "src": "145:9:29"
          }
        ],
        "contractDependencies": [
          8367,
          16862,
          17139,
          17567,
          17590,
          17963,
          18733,
          18802,
          19450
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9556,
        "linearizedBaseContracts": [
          9556,
          8367,
          17567,
          16862,
          17139,
          19450,
          17963,
          18733,
          18802,
          17590
        ],
        "name": "CitadelTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9499,
            "name": "_fakeTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9556,
            "src": "162:22:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9498,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "162:4:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9507,
              "nodeType": "Block",
              "src": "217:44:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9502,
                      "name": "_fakeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9499,
                      "src": "227:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9503,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "239:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "239:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "227:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9506,
                  "nodeType": "ExpressionStatement",
                  "src": "227:27:29"
                }
              ]
            },
            "documentation": null,
            "id": 9508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:29"
            },
            "returnParameters": {
              "id": 9501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:0:29"
            },
            "scope": 9556,
            "src": "191:70:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9519,
              "nodeType": "Block",
              "src": "319:33:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9515,
                      "name": "_fakeTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9499,
                      "src": "329:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9516,
                      "name": "date",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9510,
                      "src": "341:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "329:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9518,
                  "nodeType": "ExpressionStatement",
                  "src": "329:16:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a0a2b573",
            "id": 9520,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9513,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9512,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17914,
                  "src": "309:9:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "309:9:29"
              }
            ],
            "name": "setTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9510,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9520,
                  "src": "289:9:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9509,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "288:11:29"
            },
            "returnParameters": {
              "id": 9514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:0:29"
            },
            "scope": 9556,
            "src": "267:85:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17138
            ],
            "body": {
              "id": 9528,
              "nodeType": "Block",
              "src": "418:33:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9526,
                    "name": "_fakeTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9499,
                    "src": "435:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9525,
                  "id": 9527,
                  "nodeType": "Return",
                  "src": "428:16:29"
                }
              ]
            },
            "documentation": null,
            "id": 9529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_timestamp",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9522,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "389:8:29"
            },
            "parameters": {
              "id": 9521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:29"
            },
            "returnParameters": {
              "id": 9525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9524,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9529,
                  "src": "412:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9523,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:6:29"
            },
            "scope": 9556,
            "src": "358:93:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9554,
              "nodeType": "Block",
              "src": "508:157:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 9537,
                            "name": "pct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9531,
                            "src": "526:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "323030",
                            "id": 9538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "533:3:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "526:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 9540,
                            "name": "pct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9531,
                            "src": "540:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33303030",
                            "id": 9541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "547:4:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3000_by_1",
                              "typeString": "int_const 3000"
                            },
                            "value": "3000"
                          },
                          "src": "540:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "526:25:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50657263656e74616765206d757374206265206265747765656e20322520616e6420333025",
                        "id": 9544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "553:39:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_820934cf5a7bf13206538ef040261940a69d5fc2beac57973180b1c1f70b6057",
                          "typeString": "literal_string \"Percentage must be between 2% and 30%\""
                        },
                        "value": "Percentage must be between 2% and 30%"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_820934cf5a7bf13206538ef040261940a69d5fc2beac57973180b1c1f70b6057",
                          "typeString": "literal_string \"Percentage must be between 2% and 30%\""
                        }
                      ],
                      "id": 9536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "518:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:75:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9546,
                  "nodeType": "ExpressionStatement",
                  "src": "518:75:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9547,
                      "name": "_makeInflationSnapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16791,
                      "src": "603:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "603:24:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9549,
                  "nodeType": "ExpressionStatement",
                  "src": "603:24:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9551,
                        "name": "pct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9531,
                        "src": "654:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9550,
                      "name": "_updateInflation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16545,
                      "src": "637:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 9552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:21:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9553,
                  "nodeType": "ExpressionStatement",
                  "src": "637:21:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e0a8ed52",
            "id": 9555,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9534,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9533,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17914,
                  "src": "498:9:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "498:9:29"
              }
            ],
            "name": "setInflation",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9531,
                  "name": "pct",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9555,
                  "src": "479:8:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9530,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "478:10:29"
            },
            "returnParameters": {
              "id": 9535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:29"
            },
            "scope": 9556,
            "src": "457:208:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9557,
        "src": "121:547:29"
      }
    ],
    "src": "36:633:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2021-08-16T15:52:52.414Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}