{
  "contractName": "Citadel",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "ChangeInflation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "ChangeVesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_bankAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countInflationPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "delegateToDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDaoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInflationStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSavedInflationYear",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "inflationPoint",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "inflationPct",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakingPct",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "yearlySupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "internalType": "struct CitadelInflation.InflationValues",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daoAddress",
          "type": "address"
        }
      ],
      "name": "initDaoTransport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vestAddress",
          "type": "address"
        }
      ],
      "name": "initVestingTransport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "lockHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "lockHistoryCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "lockedBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedCoins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "percentDecimal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemFromDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startInflation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "startInflationTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplyHistoryCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "updateInflation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "updateVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "delegateTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"ChangeInflation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"ChangeVesting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_bankAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countInflationPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegateToDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegateTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInflationStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSavedInflationYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"inflationPoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"inflationPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yearlySupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"internalType\":\"struct CitadelInflation.InflationValues\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"}],\"name\":\"initDaoTransport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vestAddress\",\"type\":\"address\"}],\"name\":\"initVestingTransport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"lockHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lockHistoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedCoins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentDecimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemFromDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startInflation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"startInflationTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"totalSupplyHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyHistoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"updateInflation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"updateVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/pirat/Desktop/DAO/contracts/Citadel.sol\":\"Citadel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/pirat/Desktop/DAO/contracts/Citadel.sol\":{\"keccak256\":\"0xd3bfb1f0e052f53e251dc9623e449b6b102f15168d419f016731e92d03a6aa71\",\"urls\":[\"bzz-raw://874b12840cbf1b42a43167230735f442faf618f0ffe665a53d3d1e055e50e004\",\"dweb:/ipfs/QmZpUy27MRvBZejZH66R3S7C2nBTQiVERzVhbcKg9yEKME\"]},\"/home/pirat/Desktop/DAO/contracts/ICitadelDao.sol\":{\"keccak256\":\"0xd8f6039ac8a8dabc55cc471f625437fa0e6db978109930f18b783908330a0b3f\",\"urls\":[\"bzz-raw://4ce5e24674abe3be12c26a0fe9b7e031a49cb804054b5d0fca3e8e3887d15c10\",\"dweb:/ipfs/QmXR95inmjb2NGBK2PhYVNm13WPzTqMAdiRskKs5yS5Zu6\"]},\"/home/pirat/Desktop/DAO/contracts/ICitadelVesting.sol\":{\"keccak256\":\"0xf23a41f64c9d84de4fc942597ed0c8f3f97b2a3d68123f234d46e13a73fdc83e\",\"urls\":[\"bzz-raw://850705dfe2486d8aecbf6b35c716c36f8d0b341992508724594316b1455769fa\",\"dweb:/ipfs/Qmcr7uVSsU8ahERGYvRA3pjbEbyopVJUoTkfjncpZSNENb\"]},\"/home/pirat/Desktop/DAO/contracts/Token/CitadelInflation.sol\":{\"keccak256\":\"0xdd5eb95beab97a3297738b7451efa022f57c25ba2e349b854079aa4447e963cb\",\"urls\":[\"bzz-raw://4725606407ac1d61f1d295fa9bb774c71531e7729688db03747138a2a9432b8f\",\"dweb:/ipfs/QmZeN6ZVhjdjGcD9pZxtqQduVH4p4q6bxWoCEZrkSdynua\"]},\"/home/pirat/Desktop/DAO/contracts/Token/CitadelToken.sol\":{\"keccak256\":\"0x89e87140ceec434809e0544dc0b35a49af888b87b4a2354b8e23da1febeb6363\",\"urls\":[\"bzz-raw://0f17cba8934d19fc31f65a44d3b4cd0dfaae4acf95b628c8603b57de5ae82573\",\"dweb:/ipfs/QmYj6kYgmxUZtWTBMT19J7iugBT2kzhTCYBF4ohoEJVzni\"]},\"/home/pirat/Desktop/DAO/contracts/Token/CitadelTokenLocker.sol\":{\"keccak256\":\"0xee00d279cede29d4bd3fab4a11683a5333f2074cc02448bac5c424ddf1b11bc9\",\"urls\":[\"bzz-raw://e9c5d0c623beac1c41dd29feb19dbbfbbcc965b5e062ac779582998b88df0852\",\"dweb:/ipfs/QmakMUoZUm9FQJczuipQumjvPiuQcPN4xniKY2g6yT8xiM\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x26fbdae5423568a9cbf0e0e166ed0b097d381a5cbb82587c53e070d5e4266e4c\",\"urls\":[\"bzz-raw://9b3f77800adf8ba59a4db157cb4638607122958299412c9b4cfd688999837ea2\",\"dweb:/ipfs/QmQk28ipwVxyHpNQ89MebXTVazR34BayPphRRXhfANFsD1\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"/home/pirat/Desktop/DAO/node_modules/openzeppelin-solidity/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002f7938038062002f798339810160408190526200003491620005eb565b6040518060400160405280600b81526020016a4369746164656c2e6f6e6560a81b815250604051806040016040528060038152602001621610d560ea1b81525081600390805190602001906200008c92919062000549565b508051620000a290600490602084019062000549565b50506005805460ff19166012179055506000620000c76001600160e01b036200023e16565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506005805460ff60a81b19169055600680546001600160a01b031916301781554260075566038d7ea4c680006008556200015f906001600160e01b036200024316565b600062000182620f4240631dcd65006200025960201b620026ed1790919060201c565b90506200019a6001826001600160e01b03620002ab16565b620001b4818061032060286001600160e01b036200039716565b620001c960026001600160e01b036200045016565b620001fe30620001ef620f4240631dcd65006200025960201b620026ed1790919060201c565b6001600160e01b03620002ab16565b6200021b620f4240836200025960201b620026ed1790919060201c565b6200022e6001600160e01b036200049316565b146200023657fe5b50506200073d565b335b90565b6005805460ff191660ff92909216919091179055565b6000826200026a57506000620002a5565b828202828482816200027857fe5b0414620002a25760405162461bcd60e51b815260040162000299906200063b565b60405180910390fd5b90505b92915050565b6001600160a01b038216620002d45760405162461bcd60e51b81526004016200029990620006b3565b620002eb600083836001600160e01b036200049916565b62000307816002546200050d60201b62001b8f1790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200033a91839062001b8f6200050d821b17901c565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200038b90859062000734565b60405180910390a35050565b600d5460ff1615620003a857600080fd5b600d805460ff19166001179055838301600e55600f84905560118490556040805160a081018252838152602081018390529081018590526060810185905260129060808101620004006001600160e01b036200053516565b905281546001818101845560009384526020938490208351600590930201918255928201519281019290925560408101516002830155606081015160038301556080015160049091015550505050565b60145460ff16156200046157600080fd5b601480546001600160a01b0390921661010002610100600160a81b031960ff1990931660011792909216919091179055565b60025490565b620004b18383836200050860201b62001f481760201c565b6103e83311620004d55760405162461bcd60e51b815260040162000299906200067c565b620004e86001600160e01b036200053916565b15620005085760405162461bcd60e51b81526004016200029990620006ea565b505050565b600082820183811015620002a25760405162461bcd60e51b8152600401620002999062000604565b4290565b600554600160a81b900460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200058c57805160ff1916838001178555620005bc565b82800160010185558215620005bc579182015b82811115620005bc5782518255916020019190600101906200059f565b50620005ca929150620005ce565b5090565b6200024091905b80821115620005ca5760008155600101620005d5565b600060208284031215620005fd578081fd5b5051919050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526019908201527f4369746164656c546f6b656e3a2066616b652073656e64657200000000000000604082015260600190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b90815260200190565b61282c806200074d6000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c806369668fe911610167578063bf17282a116100ce578063f1474bd811610087578063f1474bd814610539578063f2fde38b14610559578063f3fef3a31461056c578063f905c15a1461057f578063f9b7ce0214610587578063ff1764a41461058f57610295565b8063bf17282a146104d2578063c108a402146104e5578063c2ad5b74146104f8578063c686781d1461050b578063ca5c7b911461051e578063dd62ed3e1461052657610295565b806395d89b411161012057806395d89b4114610476578063a457c2d71461047e578063a694fc3a14610491578063a9059cbb146104a4578063ac3cd7c6146104b7578063ba1a681f146104ca57610295565b806369668fe91461042557806370a082311461042d578063715018a6146104405780637fa7faf81461044857806389bb60811461045b5780638da5cb5b1461046e57610295565b806344263fcb1161020b5780634f91440d116101c45780634f91440d146103df57806353d168e7146103e757806355b28b37146103ef57806359355736146103f75780635c975abb1461040a5780636641d9a01461041257610295565b806344263fcb1461038057806344c40464146103935780634ab68e14146103a65780634b45aa12146103ae5780634c0f38c2146103b65780634cf54195146103be57610295565b806323b872dd1161025d57806323b872dd1461030a5780632e17de781461031d578063313ce5671461033257806339509351146103475780633ba71a151461035a57806342966c681461036d57610295565b806306fdde031461029a578063095ea7b3146102b857806318160ddd146102d85780631d0a67e1146102ed5780631d68702d146102f5575b600080fd5b6102a2610597565b6040516102af91906120d9565b60405180910390f35b6102cb6102c636600461203f565b61062d565b6040516102af91906120ce565b6102e061064b565b6040516102af91906126b3565b6102e0610651565b6102fd610657565b6040516102af91906120ba565b6102cb610318366004611fff565b610666565b61033061032b366004612069565b6106f3565b005b61033a61084d565b6040516102af91906126ca565b6102cb61035536600461203f565b610856565b61033061036836600461203f565b6108aa565b61033061037b366004612069565b610916565b61033061038e366004611fb0565b610969565b6103306103a136600461203f565b6109c5565b6102e0610a11565b6102e0610a17565b6102e0610a1d565b6103d16103cc36600461203f565b610a23565b6040516102af9291906126bc565b610330610adf565b6102fd610c16565b6102e0610c25565b6102e0610405366004611fb0565b610c2b565b6102cb610c46565b6103d1610420366004612069565b610c56565b6102e0610cc3565b6102e061043b366004611fb0565b610cc9565b610330610ce4565b610330610456366004611fb0565b610d6e565b6102e0610469366004611fb0565b610dca565b6102fd610de5565b6102a2610df9565b6102cb61048c36600461203f565b610e5a565b61033061049f366004612069565b610ec8565b6102cb6104b236600461203f565b610f24565b6103306104c5366004612099565b610f38565b6102e0611068565b6102e06104e0366004611fb0565b61106e565b6103306104f3366004612099565b611080565b61033061050636600461203f565b6111a3565b610330610519366004612069565b6111ec565b6102e06112b1565b6102e0610534366004611fcb565b6112c0565b61054c610547366004612069565b6112eb565b6040516102af9190612679565b610330610567366004611fb0565b611373565b61033061057a36600461203f565b61143a565b6102e061147a565b610330611480565b6102fd611510565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106235780601f106105f857610100808354040283529160200191610623565b820191906000526020600020905b81548152906001019060200180831161060657829003601f168201915b5050505050905090565b600061064161063a61151f565b8484611523565b5060015b92915050565b60025490565b60105490565b600a546001600160a01b031690565b60006106738484846115d7565b6106e98461067f61151f565b6106e4856040518060600160405280602881526020016127aa602891396001600160a01b038a166000908152600160205260408120906106bd61151f565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6116f816565b611523565b5060019392505050565b6000600c5411801561070e5750610708611724565b600c5411155b6107335760405162461bcd60e51b815260040161072a906123cc565b60405180910390fd5b3360009081526013602052604090205481111561074f57600080fd5b610757611728565b6014546107739061010090046001600160a01b031633836115d7565b33600090815260136020526040902054610793908263ffffffff611a4016565b3360009081526013602052604090819020919091558051808201909152601590806107bc611a89565b81526020016107c9611724565b905281546001818101845560009384526020808520845160029094020192835592830151910155338252601681526040808320815180830183526013845291909320548152908101610819611724565b905281546001818101845560009384526020938490208351600290930201918255929091015191015561084a611aa6565b50565b60055460ff1690565b600061064161086361151f565b846106e4856001600061087461151f565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611b8f16565b600a546001600160a01b031633146108c157600080fd5b6108cd600a83836115d7565b6001600160a01b0382166000908152600b60205260409020546108f6908263ffffffff611a4016565b6001600160a01b039092166000908152600b602052604090209190915550565b6103e833116109375760405162461bcd60e51b815260040161072a90612438565b8061094133610cc9565b101561095f5760405162461bcd60e51b815260040161072a90612200565b61084a3382611bb4565b61097161151f565b60055461010090046001600160a01b039081169116146109a35760405162461bcd60e51b815260040161072a90612403565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b031633146109dc57600080fd5b6109e882600a836115d7565b6001600160a01b0382166000908152600b60205260409020546108f6908263ffffffff611b8f16565b60155490565b60125490565b600e5490565b6001600160a01b03821660009081526016602052604081205481908310610a5c5760405162461bcd60e51b815260040161072a90612343565b6001600160a01b0384166000908152601660205260409020805484908110610a8057fe5b906000526020600020906002020160000154915060166000856001600160a01b03166001600160a01b031681526020019081526020016000208381548110610ac457fe5b90600052602060002090600202016001015490509250929050565b6000600c54118015610afa5750610af4611724565b600c5411155b610b165760405162461bcd60e51b815260040161072a906123cc565b6009546001600160a01b0316610b3e5760405162461bcd60e51b815260040161072a9061212c565b60095460405163ddeae03360e01b81526000916001600160a01b03169063ddeae03390610b6f9033906004016120ba565b602060405180830381600087803b158015610b8957600080fd5b505af1158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bc19190810190612081565b905060008111610bd057600080fd5b610bd8611728565b601454610bf69060019061010090046001600160a01b0316836115d7565b33600090815260136020526040902054610793908263ffffffff611b8f16565b6006546001600160a01b031681565b600c5490565b6001600160a01b031660009081526013602052604090205490565b600554600160a81b900460ff1690565b60155460009081908310610c7c5760405162461bcd60e51b815260040161072a90612343565b60158381548110610c8957fe5b906000526020600020906002020160000154915060158381548110610caa57fe5b9060005260206000209060020201600101549050915091565b60075481565b6001600160a01b031660009081526020819052604090205490565b610cec61151f565b60055461010090046001600160a01b03908116911614610d1e5760405162461bcd60e51b815260040161072a90612403565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b610d7661151f565b60055461010090046001600160a01b03908116911614610da85760405162461bcd60e51b815260040161072a90612403565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b031660009081526016602052604090205490565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106235780601f106105f857610100808354040283529160200191610623565b6000610641610e6761151f565b846106e4856040518060600160405280602581526020016127d26025913960016000610e9161151f565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6116f816565b6000600c54118015610ee35750610edd611724565b600c5411155b610eff5760405162461bcd60e51b815260040161072a906123cc565b610f07611728565b601454610bf690339061010090046001600160a01b0316836115d7565b6000610641610f3161151f565b84846115d7565b600a546001600160a01b03163314610f4f57600080fd5b600a8110158015610f615750605a8111155b610f7d5760405162461bcd60e51b815260040161072a9061259d565b610f85611f6a565b601280546000198101908110610f9757fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151610ff3611724565b03905062278d008110156110195760405162461bcd60e51b815260040161072a906125e3565b611021611728565b61102a83611ca2565b837f96a647810411309169e354743b6a4e9d05e3c777f5fae278e65f6168fe7279ba8460405161105a91906126b3565b60405180910390a250505050565b60085481565b60136020526000908152604090205481565b600a546001600160a01b0316331461109757600080fd5b60c881101580156110aa5750610bb88111155b6110c65760405162461bcd60e51b815260040161072a90612387565b6110ce611f6a565b6012805460001981019081106110e057fe5b90600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000816080015161113c611724565b03905062278d008110156111625760405162461bcd60e51b815260040161072a906125e3565b61116a611728565b61117383611de2565b837f8f4db2ceeda2c579bf7d6f7036f9f300565d76719308713e3c85d3484b4ebb308460405161105a91906126b3565b6111ab61151f565b60055461010090046001600160a01b039081169116146111dd5760405162461bcd60e51b815260040161072a90612403565b6111e83083836115d7565b5050565b6111f461151f565b60055461010090046001600160a01b039081169116146112265760405162461bcd60e51b815260040161072a90612403565b600c54158061123d5750611238611724565b600c54115b6112595760405162461bcd60e51b815260040161072a906124f5565b611261611724565b811161127f5760405162461bcd60e51b815260040161072a906121bd565b600c81905560108190556012805482919060009061129957fe5b90600052602060002090600502016004018190555050565b60006112bb611a89565b905090565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6112f3611f6a565b60125482106113145760405162461bcd60e51b815260040161072a90612301565b6012828154811061132157fe5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b61137b61151f565b60055461010090046001600160a01b039081169116146113ad5760405162461bcd60e51b815260040161072a90612403565b6001600160a01b0381166113d35760405162461bcd60e51b815260040161072a90612242565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6009546001600160a01b031633148061145d5750600a546001600160a01b031633145b61146657600080fd5b61146e611728565b6111e8600183836115d7565b60075490565b61148861151f565b60055461010090046001600160a01b039081169116146114ba5760405162461bcd60e51b815260040161072a90612403565b600c54156114da5760405162461bcd60e51b815260040161072a906124f5565b6114e2611724565b600c8190556010819055601280546000906114f957fe5b906000526020600020906005020160040181905550565b6009546001600160a01b031690565b3390565b6001600160a01b0383166115495760405162461bcd60e51b815260040161072a9061252c565b6001600160a01b03821661156f5760405162461bcd60e51b815260040161072a90612288565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906115ca9085906126b3565b60405180910390a3505050565b6001600160a01b0383166115fd5760405162461bcd60e51b815260040161072a906124b0565b6001600160a01b0382166116235760405162461bcd60e51b815260040161072a9061217a565b61162e838383611ef7565b61167181604051806060016040528060268152602001612784602691396001600160a01b038616600090815260208190526040902054919063ffffffff6116f816565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546116a6908263ffffffff611b8f16565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115ca9085906126b3565b6000818484111561171c5760405162461bcd60e51b815260040161072a91906120d9565b505050900390565b4290565b600f54600e54141561173957611a3e565b6000601054611746611724565b0390506301e1338081101561175b5750611a3e565b611763611f6a565b60128054600019810190811061177557fe5b600091825260208083206040805160a0810182526005909402909101805480855260018201549385019390935260028101549184019190915260038101546060840152600401546080830152909250905b6301e133808404811015611a33576301e1338060106000828254019250508190555060006127106301e133808560800151601054038560115402028161180857fe5b048161181057fe5b049050600e54600f548201101580611828575060c883105b156118bc57600e54600f8190555060126040518060a0016040528061184b611f4d565b815260208781015181830152600f54604080840182905260608085019290925260105460809485015285546001818101885560009788529684902086516005909202019081559285015195830195909555938301516002820155928201516003840155015160049091015550611a33565b600f80548201905560c88311156118ff576032831180156118e0575060c860328403115b156118ec576032830392505b60c88310156118fa5760c892505b611923565b8260c81415611923576000611912611f4d565b905060c8811015611921578093505b505b506040805160a081018252838152602085810151908201908152600f549282018381526060830193845260105460808401908152601280546001808201835560009290925294517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344460059096029586015592517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344585015590517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344684015592517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344783015591517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344890910155016117c6565b5050600f5460115550505b565b6000611a8283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116f8565b9392505050565b6014546000906112bb9061010090046001600160a01b0316610cc9565b600a546001600160a01b031615611b1a57600a5460405163070c88f360e41b81526001600160a01b03909116906370c88f3090611ae79033906004016120ba565b600060405180830381600087803b158015611b0157600080fd5b505af1158015611b15573d6000803e3d6000fd5b505050505b6009546001600160a01b031615611a3e576009546040516303d9eba760e41b81526001600160a01b0390911690633d9eba7090611b5b9033906004016120ba565b600060405180830381600087803b158015611b7557600080fd5b505af1158015611b89573d6000803e3d6000fd5b50505050565b600082820183811015611a825760405162461bcd60e51b815260040161072a906122ca565b6001600160a01b038216611bda5760405162461bcd60e51b815260040161072a9061246f565b611be682600083611ef7565b611c2981604051806060016040528060228152602001612762602291396001600160a01b038516600090815260208190526040902054919063ffffffff6116f816565b6001600160a01b038316600090815260208190526040902055600254611c55908263ffffffff611a4016565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c969085906126b3565b60405180910390a35050565b600f54600e541415611cb357600080fd5b611cbb611f6a565b601280546000198101908110611ccd57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611d29611724565b0390506127106301e13380828460000151601154020281611d4657fe5b0481611d4e57fe5b04600f6000828254019250508190555060126040518060a0016040528084600001518152602001858152602001600f5481526020016011548152602001611d93611724565b9052815460018181018455600093845260209384902083516005909302019182559282015192810192909255604081015160028301556060810151600383015560800151600490910155505050565b600f54600e541415611df357600080fd5b611dfb611f6a565b601280546000198101908110611e0d57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611e69611724565b0390506127106301e13380828460000151601154020281611e8657fe5b0481611e8e57fe5b600f8054929091049091019055611ea3611f4d565b831115611ec25760405162461bcd60e51b815260040161072a90612570565b60126040518060a0016040528085815260200184602001518152602001600f5481526020016011548152602001611d93611724565b611f02838383611f48565b6103e83311611f235760405162461bcd60e51b815260040161072a90612438565b611f2b610c46565b15611f485760405162461bcd60e51b815260040161072a9061262f565b505050565b6000600f54600f54600e54036127100281611f6457fe5b04905090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461064557600080fd5b600060208284031215611fc1578081fd5b611a828383611f99565b60008060408385031215611fdd578081fd5b611fe78484611f99565b9150611ff68460208501611f99565b90509250929050565b600080600060608486031215612013578081fd5b833561201e816126d8565b9250602084013561202e816126d8565b929592945050506040919091013590565b60008060408385031215612051578182fd5b61205b8484611f99565b946020939093013593505050565b60006020828403121561207a578081fd5b5035919050565b600060208284031215612092578081fd5b5051919050565b600080604083850312156120ab578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015612105578581018301518582016040015282016120e9565b818111156121165783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f4369746164656c546f6b656e4c6f636b65723a2076657374696e6720636f6e7460408201526d1c9858dd081d5b9919599a5b995960921b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526023908201527f5374617274696e672064617465206d75737420626520696e207468652066757460408201526275726560e81b606082015260800190565b60208082526022908201527f4369746164656c546f6b656e3a20696e73756666696369656e742062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526022908201527f4369746164656c496e666c6174696f6e3a20756e657870656374656420696e646040820152610caf60f31b606082015260800190565b60208082526024908201527f4369746164656c546f6b656e4c6f636b65723a20756e657870656374656420696040820152630dcc8caf60e31b606082015260800190565b60208082526025908201527f50657263656e74616765206d757374206265206265747765656e20322520616e604082015264642033302560d81b606082015260800190565b6020808252601d908201527f4369746164656c496e666c6174696f6e3a20636f6d696e6720736f6f6e000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526019908201527f4369746164656c546f6b656e3a2066616b652073656e64657200000000000000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252601c908201527f496e666c6174696f6e20697320616c7265616479207374617274656400000000604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b602080825260139082015272546f6f20686967682070657263656e7461676560681b604082015260600190565b60208082526026908201527f50657263656e74616765206d757374206265206265747765656e2031302520616040820152656e642039302560d01b606082015260800190565b6020808252602c908201527f596f75206861766520746f20776169742033302064617973206166746572206c60408201526b617374206368616e67696e6760a01b606082015260800190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6001600160a01b038116811461084a57600080fd5b6000826126fc57506000610645565b8282028284828161270957fe5b0414611a825760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161072a56fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c83f9d84f75404013676f52f7834c5a5e7082ba039f2c09d6a60c019e1a397a764736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102955760003560e01c806369668fe911610167578063bf17282a116100ce578063f1474bd811610087578063f1474bd814610539578063f2fde38b14610559578063f3fef3a31461056c578063f905c15a1461057f578063f9b7ce0214610587578063ff1764a41461058f57610295565b8063bf17282a146104d2578063c108a402146104e5578063c2ad5b74146104f8578063c686781d1461050b578063ca5c7b911461051e578063dd62ed3e1461052657610295565b806395d89b411161012057806395d89b4114610476578063a457c2d71461047e578063a694fc3a14610491578063a9059cbb146104a4578063ac3cd7c6146104b7578063ba1a681f146104ca57610295565b806369668fe91461042557806370a082311461042d578063715018a6146104405780637fa7faf81461044857806389bb60811461045b5780638da5cb5b1461046e57610295565b806344263fcb1161020b5780634f91440d116101c45780634f91440d146103df57806353d168e7146103e757806355b28b37146103ef57806359355736146103f75780635c975abb1461040a5780636641d9a01461041257610295565b806344263fcb1461038057806344c40464146103935780634ab68e14146103a65780634b45aa12146103ae5780634c0f38c2146103b65780634cf54195146103be57610295565b806323b872dd1161025d57806323b872dd1461030a5780632e17de781461031d578063313ce5671461033257806339509351146103475780633ba71a151461035a57806342966c681461036d57610295565b806306fdde031461029a578063095ea7b3146102b857806318160ddd146102d85780631d0a67e1146102ed5780631d68702d146102f5575b600080fd5b6102a2610597565b6040516102af91906120d9565b60405180910390f35b6102cb6102c636600461203f565b61062d565b6040516102af91906120ce565b6102e061064b565b6040516102af91906126b3565b6102e0610651565b6102fd610657565b6040516102af91906120ba565b6102cb610318366004611fff565b610666565b61033061032b366004612069565b6106f3565b005b61033a61084d565b6040516102af91906126ca565b6102cb61035536600461203f565b610856565b61033061036836600461203f565b6108aa565b61033061037b366004612069565b610916565b61033061038e366004611fb0565b610969565b6103306103a136600461203f565b6109c5565b6102e0610a11565b6102e0610a17565b6102e0610a1d565b6103d16103cc36600461203f565b610a23565b6040516102af9291906126bc565b610330610adf565b6102fd610c16565b6102e0610c25565b6102e0610405366004611fb0565b610c2b565b6102cb610c46565b6103d1610420366004612069565b610c56565b6102e0610cc3565b6102e061043b366004611fb0565b610cc9565b610330610ce4565b610330610456366004611fb0565b610d6e565b6102e0610469366004611fb0565b610dca565b6102fd610de5565b6102a2610df9565b6102cb61048c36600461203f565b610e5a565b61033061049f366004612069565b610ec8565b6102cb6104b236600461203f565b610f24565b6103306104c5366004612099565b610f38565b6102e0611068565b6102e06104e0366004611fb0565b61106e565b6103306104f3366004612099565b611080565b61033061050636600461203f565b6111a3565b610330610519366004612069565b6111ec565b6102e06112b1565b6102e0610534366004611fcb565b6112c0565b61054c610547366004612069565b6112eb565b6040516102af9190612679565b610330610567366004611fb0565b611373565b61033061057a36600461203f565b61143a565b6102e061147a565b610330611480565b6102fd611510565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106235780601f106105f857610100808354040283529160200191610623565b820191906000526020600020905b81548152906001019060200180831161060657829003601f168201915b5050505050905090565b600061064161063a61151f565b8484611523565b5060015b92915050565b60025490565b60105490565b600a546001600160a01b031690565b60006106738484846115d7565b6106e98461067f61151f565b6106e4856040518060600160405280602881526020016127aa602891396001600160a01b038a166000908152600160205260408120906106bd61151f565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6116f816565b611523565b5060019392505050565b6000600c5411801561070e5750610708611724565b600c5411155b6107335760405162461bcd60e51b815260040161072a906123cc565b60405180910390fd5b3360009081526013602052604090205481111561074f57600080fd5b610757611728565b6014546107739061010090046001600160a01b031633836115d7565b33600090815260136020526040902054610793908263ffffffff611a4016565b3360009081526013602052604090819020919091558051808201909152601590806107bc611a89565b81526020016107c9611724565b905281546001818101845560009384526020808520845160029094020192835592830151910155338252601681526040808320815180830183526013845291909320548152908101610819611724565b905281546001818101845560009384526020938490208351600290930201918255929091015191015561084a611aa6565b50565b60055460ff1690565b600061064161086361151f565b846106e4856001600061087461151f565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611b8f16565b600a546001600160a01b031633146108c157600080fd5b6108cd600a83836115d7565b6001600160a01b0382166000908152600b60205260409020546108f6908263ffffffff611a4016565b6001600160a01b039092166000908152600b602052604090209190915550565b6103e833116109375760405162461bcd60e51b815260040161072a90612438565b8061094133610cc9565b101561095f5760405162461bcd60e51b815260040161072a90612200565b61084a3382611bb4565b61097161151f565b60055461010090046001600160a01b039081169116146109a35760405162461bcd60e51b815260040161072a90612403565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600a546001600160a01b031633146109dc57600080fd5b6109e882600a836115d7565b6001600160a01b0382166000908152600b60205260409020546108f6908263ffffffff611b8f16565b60155490565b60125490565b600e5490565b6001600160a01b03821660009081526016602052604081205481908310610a5c5760405162461bcd60e51b815260040161072a90612343565b6001600160a01b0384166000908152601660205260409020805484908110610a8057fe5b906000526020600020906002020160000154915060166000856001600160a01b03166001600160a01b031681526020019081526020016000208381548110610ac457fe5b90600052602060002090600202016001015490509250929050565b6000600c54118015610afa5750610af4611724565b600c5411155b610b165760405162461bcd60e51b815260040161072a906123cc565b6009546001600160a01b0316610b3e5760405162461bcd60e51b815260040161072a9061212c565b60095460405163ddeae03360e01b81526000916001600160a01b03169063ddeae03390610b6f9033906004016120ba565b602060405180830381600087803b158015610b8957600080fd5b505af1158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bc19190810190612081565b905060008111610bd057600080fd5b610bd8611728565b601454610bf69060019061010090046001600160a01b0316836115d7565b33600090815260136020526040902054610793908263ffffffff611b8f16565b6006546001600160a01b031681565b600c5490565b6001600160a01b031660009081526013602052604090205490565b600554600160a81b900460ff1690565b60155460009081908310610c7c5760405162461bcd60e51b815260040161072a90612343565b60158381548110610c8957fe5b906000526020600020906002020160000154915060158381548110610caa57fe5b9060005260206000209060020201600101549050915091565b60075481565b6001600160a01b031660009081526020819052604090205490565b610cec61151f565b60055461010090046001600160a01b03908116911614610d1e5760405162461bcd60e51b815260040161072a90612403565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b610d7661151f565b60055461010090046001600160a01b03908116911614610da85760405162461bcd60e51b815260040161072a90612403565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b031660009081526016602052604090205490565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106235780601f106105f857610100808354040283529160200191610623565b6000610641610e6761151f565b846106e4856040518060600160405280602581526020016127d26025913960016000610e9161151f565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6116f816565b6000600c54118015610ee35750610edd611724565b600c5411155b610eff5760405162461bcd60e51b815260040161072a906123cc565b610f07611728565b601454610bf690339061010090046001600160a01b0316836115d7565b6000610641610f3161151f565b84846115d7565b600a546001600160a01b03163314610f4f57600080fd5b600a8110158015610f615750605a8111155b610f7d5760405162461bcd60e51b815260040161072a9061259d565b610f85611f6a565b601280546000198101908110610f9757fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151610ff3611724565b03905062278d008110156110195760405162461bcd60e51b815260040161072a906125e3565b611021611728565b61102a83611ca2565b837f96a647810411309169e354743b6a4e9d05e3c777f5fae278e65f6168fe7279ba8460405161105a91906126b3565b60405180910390a250505050565b60085481565b60136020526000908152604090205481565b600a546001600160a01b0316331461109757600080fd5b60c881101580156110aa5750610bb88111155b6110c65760405162461bcd60e51b815260040161072a90612387565b6110ce611f6a565b6012805460001981019081106110e057fe5b90600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090506000816080015161113c611724565b03905062278d008110156111625760405162461bcd60e51b815260040161072a906125e3565b61116a611728565b61117383611de2565b837f8f4db2ceeda2c579bf7d6f7036f9f300565d76719308713e3c85d3484b4ebb308460405161105a91906126b3565b6111ab61151f565b60055461010090046001600160a01b039081169116146111dd5760405162461bcd60e51b815260040161072a90612403565b6111e83083836115d7565b5050565b6111f461151f565b60055461010090046001600160a01b039081169116146112265760405162461bcd60e51b815260040161072a90612403565b600c54158061123d5750611238611724565b600c54115b6112595760405162461bcd60e51b815260040161072a906124f5565b611261611724565b811161127f5760405162461bcd60e51b815260040161072a906121bd565b600c81905560108190556012805482919060009061129957fe5b90600052602060002090600502016004018190555050565b60006112bb611a89565b905090565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6112f3611f6a565b60125482106113145760405162461bcd60e51b815260040161072a90612301565b6012828154811061132157fe5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b61137b61151f565b60055461010090046001600160a01b039081169116146113ad5760405162461bcd60e51b815260040161072a90612403565b6001600160a01b0381166113d35760405162461bcd60e51b815260040161072a90612242565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6009546001600160a01b031633148061145d5750600a546001600160a01b031633145b61146657600080fd5b61146e611728565b6111e8600183836115d7565b60075490565b61148861151f565b60055461010090046001600160a01b039081169116146114ba5760405162461bcd60e51b815260040161072a90612403565b600c54156114da5760405162461bcd60e51b815260040161072a906124f5565b6114e2611724565b600c8190556010819055601280546000906114f957fe5b906000526020600020906005020160040181905550565b6009546001600160a01b031690565b3390565b6001600160a01b0383166115495760405162461bcd60e51b815260040161072a9061252c565b6001600160a01b03821661156f5760405162461bcd60e51b815260040161072a90612288565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906115ca9085906126b3565b60405180910390a3505050565b6001600160a01b0383166115fd5760405162461bcd60e51b815260040161072a906124b0565b6001600160a01b0382166116235760405162461bcd60e51b815260040161072a9061217a565b61162e838383611ef7565b61167181604051806060016040528060268152602001612784602691396001600160a01b038616600090815260208190526040902054919063ffffffff6116f816565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546116a6908263ffffffff611b8f16565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115ca9085906126b3565b6000818484111561171c5760405162461bcd60e51b815260040161072a91906120d9565b505050900390565b4290565b600f54600e54141561173957611a3e565b6000601054611746611724565b0390506301e1338081101561175b5750611a3e565b611763611f6a565b60128054600019810190811061177557fe5b600091825260208083206040805160a0810182526005909402909101805480855260018201549385019390935260028101549184019190915260038101546060840152600401546080830152909250905b6301e133808404811015611a33576301e1338060106000828254019250508190555060006127106301e133808560800151601054038560115402028161180857fe5b048161181057fe5b049050600e54600f548201101580611828575060c883105b156118bc57600e54600f8190555060126040518060a0016040528061184b611f4d565b815260208781015181830152600f54604080840182905260608085019290925260105460809485015285546001818101885560009788529684902086516005909202019081559285015195830195909555938301516002820155928201516003840155015160049091015550611a33565b600f80548201905560c88311156118ff576032831180156118e0575060c860328403115b156118ec576032830392505b60c88310156118fa5760c892505b611923565b8260c81415611923576000611912611f4d565b905060c8811015611921578093505b505b506040805160a081018252838152602085810151908201908152600f549282018381526060830193845260105460808401908152601280546001808201835560009290925294517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344460059096029586015592517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344585015590517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344684015592517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344783015591517fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec344890910155016117c6565b5050600f5460115550505b565b6000611a8283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116f8565b9392505050565b6014546000906112bb9061010090046001600160a01b0316610cc9565b600a546001600160a01b031615611b1a57600a5460405163070c88f360e41b81526001600160a01b03909116906370c88f3090611ae79033906004016120ba565b600060405180830381600087803b158015611b0157600080fd5b505af1158015611b15573d6000803e3d6000fd5b505050505b6009546001600160a01b031615611a3e576009546040516303d9eba760e41b81526001600160a01b0390911690633d9eba7090611b5b9033906004016120ba565b600060405180830381600087803b158015611b7557600080fd5b505af1158015611b89573d6000803e3d6000fd5b50505050565b600082820183811015611a825760405162461bcd60e51b815260040161072a906122ca565b6001600160a01b038216611bda5760405162461bcd60e51b815260040161072a9061246f565b611be682600083611ef7565b611c2981604051806060016040528060228152602001612762602291396001600160a01b038516600090815260208190526040902054919063ffffffff6116f816565b6001600160a01b038316600090815260208190526040902055600254611c55908263ffffffff611a4016565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c969085906126b3565b60405180910390a35050565b600f54600e541415611cb357600080fd5b611cbb611f6a565b601280546000198101908110611ccd57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611d29611724565b0390506127106301e13380828460000151601154020281611d4657fe5b0481611d4e57fe5b04600f6000828254019250508190555060126040518060a0016040528084600001518152602001858152602001600f5481526020016011548152602001611d93611724565b9052815460018181018455600093845260209384902083516005909302019182559282015192810192909255604081015160028301556060810151600383015560800151600490910155505050565b600f54600e541415611df357600080fd5b611dfb611f6a565b601280546000198101908110611e0d57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611e69611724565b0390506127106301e13380828460000151601154020281611e8657fe5b0481611e8e57fe5b600f8054929091049091019055611ea3611f4d565b831115611ec25760405162461bcd60e51b815260040161072a90612570565b60126040518060a0016040528085815260200184602001518152602001600f5481526020016011548152602001611d93611724565b611f02838383611f48565b6103e83311611f235760405162461bcd60e51b815260040161072a90612438565b611f2b610c46565b15611f485760405162461bcd60e51b815260040161072a9061262f565b505050565b6000600f54600f54600e54036127100281611f6457fe5b04905090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461064557600080fd5b600060208284031215611fc1578081fd5b611a828383611f99565b60008060408385031215611fdd578081fd5b611fe78484611f99565b9150611ff68460208501611f99565b90509250929050565b600080600060608486031215612013578081fd5b833561201e816126d8565b9250602084013561202e816126d8565b929592945050506040919091013590565b60008060408385031215612051578182fd5b61205b8484611f99565b946020939093013593505050565b60006020828403121561207a578081fd5b5035919050565b600060208284031215612092578081fd5b5051919050565b600080604083850312156120ab578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015612105578581018301518582016040015282016120e9565b818111156121165783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f4369746164656c546f6b656e4c6f636b65723a2076657374696e6720636f6e7460408201526d1c9858dd081d5b9919599a5b995960921b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526023908201527f5374617274696e672064617465206d75737420626520696e207468652066757460408201526275726560e81b606082015260800190565b60208082526022908201527f4369746164656c546f6b656e3a20696e73756666696369656e742062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526022908201527f4369746164656c496e666c6174696f6e3a20756e657870656374656420696e646040820152610caf60f31b606082015260800190565b60208082526024908201527f4369746164656c546f6b656e4c6f636b65723a20756e657870656374656420696040820152630dcc8caf60e31b606082015260800190565b60208082526025908201527f50657263656e74616765206d757374206265206265747765656e20322520616e604082015264642033302560d81b606082015260800190565b6020808252601d908201527f4369746164656c496e666c6174696f6e3a20636f6d696e6720736f6f6e000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526019908201527f4369746164656c546f6b656e3a2066616b652073656e64657200000000000000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252601c908201527f496e666c6174696f6e20697320616c7265616479207374617274656400000000604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b602080825260139082015272546f6f20686967682070657263656e7461676560681b604082015260600190565b60208082526026908201527f50657263656e74616765206d757374206265206265747765656e2031302520616040820152656e642039302560d01b606082015260800190565b6020808252602c908201527f596f75206861766520746f20776169742033302064617973206166746572206c60408201526b617374206368616e67696e6760a01b606082015260800190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6001600160a01b038116811461084a57600080fd5b6000826126fc57506000610645565b8282028284828161270957fe5b0414611a825760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161072a56fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c83f9d84f75404013676f52f7834c5a5e7082ba039f2c09d6a60c019e1a397a764736f6c63430006020033",
  "sourceMap": "138:575:0:-:0;;;184:398;8:9:-1;5:2;;;30:1;27;20:12;5:2;184:398:0;;;;;;;;;;;;;;;;;;;;;2013:141:31;;;;;;;;;;;;;-1:-1:-1;;;2013:141:31;;;;;;;;;;;;;;;;-1:-1:-1;;;2013:141:31;;;2093:4;2085:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2107:16:31;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:31;:14;;-1:-1:-1;;2133:14:31;2145:2;2133:14;;;-1:-1:-1;2133:9:31;885:12:28;-1:-1:-1;;;;;885:10:28;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:28;;-1:-1:-1;;;;;907:18:28;;;;;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:28;-1:-1:-1;;940:43:28;;-1:-1:-1;;940:43:28;-1:-1:-1;923:7:35;:15;;-1:-1:-1;;;;923:15:35;;;1139:12:24;:28;;-1:-1:-1;;;;;;1139:28:24;1162:4;1139:28;;;1190:15;1177:10;:28;1232:4;1215:14;:21;1247:17;;-1:-1:-1;;;;;1247:14:24;:17;:::i;:::-;278:14:0;295:24;315:3;300:9;295:19;;;;;;:24;;;;:::i;:::-;278:41;-1:-1:-1;329:28:0;343:1;278:41;-1:-1:-1;;;;;329:5:0;:28;:::i;:::-;368:45;383:9;;405:3;410:2;-1:-1:-1;;;;;368:14:0;:45;:::i;:::-;424:35;456:1;-1:-1:-1;;;;;424:23:0;:35;:::i;:::-;470:46;484:4;491:24;511:3;496:9;491:19;;;;;;:24;;;;:::i;:::-;-1:-1:-1;;;;;470:5:0;:46;:::i;:::-;551:22;569:3;551:13;:17;;;;;;:22;;;;:::i;:::-;534:13;-1:-1:-1;;;;;534:11:0;:13;:::i;:::-;:39;527:47;;;;184:398;;138:575;;590:104:26;677:10;590:104;;:::o;10020:88:31:-;10080:9;:21;;-1:-1:-1;;10080:21:31;;;;;;;;;;;;10020:88::o;2180:459:30:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:30;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:30;;;;;;;;;;;;;;;;;2631:1;-1:-1:-1;2180:459:30;;;;;:::o;7835:370:31:-;-1:-1:-1;;;;;7918:21:31;;7910:65;;;;-1:-1:-1;;;7910:65:31;;;;;;;;;7986:49;8015:1;8019:7;8028:6;-1:-1:-1;;;;;7986:20:31;:49;:::i;:::-;8061:24;8078:6;8061:12;;:16;;;;;;:24;;;;:::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:31;;:9;:18;;;;;;;;;;;;:30;;8139:6;;8116:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8095:18:31;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;8095:18;;:9;8161:37;;;;8191:6;;8161:37;;;;;;;;;;7835:370;;:::o;5981:465:23:-;6141:14;;;;6140:15;6132:24;;;;;;6167:14;:21;;-1:-1:-1;;6167:21:23;6184:4;6167:21;;;6212:22;;;6199:10;:35;6244:15;:26;;;6280:19;:30;;;6344:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6321:17;;6344:93;;;6424:12;-1:-1:-1;;;;;6424:10:23;:12;:::i;:::-;6344:93;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;6321:117:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;5981:465:23:o;3631:182:25:-;3717:14;;;;3716:15;3708:24;;;;;;3743:14;:21;;-1:-1:-1;;;;;3774:31:25;;;3743:21;3774:31;-1:-1:-1;;;;;;;;3743:21:25;;;3760:4;3743:21;3774:31;;;;;;;;;;3631:182::o;3262:98:31:-;3341:12;;3262:98;:::o;2462:305:24:-;2570:44;2597:4;2603:2;2607:6;2570:26;;;;;:44;;:::i;:::-;2652:4;2638:10;2633:23;2625:61;;;;-1:-1:-1;;;2625:61:24;;;;;;;;;2705:8;-1:-1:-1;;;;;2705:6:24;:8;:::i;:::-;2704:9;2696:64;;;;-1:-1:-1;;;2696:64:24;;;;;;;;;2462:305;;;:::o;874:176:30:-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:30;;;;;;;;2773:98:24;2849:15;2773:98;:::o;1040:76:35:-;1102:7;;-1:-1:-1;;;1102:7:35;;;;;1040:76::o;138:575:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;138:575:0;;;-1:-1:-1;138:575:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;146:263:-1;;261:2;249:9;240:7;236:23;232:32;229:2;;;-1:-1;;267:12;229:2;-1:-1;83:13;;223:186;-1:-1;223:186;2313:407;2504:2;2518:47;;;641:2;2489:18;;;4707:19;677:29;4747:14;;;657:50;726:12;;;2475:245;2727:407;2918:2;2932:47;;;977:2;2903:18;;;4707:19;1013:34;4747:14;;;993:55;-1:-1;;;1068:12;;;1061:25;1105:12;;;2889:245;3141:407;3332:2;3346:47;;;1356:2;3317:18;;;4707:19;1392:27;4747:14;;;1372:48;1439:12;;;3303:245;3555:407;3746:2;3760:47;;;1690:2;3731:18;;;4707:19;1726:33;4747:14;;;1706:54;1779:12;;;3717:245;3969:407;4160:2;4174:47;;;2030:2;4145:18;;;4707:19;2066:34;4747:14;;;2046:55;-1:-1;;;2121:12;;;2114:34;2167:12;;;4131:245;4383:213;2264:37;;;4501:2;4486:18;;4472:124;;138:575:0;;;;;;",
  "deployedSourceMap": "138:575:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;138:575:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:31;;;:::i;:::-;;;;;;;;;;;;;;;;4255:166;;;;;;;;;:::i;:::-;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;990:109:23;;;:::i;1968:94:24:-;;;:::i;:::-;;;;;;;;4881:317:31;;;;;;;;;:::i;2156:535:25:-;;;;;;;;;:::i;:::-;;3121:81:31;;;:::i;:::-;;;;;;;;5593:215;;;;;;;;;:::i;2269:187:24:-;;;;;;;;;:::i;1367:237::-;;;;;;;;;:::i;1850:112::-;;;;;;;;;:::i;2068:195::-;;;;;;;;;:::i;720:124:25:-;;;:::i;1432:113:23:-;;;:::i;1105:91::-;;;:::i;1320:336:25:-;;;;;;;;;:::i;:::-;;;;;;;;;2697:672;;;:::i;480:27:24:-;;;:::i;876:108:23:-;;;:::i;496:115:25:-;;;;;;;;;:::i;1040:76:35:-;;;:::i;850:329:25:-;;;;;;;;;:::i;513:22:24:-;;;:::i;3418:117:31:-;;;;;;;;;:::i;1689:145:28:-;;;:::i;1610:126:24:-;;;;;;;;;:::i;1185:129:25:-;;;;;;;;;:::i;1066:77:28:-;;;:::i;2413:85:31:-;;;:::i;6295:266::-;;;;;;;;;:::i;1662:488:25:-;;;;;;;;;:::i;3738:172:31:-;;;;;;;;;:::i;2929:512:23:-;;;;;;;;;:::i;541:26:24:-;;;:::i;254:44:25:-;;;;;;;;;:::i;2403:520:23:-;;;;;;;;;:::i;588:122:0:-;;;;;;;;;:::i;1834:395:23:-;;;;;;;;;:::i;617:97:25:-;;;:::i;3968:149:31:-;;;;;;;;;:::i;1202:224:23:-;;;;;;;;;:::i;:::-;;;;;;;;1983:240:28;;;;;;;;;:::i;2235:162:23:-;;;;;;;;;:::i;1278:83:24:-;;;:::i;1551:277:23:-;;;:::i;1742:102:24:-;;;:::i;2219:81:31:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:31;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;990:109:23:-;1073:19;;990:109;:::o;1968:94:24:-;2050:4;;-1:-1:-1;;;;;2050:4:24;1968:94;:::o;4881:317:31:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:31;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:31;;;;;;;;;;;;-1:-1:-1;5080:33:31;;;:89;;:37;:89;:::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:31;4881:317;;;;;:::o;2156:535:25:-;779:1:23;758:18;;:22;:60;;;;;806:12;:10;:12::i;:::-;784:18;;:34;;758:60;750:102;;;;-1:-1:-1;;;750:102:23;;;;;;;;;;;;;;;;;2242:10:25::1;2230:23;::::0;;;:11:::1;:23;::::0;;;;;:33;-1:-1:-1;2230:33:25::1;2222:42;;;::::0;::::1;;2275:24;:22;:24::i;:::-;2320:14;::::0;2310:45:::1;::::0;2320:14:::1;::::0;::::1;-1:-1:-1::0;;;;;2320:14:25::1;2336:10;2348:6:::0;2310:9:::1;:45::i;:::-;2403:10;2391:23;::::0;;;:11:::1;:23;::::0;;;;;:35:::1;::::0;2419:6;2391:35:::1;:27;:35;:::i;:::-;2377:10;2365:23;::::0;;;:11:::1;:23;::::0;;;;;;:61;;;;2498:47;;;;::::1;::::0;;;2467:25:::1;::::0;2498:47;2510:20:::1;:18;:20::i;:::-;2498:47;;;;2532:12;:10;:12::i;:::-;2498:47:::0;;27:10:-1;;39:1:::1;23:18:::0;;::::1;45:23:::0;;-1:-1;2467:79:25;;;::::1;::::0;;;;;::::1;::::0;;::::1;;::::0;;;;;::::1;::::0;;::::1;::::0;2576:10:::1;2556:31:::0;;:19:::1;:31:::0;;;;;;2593:50;;;;::::1;::::0;;2605:11:::1;:23:::0;;;;;;;2593:50;;;;::::1;2630:12;:10;:12::i;:::-;2593:50:::0;;27:10:-1;;39:1:::1;23:18:::0;;::::1;45:23:::0;;-1:-1;2556:88:25;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;;;;;;::::1;::::0;;::::1;::::0;2669:14:::1;:12;:14::i;:::-;2156:535:::0;:::o;3121:81:31:-;3186:9;;;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:31;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:31;;;:34;;;;;;;;;;;:50;:38;:50;:::i;2269:187:24:-;934:4;;-1:-1:-1;;;;;934:4:24;912:10;:27;904:36;;;;;;2352:44:::1;702:2;2385;2389:6;2352:9;:44::i;:::-;-1:-1:-1::0;;;;;2423:14:24;::::1;;::::0;;;:10:::1;:14;::::0;;;;;:26:::1;::::0;2442:6;2423:26:::1;:18;:26;:::i;:::-;-1:-1:-1::0;;;;;2406:14:24;;::::1;;::::0;;;:10:::1;:14;::::0;;;;:43;;;;-1:-1:-1;2269:187:24:o;1367:237::-;1440:4;1426:10;1421:23;1413:61;;;;-1:-1:-1;;;1413:61:24;;;;;;;;;1517:6;1492:21;1502:10;1492:9;:21::i;:::-;:31;;1484:78;;;;-1:-1:-1;;;1484:78:24;;;;;;;;;1572:25;1578:10;1590:6;1572:5;:25::i;1850:112::-;1280:12:28;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;1925:4:24::1;:30:::0;;-1:-1:-1;;;;;;1925:30:24::1;-1:-1:-1::0;;;;;1925:30:24;;;::::1;::::0;;;::::1;::::0;;1850:112::o;2068:195::-;934:4;;-1:-1:-1;;;;;934:4:24;912:10;:27;904:36;;;;;;2153:46:::1;2163:4;702:2;2192:6;2153:9;:46::i;:::-;-1:-1:-1::0;;;;;2228:16:24;::::1;;::::0;;;:10:::1;:16;::::0;;;;;:28:::1;::::0;2249:6;2228:28:::1;:20;:28;:::i;720:124:25:-:0;805:25;:32;720:124;:::o;1432:113:23:-;1514:17;:24;1432:113;:::o;1105:91::-;1179:10;;1105:91;:::o;1320:336:25:-;-1:-1:-1;;;;;1466:25:25;;1403:10;1466:25;;;:19;:25;;;;;:32;1403:10;;1458:40;;1449:90;;;;-1:-1:-1;;;1449:90:25;;;;;;;;;-1:-1:-1;;;;;1557:25:25;;;;;;:19;:25;;;;;:32;;1583:5;;1557:32;;;;;;;;;;;;;;;;:38;;;1549:46;;1612:19;:25;1632:4;-1:-1:-1;;;;;1612:25:25;-1:-1:-1;;;;;1612:25:25;;;;;;;;;;;;1638:5;1612:32;;;;;;;;;;;;;;;;;;:37;;;1605:44;;1320:336;;;;;:::o;2697:672::-;779:1:23;758:18;;:22;:60;;;;;806:12;:10;:12::i;:::-;784:18;;:34;;758:60;750:102;;;;-1:-1:-1;;;750:102:23;;;;;;;;;2768:8:25::1;::::0;-1:-1:-1;;;;;2768:8:25::1;2752:90;;;;-1:-1:-1::0;;;2752:90:25::1;;;;;;;;;2875:8;::::0;:29:::1;::::0;-1:-1:-1;;;2875:29:25;;2861:11:::1;::::0;-1:-1:-1;;;;;2875:8:25::1;::::0;:17:::1;::::0;:29:::1;::::0;2893:10:::1;::::0;2875:29:::1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;2875:29:25;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2875:29:25;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2875:29:25;;;;;;;;;2861:43;;2932:1;2923:6;:10;2915:19;;;::::0;::::1;;2945:24;:22;:24::i;:::-;3001:14;::::0;2979:45:::1;::::0;2997:1:::1;::::0;3001:14:::1;::::0;::::1;-1:-1:-1::0;;;;;3001:14:25::1;3017:6:::0;2979:9:::1;:45::i;:::-;3081:10;3069:23;::::0;;;:11:::1;:23;::::0;;;;;:35:::1;::::0;3097:6;3069:35:::1;:27;:35;:::i;480:27:24:-:0;;;-1:-1:-1;;;;;480:27:24;;:::o;876:108:23:-;959:18;;876:108;:::o;496:115:25:-;-1:-1:-1;;;;;584:20:25;561:4;584:20;;;:11;:20;;;;;;;496:115::o;1040:76:35:-;1102:7;;-1:-1:-1;;;1102:7:35;;;;;1040:76::o;850:329:25:-;989:25;:32;926:10;;;;981:40;;972:90;;;;-1:-1:-1;;;972:90:25;;;;;;;;;1080:25;1106:5;1080:32;;;;;;;;;;;;;;;;;;:38;;;1072:46;;1135:25;1161:5;1135:32;;;;;;;;;;;;;;;;;;:37;;;1128:44;;850:329;;;:::o;513:22:24:-;;;;:::o;3418:117:31:-;-1:-1:-1;;;;;3510:18:31;3484:7;3510:18;;;;;;;;;;;;3418:117::o;1689:145:28:-;1280:12;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;1779:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1779:6:28::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:28::1;::::0;;1689:145::o;1610:126:24:-;1280:12:28;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;1690:8:24::1;:39:::0;;-1:-1:-1;;;;;;1690:39:24::1;-1:-1:-1::0;;;;;1690:39:24;;;::::1;::::0;;;::::1;::::0;;1610:126::o;1185:129:25:-;-1:-1:-1;;;;;1275:25:25;1252:4;1275:25;;;:19;:25;;;;;:32;;1185:129::o;1066:77:28:-;1130:6;;;;;-1:-1:-1;;;;;1130:6:28;;1066:77::o;2413:85:31:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;6295:266;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:31;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:31;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;1662:488:25:-;779:1:23;758:18;;:22;:60;;;;;806:12;:10;:12::i;:::-;784:18;;:34;;758:60;750:102;;;;-1:-1:-1;;;750:102:23;;;;;;;;;1734:24:25::1;:22;:24::i;:::-;1791:14;::::0;1769:45:::1;::::0;1779:10:::1;::::0;1791:14:::1;::::0;::::1;-1:-1:-1::0;;;;;1791:14:25::1;1807:6:::0;1769:9:::1;:45::i;3738:172:31:-:0;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;2929:512:23:-;934:4:24;;-1:-1:-1;;;;;934:4:24;912:10;:27;904:36;;;;;;3026:2:23::1;3019:3;:9;;:22;;;;;3039:2;3032:3;:9;;3019:22;3011:73;;;;-1:-1:-1::0;;;3011:73:23::1;;;;;;;;;3103:32;;:::i;:::-;3138:17;3156:24:::0;;-1:-1:-1;;3156:28:23;;;3138:47;::::1;;;;;;;;;;;;;;;3103:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3195:14;3227:9;:14;;;3212:12;:10;:12::i;:::-;:29;3195:46;;3272:7;3259:9;:20;;3251:77;;;;-1:-1:-1::0;;;3251:77:23::1;;;;;;;;;3339:24;:22;:24::i;:::-;3373:19;3388:3;3373:14;:19::i;:::-;3421:7;3407:27;3430:3;3407:27;;;;;;;;;;;;;;;950:1:24;;2929:512:23::0;;:::o;541:26:24:-;;;;:::o;254:44:25:-;;;;;;;;;;;;;:::o;2403:520:23:-;934:4:24;;-1:-1:-1;;;;;934:4:24;912:10;:27;904:36;;;;;;2502:3:23::1;2495;:10;;:25;;;;;2516:4;2509:3;:11;;2495:25;2487:75;;;;-1:-1:-1::0;;;2487:75:23::1;;;;;;;;;2581:32;;:::i;:::-;2616:17;2634:24:::0;;-1:-1:-1;;2634:28:23;;;2616:47;::::1;;;;;;;;;;;;;;;2581:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2673:14;2705:9;:14;;;2690:12;:10;:12::i;:::-;:29;2673:46;;2750:7;2737:9;:20;;2729:77;;;;-1:-1:-1::0;;;2729:77:23::1;;;;;;;;;2817:24;:22;:24::i;:::-;2851:21;2868:3;2851:16;:21::i;:::-;2903:7;2887:29;2912:3;2887:29;;;;;;;588:122:0::0;1280:12:28;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;667:36:0::1;685:4;692:2;696:6;667:9;:36::i;:::-;588:122:::0;;:::o;1834:395:23:-;1280:12:28;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;1909:18:23::1;::::0;:23;;:60:::1;;;1957:12;:10;:12::i;:::-;1936:18;;:33;1909:60;1900:102;;;;-1:-1:-1::0;;;1900:102:23::1;;;;;;;;;2028:12;:10;:12::i;:::-;2021:4;:19;2012:68;;;;-1:-1:-1::0;;;2012:68:23::1;;;;;;;;;2090:18;:25:::0;;;2125:19:::1;:40:::0;;;2175:17:::1;:20:::0;;2111:4;;2175:17;-1:-1:-1;;2175:20:23::1;;;;;;;;;;;;;;:25;;:47;;;;1834:395:::0;:::o;617:97:25:-;664:4;687:20;:18;:20::i;:::-;680:27;;617:97;:::o;3968:149:31:-;-1:-1:-1;;;;;4083:18:31;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;1202:224:23:-;1265:22;;:::i;:::-;1315:17;:24;1307:32;;1299:79;;;;-1:-1:-1;;;1299:79:23;;;;;;;;;1395:17;1413:5;1395:24;;;;;;;;;;;;;;;;;;1388:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:224;;;:::o;1983:240:28:-;1280:12;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;-1:-1:-1;;;;;2071:22:28;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:28::1;;;;;;;;;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:28;;::::1;::::0;2172:6:::1;::::0;::::1;;::::0;2151:38:::1;::::0;;;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;2199:17:28;;::::1;;;-1:-1:-1::0;;;;;;2199:17:28;;::::1;::::0;;;::::1;::::0;;1983:240::o;2235:162:23:-;1041:8:24;;-1:-1:-1;;;;;1041:8:24;1019:10;:31;;:62;;-1:-1:-1;1076:4:24;;-1:-1:-1;;;;;1076:4:24;1054:10;:27;1019:62;1011:71;;;;;;2323:24:23::1;:22;:24::i;:::-;2357:33;2375:1;2379:2;2383:6;2357:9;:33::i;1278:83:24:-:0;1344:10;;1278:83;:::o;1551:277:23:-;1280:12:28;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:28;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:28;;;;;;;;;1615:18:23::1;::::0;:23;1606:65:::1;;;;-1:-1:-1::0;;;1606:65:23::1;;;;;;;;;1702:12;:10;:12::i;:::-;1681:18;:33:::0;;;1724:19:::1;:40:::0;;;1774:17:::1;:20:::0;;-1:-1:-1;;1774:20:23::1;;;;;;;;;;;;;;:25;;:47;;;;1551:277::o:0;1742:102:24:-;1828:8;;-1:-1:-1;;;;;1828:8:24;1742:102;:::o;590:104:26:-;677:10;590:104;:::o;9357:340:31:-;-1:-1:-1;;;;;9458:19:31;;9450:68;;;;-1:-1:-1;;;9450:68:31;;;;;;;;;-1:-1:-1;;;;;9536:21:31;;9528:68;;;;-1:-1:-1;;;9528:68:31;;;;;;;;;-1:-1:-1;;;;;9607:18:31;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9658:32;;;;;9637:6;;9658:32;;;;;;;;;;9357:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:31;;7132:70;;;;-1:-1:-1;;;7132:70:31;;;;;;;;;-1:-1:-1;;;;;7220:23:31;;7212:71;;;;-1:-1:-1;;;7212:71:31;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:31;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7352:17:31;;;:9;:17;;;;;;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7453:20:31;;;:9;:20;;;;;;;;;;;;:55;;;;7523:35;;;;;;;;;;7551:6;;7523:35;;1746:187:30;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:30;;;;;;;;;;-1:-1:-1;;;1902:5:30;;;1746:187::o;2773:98:24:-;2849:15;2773:98;:::o;4489:1486:23:-;4560:15;;4546:10;;:29;4542:42;;;4577:7;;4542:42;4594:14;4626:19;;4611:12;:10;:12::i;:::-;:34;4594:51;;4671:8;4659:9;:20;4655:33;;;4681:7;;;4655:33;4698:32;;:::i;:::-;4733:17;4751:24;;-1:-1:-1;;4751:28:23;;;4733:47;;;;;;;;;;;;;;4698:82;;;;;;;;4733:47;;;;;;;4698:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4698:82:23;4835:1087;4868:8;4856:9;:20;4852:1;:24;4835:1087;;;4920:8;4897:19;;:31;;;;;;;;;;;4942:17;5043:5;5032:8;5014:9;:14;;;4992:19;;:36;4984:4;4962:19;;:26;:67;:78;;;;;;:86;;;;;;4942:106;;5100:10;;5081:15;;5066:12;:30;:44;;:58;;;;5121:3;5114:4;:10;5066:58;5062:849;;;5162:10;;5144:15;:28;;;;5190:17;5213:108;;;;;;;;5229:14;:12;:14::i;:::-;5213:108;;;5245:20;;;;5213:108;;;;5267:15;;5213:108;;;;;;;;;;;;;;;5301:19;;5213:108;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;5190:132:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5340:5:23;;5062:849;5384:15;:31;;;;;;5444:3;5437:10;;5433:324;;;5482:2;5475:4;:9;:28;;;;;5500:3;5495:2;5488:4;:9;:15;5475:28;5471:44;;;5513:2;5505:10;;;;5471:44;5567:3;5560:4;:10;5556:26;;;5579:3;5572:10;;5556:26;5433:324;;;5628:4;5636:3;5628:11;5624:133;;;5663:9;5675:14;:12;:14::i;:::-;5663:26;;5722:3;5715:4;:10;5711:27;;;5734:4;5727:11;;5711:27;5624:133;;-1:-1:-1;5797:98:23;;;;;;;;;;;;5819:20;;;;5797:98;;;;;;5841:15;;5797:98;;;;;;;;;;;;5875:19;;5797:98;;;;;;5774:17;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;5774:122:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4878:3;4835:1087;;;-1:-1:-1;;5953:15:23;;5931:19;:37;-1:-1:-1;;4489:1486:23;:::o;1321:134:30:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;1321:134;-1:-1:-1;;;1321:134:30:o;3819:107:25:-;3904:14;;3871:4;;3894:25;;3904:14;;;-1:-1:-1;;;;;3904:14:25;3894:9;:25::i;3375:250::-;3438:4;;-1:-1:-1;;;;;3438:4:25;3430:27;3426:87;;3473:4;;:29;;-1:-1:-1;;;3473:29:25;;-1:-1:-1;;;;;3473:4:25;;;;:17;;:29;;3491:10;;3473:29;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3473:29:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3473:29:25;;;;3426:87;3534:8;;-1:-1:-1;;;;;3534:8:25;3526:31;3522:97;;3573:8;;:35;;-1:-1:-1;;;3573:35:25;;-1:-1:-1;;;;;3573:8:25;;;;:23;;:35;;3597:10;;3573:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3573:35:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3573:35:25;;;;3375:250::o;874:176:30:-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:30;;;;;;;;8524:410:31;-1:-1:-1;;;;;8607:21:31;;8599:67;;;;-1:-1:-1;;;8599:67:31;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:31;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8737:18:31;;:9;:18;;;;;;;;;;:89;8851:12;;:24;;8868:6;8851:24;:16;:24;:::i;:::-;8836:12;:39;8890:37;;8916:1;;-1:-1:-1;;;;;8890:37:31;;;;;;;8920:6;;8890:37;;;;;;;;;;8524:410;;:::o;4000:483:23:-;4075:15;;4061:10;;:29;;4053:38;;;;;;4102:32;;:::i;:::-;4137:17;4155:24;;-1:-1:-1;;4155:28:23;;;4137:47;;;;;;;;;;;;;;;;4102:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4194:14;4226:9;:14;;;4211:12;:10;:12::i;:::-;:29;4194:46;;4340:5;4329:8;4317:9;4292;:22;;;4270:19;;:44;:56;:67;;;;;;:75;;;;;;4251:15;;:94;;;;;;;;;;;4356:17;4379:96;;;;;;;;4395:9;:22;;;4379:96;;;;4419:3;4379:96;;;;4424:15;;4379:96;;;;4441:19;;4379:96;;;;4462:12;:10;:12::i;:::-;4379:96;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;4356:120:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4000:483:23:o;3447:547::-;3524:15;;3510:10;;:29;;3502:38;;;;;;3551:32;;:::i;:::-;3586:17;3604:24;;-1:-1:-1;;3604:28:23;;;3586:47;;;;;;;;;;;;;;;;3551:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3643:14;3675:9;:14;;;3660:12;:10;:12::i;:::-;:29;3643:46;;3789:5;3778:8;3766:9;3741;:22;;;3719:19;;:44;:56;:67;;;;;;:75;;;;;3700:15;:94;;3719:75;;;;3700:94;;;;;3820:14;:12;:14::i;:::-;3813:3;:21;;3805:53;;;;-1:-1:-1;;;3805:53:23;;;;;;;;;3869:17;3892:94;;;;;;;;3908:3;3892:94;;;;3913:9;:20;;;3892:94;;;;3935:15;;3892:94;;;;3952:19;;3892:94;;;;3973:12;:10;:12::i;2462:305:24:-;2570:44;2597:4;2603:2;2607:6;2570:26;:44::i;:::-;2652:4;2638:10;2633:23;2625:61;;;;-1:-1:-1;;;2625:61:24;;;;;;;;;2705:8;:6;:8::i;:::-;2704:9;2696:64;;;;-1:-1:-1;;;2696:64:24;;;;;;;;;2462:305;;;:::o;6452:132:23:-;6498:4;6562:15;;6535;;6522:10;;:28;6554:5;6521:38;:56;;;;;;6514:63;;6452:132;:::o;138:575:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;-1:-1;;;;;24060:54;;25113:35;;25103:2;;25162:1;;25152:12;420:241;;524:2;512:9;503:7;499:23;495:32;492:2;;;-1:-1;;530:12;492:2;592:53;637:7;613:22;592:53;;668:366;;;789:2;777:9;768:7;764:23;760:32;757:2;;;-1:-1;;795:12;757:2;857:53;902:7;878:22;857:53;;;847:63;;965:53;1010:7;947:2;990:9;986:22;965:53;;;955:63;;751:283;;;;;;1041:491;;;;1179:2;1167:9;1158:7;1154:23;1150:32;1147:2;;;-1:-1;;1185:12;1147:2;85:6;72:20;97:33;124:5;97:33;;;1237:63;-1:-1;1337:2;1376:22;;72:20;97:33;72:20;97:33;;;1141:391;;1345:63;;-1:-1;;;1445:2;1484:22;;;;209:20;;1141:391;1539:366;;;1660:2;1648:9;1639:7;1635:23;1631:32;1628:2;;;-1:-1;;1666:12;1628:2;1728:53;1773:7;1749:22;1728:53;;;1718:63;1818:2;1857:22;;;;209:20;;-1:-1;;;1622:283;1912:241;;2016:2;2004:9;1995:7;1991:23;1987:32;1984:2;;;-1:-1;;2022:12;1984:2;-1:-1;209:20;;1978:175;-1:-1;1978:175;2160:263;;2275:2;2263:9;2254:7;2250:23;2246:32;2243:2;;;-1:-1;;2281:12;2243:2;-1:-1;357:13;;2237:186;-1:-1;2237:186;2430:366;;;2551:2;2539:9;2530:7;2526:23;2522:32;2519:2;;;-1:-1;;2557:12;2519:2;-1:-1;;209:20;;;2709:2;2748:22;;;209:20;;-1:-1;2513:283;12725:213;-1:-1;;;;;24060:54;;;;3023:37;;12843:2;12828:18;;12814:124;13181:201;23972:13;;23965:21;3137:34;;13293:2;13278:18;;13264:118;13389:301;;13527:2;;13548:17;13541:47;3328:5;23595:12;23752:6;13527:2;13516:9;13512:18;23740:19;-1:-1;24745:101;24759:6;24756:1;24753:13;24745:101;;;24826:11;;;;;24820:18;24807:11;;;23780:14;24807:11;24800:39;24774:10;;24745:101;;;24861:6;24858:1;24855:13;24852:2;;;-1:-1;23780:14;24917:6;13516:9;24908:16;;24901:27;24852:2;-1:-1;25033:7;25017:14;-1:-1;;25013:28;3486:39;;;;23780:14;3486:39;;13498:192;-1:-1;;;13498:192;13697:407;13888:2;13902:47;;;3762:2;13873:18;;;23740:19;3798:34;23780:14;;;3778:55;-1:-1;;;3853:12;;;3846:38;3903:12;;;13859:245;14111:407;14302:2;14316:47;;;4154:2;14287:18;;;23740:19;4190:34;23780:14;;;4170:55;-1:-1;;;4245:12;;;4238:27;4284:12;;;14273:245;14525:407;14716:2;14730:47;;;4535:2;14701:18;;;23740:19;4571:34;23780:14;;;4551:55;-1:-1;;;4626:12;;;4619:27;4665:12;;;14687:245;14939:407;15130:2;15144:47;;;4916:2;15115:18;;;23740:19;4952:34;23780:14;;;4932:55;-1:-1;;;5007:12;;;5000:26;5045:12;;;15101:245;15353:407;15544:2;15558:47;;;5296:2;15529:18;;;23740:19;5332:34;23780:14;;;5312:55;-1:-1;;;5387:12;;;5380:30;5429:12;;;15515:245;15767:407;15958:2;15972:47;;;5680:2;15943:18;;;23740:19;5716:34;23780:14;;;5696:55;-1:-1;;;5771:12;;;5764:26;5809:12;;;15929:245;16181:407;16372:2;16386:47;;;6060:2;16357:18;;;23740:19;6096:29;23780:14;;;6076:50;6145:12;;;16343:245;16595:407;16786:2;16800:47;;;6396:2;16771:18;;;23740:19;6432:34;23780:14;;;6412:55;-1:-1;;;6487:12;;;6480:26;6525:12;;;16757:245;17009:407;17200:2;17214:47;;;6776:2;17185:18;;;23740:19;6812:34;23780:14;;;6792:55;-1:-1;;;6867:12;;;6860:28;6907:12;;;17171:245;17423:407;17614:2;17628:47;;;7158:2;17599:18;;;23740:19;7194:34;23780:14;;;7174:55;-1:-1;;;7249:12;;;7242:29;7290:12;;;17585:245;17837:407;18028:2;18042:47;;;7541:2;18013:18;;;23740:19;7577:31;23780:14;;;7557:52;7628:12;;;17999:245;18251:407;18442:2;18456:47;;;18427:18;;;23740:19;7915:34;23780:14;;;7895:55;7969:12;;;18413:245;18665:407;18856:2;18870:47;;;8220:2;18841:18;;;23740:19;8256:27;23780:14;;;8236:48;8303:12;;;18827:245;19079:407;19270:2;19284:47;;;8554:2;19255:18;;;23740:19;8590:34;23780:14;;;8570:55;-1:-1;;;8645:12;;;8638:25;8682:12;;;19241:245;19493:407;19684:2;19698:47;;;8933:2;19669:18;;;23740:19;8969:34;23780:14;;;8949:55;-1:-1;;;9024:12;;;9017:29;9065:12;;;19655:245;19907:407;20098:2;20112:47;;;9316:2;20083:18;;;23740:19;9352:30;23780:14;;;9332:51;9402:12;;;20069:245;20321:407;20512:2;20526:47;;;9653:2;20497:18;;;23740:19;9689:34;23780:14;;;9669:55;-1:-1;;;9744:12;;;9737:28;9784:12;;;20483:245;20735:407;20926:2;20940:47;;;10035:2;20911:18;;;23740:19;-1:-1;;;23780:14;;;10051:42;10112:12;;;20897:245;21149:407;21340:2;21354:47;;;10363:2;21325:18;;;23740:19;10399:34;23780:14;;;10379:55;-1:-1;;;10454:12;;;10447:30;10496:12;;;21311:245;21563:407;21754:2;21768:47;;;10747:2;21739:18;;;23740:19;10783:34;23780:14;;;10763:55;-1:-1;;;10838:12;;;10831:36;10886:12;;;21725:245;21977:407;22168:2;22182:47;;;11137:2;22153:18;;;23740:19;11173:34;23780:14;;;11153:55;-1:-1;;;11228:12;;;11221:34;11274:12;;;22139:245;22391:346;;22575:3;22564:9;22560:19;22552:27;;11628:16;11622:23;12449:3;12442:37;11799:4;11792:5;11788:16;11782:23;11799:4;11863:3;11859:14;12442:37;11962:4;11955:5;11951:16;11945:23;11962:4;12026:3;12022:14;12442:37;12124:4;12117:5;12113:16;12107:23;12124:4;12188:3;12184:14;12442:37;12278:4;12271:5;12267:16;12261:23;12278:4;12342:3;12338:14;12442:37;22546:191;;;;;22744:213;12442:37;;;22862:2;22847:18;;22833:124;22964:324;12442:37;;;23274:2;23259:18;;12442:37;23110:2;23095:18;;23081:207;23295:205;24276:4;24265:16;;;;12678:35;;23409:2;23394:18;;23380:120;25054:117;-1:-1;;;;;24060:54;;25113:35;;25103:2;;25162:1;;25152:12;25097:74;2238:7:30;2479:6;2475:45;;-1:-1:-1;2508:1:30;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:30;;575:2:-1;2557:56:30;;;589:47:-1;230:2;560:18;;;902:19;266:34;942:14;;;246:55;-1:-1;;;321:12;;;314:25;358:12;;2557:56:30;546:245:-1",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.2;\npragma experimental ABIEncoderV2;\n\n\nimport \"./Token/CitadelTokenLocker.sol\";\n\n\ncontract Citadel is CitadelTokenLocker {\n\n    constructor (\n        uint initialSupply\n    )\n    public {\n        // mint inflation\n        uint inflation = uint(500000000).mul(1e6);\n        _mint(address(1), inflation);\n\n        _initInflation(inflation, inflation, 800, 40);\n\n        _initCitadelTokenLocker(address(2));\n\n        _mint(address(this), uint(500000000).mul(1e6));\n\n        assert(totalSupply() == initialSupply.mul(1e6));\n\n    }\n\n    function delegateTokens (address to, uint amount) external onlyOwner {\n        _transfer(address(this), to, amount);\n    }\n\n}\n",
  "sourcePath": "/home/pirat/Desktop/DAO/contracts/Citadel.sol",
  "ast": {
    "absolutePath": "/home/pirat/Desktop/DAO/contracts/Citadel.sol",
    "exportedSymbols": {
      "Citadel": [
        87
      ]
    },
    "id": 88,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:0"
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO/contracts/Token/CitadelTokenLocker.sol",
        "file": "./Token/CitadelTokenLocker.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 88,
        "sourceUnit": 9696,
        "src": "95:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "CitadelTokenLocker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9695,
              "src": "158:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CitadelTokenLocker_$9695",
                "typeString": "contract CitadelTokenLocker"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "158:18:0"
          }
        ],
        "contractDependencies": [
          8965,
          9267,
          9695,
          9718,
          10091,
          10861,
          10930,
          11578
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 87,
        "linearizedBaseContracts": [
          87,
          9695,
          8965,
          9267,
          11578,
          10091,
          10861,
          10930,
          9718
        ],
        "name": "Citadel",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "242:340:0",
              "statements": [
                {
                  "assignments": [
                    11
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11,
                      "name": "inflation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 66,
                      "src": "278:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "278:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "316536",
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "315:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "353030303030303030",
                            "id": 14,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "300:9:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            },
                            "value": "500000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            }
                          ],
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "295:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 12,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "295:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "295:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10290,
                      "src": "295:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "278:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 23,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "343:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "335:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "335:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "335:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "347:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10741,
                      "src": "329:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "329:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "329:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "383:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 30,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "394:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "383030",
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "405:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3430",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "410:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        }
                      ],
                      "id": 28,
                      "name": "_initInflation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8949,
                      "src": "368:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "368:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 38,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "456:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "448:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 36,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "448:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "448:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 35,
                      "name": "_initCitadelTokenLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9684,
                      "src": "424:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "424:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "484:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Citadel_$87",
                              "typeString": "contract Citadel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Citadel_$87",
                              "typeString": "contract Citadel"
                            }
                          ],
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "476:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "476:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "476:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "316536",
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "511:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "353030303030303030",
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "496:9:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                },
                                "value": "500000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                }
                              ],
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "491:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 47,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "491:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "491:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10290,
                          "src": "491:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10741,
                      "src": "470:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "470:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 57,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10460,
                            "src": "534:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "534:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "316536",
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "569:3:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "551:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10290,
                            "src": "551:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "551:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "534:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "527:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "527:47:0"
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 67,
                  "src": "206:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "196:34:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "242:0:0"
            },
            "scope": 87,
            "src": "184:398:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "657:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "685:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Citadel_$87",
                              "typeString": "contract Citadel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Citadel_$87",
                              "typeString": "contract Citadel"
                            }
                          ],
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "677:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "677:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "692:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "696:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10687,
                      "src": "667:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "667:36:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c2ad5b74",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 74,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10042,
                  "src": "647:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:9:0"
              }
            ],
            "name": "delegateTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 86,
                  "src": "613:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 86,
                  "src": "625:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:25:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:0:0"
            },
            "scope": 87,
            "src": "588:122:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 88,
        "src": "138:575:0"
      }
    ],
    "src": "36:678:0"
  },
  "legacyAST": {
    "absolutePath": "/home/pirat/Desktop/DAO/contracts/Citadel.sol",
    "exportedSymbols": {
      "Citadel": [
        87
      ]
    },
    "id": 88,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:0"
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO/contracts/Token/CitadelTokenLocker.sol",
        "file": "./Token/CitadelTokenLocker.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 88,
        "sourceUnit": 9696,
        "src": "95:40:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "CitadelTokenLocker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9695,
              "src": "158:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CitadelTokenLocker_$9695",
                "typeString": "contract CitadelTokenLocker"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "158:18:0"
          }
        ],
        "contractDependencies": [
          8965,
          9267,
          9695,
          9718,
          10091,
          10861,
          10930,
          11578
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 87,
        "linearizedBaseContracts": [
          87,
          9695,
          8965,
          9267,
          11578,
          10091,
          10861,
          10930,
          9718
        ],
        "name": "Citadel",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "242:340:0",
              "statements": [
                {
                  "assignments": [
                    11
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11,
                      "name": "inflation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 66,
                      "src": "278:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "278:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 19,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "316536",
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "315:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "353030303030303030",
                            "id": 14,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "300:9:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            },
                            "value": "500000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            }
                          ],
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "295:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 12,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "295:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "295:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10290,
                      "src": "295:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "278:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 23,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "343:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "335:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "335:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "335:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "347:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10741,
                      "src": "329:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "329:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "329:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "383:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 30,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "394:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "383030",
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "405:3:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3430",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "410:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        }
                      ],
                      "id": 28,
                      "name": "_initInflation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8949,
                      "src": "368:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "368:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 38,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "456:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "448:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 36,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "448:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "448:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 35,
                      "name": "_initCitadelTokenLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9684,
                      "src": "424:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "424:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "484:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Citadel_$87",
                              "typeString": "contract Citadel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Citadel_$87",
                              "typeString": "contract Citadel"
                            }
                          ],
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "476:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "476:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "476:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "316536",
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "511:3:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "353030303030303030",
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "496:9:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                },
                                "value": "500000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                }
                              ],
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "491:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 47,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "491:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "491:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10290,
                          "src": "491:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10741,
                      "src": "470:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "470:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 57,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10460,
                            "src": "534:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "534:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "316536",
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "569:3:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "551:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10290,
                            "src": "551:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "551:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "534:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 56,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "527:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "527:47:0"
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 67,
                  "src": "206:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "196:34:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "242:0:0"
            },
            "scope": 87,
            "src": "184:398:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "657:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 79,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "685:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Citadel_$87",
                              "typeString": "contract Citadel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Citadel_$87",
                              "typeString": "contract Citadel"
                            }
                          ],
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "677:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "677:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "692:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "696:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 76,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10687,
                      "src": "667:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "667:36:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c2ad5b74",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 74,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10042,
                  "src": "647:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "647:9:0"
              }
            ],
            "name": "delegateTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 86,
                  "src": "613:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 86,
                  "src": "625:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:25:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:0:0"
            },
            "scope": 87,
            "src": "588:122:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 88,
        "src": "138:575:0"
      }
    ],
    "src": "36:678:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2021-06-17T16:12:26.996Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}