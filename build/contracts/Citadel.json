{
  "contractName": "Citadel",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "ChangeInflation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "ChangeVesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "InflationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "NewDaoTransport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "NewVestingTransport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "SetInflationStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "countInflationPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "delegateToDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDaoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInflationStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSavedInflationYear",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "inflationPoint",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "inflationPct",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakingPct",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "yearlySupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "internalType": "struct CitadelInflation.InflationValues",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "daoAddress",
          "type": "address"
        }
      ],
      "name": "initDaoTransport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vestAddress",
          "type": "address"
        }
      ],
      "name": "initVestingTransport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "lockHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "lockHistoryCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "lockedBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedCoins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemFromDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startInflation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "startInflationTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplyHistoryCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "updateInflation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateSnapshot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "issueId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pct",
          "type": "uint256"
        }
      ],
      "name": "updateVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "delegateTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"ChangeInflation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"ChangeVesting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InflationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"NewDaoTransport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"NewVestingTransport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"SetInflationStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countInflationPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegateToDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegateTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDaoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInflationStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSavedInflationYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"inflationPoint\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"inflationPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingPct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yearlySupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"internalType\":\"struct CitadelInflation.InflationValues\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"}],\"name\":\"initDaoTransport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vestAddress\",\"type\":\"address\"}],\"name\":\"initVestingTransport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"lockHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lockHistoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedCoins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemFromDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startInflation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"startInflationTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"totalSupplyHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyHistoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"updateInflation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"issueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pct\",\"type\":\"uint256\"}],\"name\":\"updateVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/pirat/Desktop/DAO_update/DAO/contracts/Citadel.sol\":\"Citadel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/pirat/Desktop/DAO_update/DAO/contracts/Citadel.sol\":{\"keccak256\":\"0x76e47a4cb9f84675e1f1a48e6b3a6aa49282021bd7f3170aa4af4415c0520af8\",\"urls\":[\"bzz-raw://b86514f5b8e709ff26f96c82eec6ee99edf1dd7c20875d282cd9ad9c23d8995a\",\"dweb:/ipfs/QmXZgXnBHq7XbVsaX1tx9h1TNQnuPoJNwp12gjN1A3pF44\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/ICitadelDao.sol\":{\"keccak256\":\"0xd8f6039ac8a8dabc55cc471f625437fa0e6db978109930f18b783908330a0b3f\",\"urls\":[\"bzz-raw://4ce5e24674abe3be12c26a0fe9b7e031a49cb804054b5d0fca3e8e3887d15c10\",\"dweb:/ipfs/QmXR95inmjb2NGBK2PhYVNm13WPzTqMAdiRskKs5yS5Zu6\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/ICitadelVesting.sol\":{\"keccak256\":\"0xf23a41f64c9d84de4fc942597ed0c8f3f97b2a3d68123f234d46e13a73fdc83e\",\"urls\":[\"bzz-raw://850705dfe2486d8aecbf6b35c716c36f8d0b341992508724594316b1455769fa\",\"dweb:/ipfs/Qmcr7uVSsU8ahERGYvRA3pjbEbyopVJUoTkfjncpZSNENb\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/Token/CitadelInflation.sol\":{\"keccak256\":\"0x507f821ec10e314428bb43f07edbfd9cc2801878ccc8d8de22cf746c12ebdd9f\",\"urls\":[\"bzz-raw://873b9307c8cfc92fb47d78c7d019f88ef1e501ccb227a8e01de9cae13a2cd124\",\"dweb:/ipfs/QmdHsLK6oaNAoX8v3opb1X9myTDE9GV4iprynQ5Unu23Ai\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/Token/CitadelToken.sol\":{\"keccak256\":\"0xedccc029b43ec00af4a3a4b1484b6c4346fe2e67e3f3953121724c76e9fc3e7a\",\"urls\":[\"bzz-raw://4e06883fcab550df07c5bff128cda06b4e8de6f5654044f441817d47263337e7\",\"dweb:/ipfs/Qmez9Z2RiPXwZrAvAAn1stsC83BPHhWQ9FsTERU67iYCHY\"]},\"/home/pirat/Desktop/DAO_update/DAO/contracts/Token/CitadelTokenLocker.sol\":{\"keccak256\":\"0x6bd4af45add7bfbb94f2706cd92548a9bc8b5a739959695c643af9dc26bf2987\",\"urls\":[\"bzz-raw://3c94a7d64ec4737c65270f139714c8998124f1437e05cd4c81dff5468b236b4a\",\"dweb:/ipfs/QmYR1MhatDqQfwxNSDke9SinSY48FwRdgZWZrkmKBKF3SA\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"/home/pirat/Desktop/DAO_update/DAO/node_modules/openzeppelin-solidity/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061028a5760003560e01c806369668fe91161015c578063bf17282a116100ce578063f1474bd811610087578063f1474bd814610526578063f2fde38b14610546578063f3fef3a314610559578063f905c15a1461056c578063f9b7ce0214610574578063ff1764a41461057c5761028a565b8063bf17282a146104bf578063c108a402146104d2578063c2ad5b74146104e5578063c686781d146104f8578063ca5c7b911461050b578063dd62ed3e146105135761028a565b80638da5cb5b116101205780638da5cb5b1461046357806395d89b411461046b578063a457c2d714610473578063a694fc3a14610486578063a9059cbb14610499578063ac3cd7c6146104ac5761028a565b806369668fe91461041a57806370a0823114610422578063715018a6146104355780637fa7faf81461043d57806389bb6081146104505761028a565b806344263fcb116102005780634f91440d116101b95780634f91440d146103d457806355b28b37146103dc57806359355736146103e45780635c975abb146103f75780636641d9a0146103ff57806369240426146104125761028a565b806344263fcb1461037557806344c40464146103885780634ab68e141461039b5780634b45aa12146103a35780634c0f38c2146103ab5780634cf54195146103b35761028a565b806323b872dd1161025257806323b872dd146102ff5780632e17de7814610312578063313ce56714610327578063395093511461033c5780633ba71a151461034f57806342966c68146103625761028a565b806306fdde031461028f578063095ea7b3146102ad57806318160ddd146102cd5780631d0a67e1146102e25780631d68702d146102ea575b600080fd5b610297610584565b6040516102a49190612239565b60405180910390f35b6102c06102bb36600461219f565b61061a565b6040516102a4919061222e565b6102d5610638565b6040516102a49190612842565b6102d561063e565b6102f2610644565b6040516102a4919061221a565b6102c061030d36600461215f565b610653565b6103256103203660046121c9565b6106e0565b005b61032f61083a565b6040516102a49190612859565b6102c061034a36600461219f565b610843565b61032561035d36600461219f565b610897565b6103256103703660046121c9565b6108be565b610325610383366004612110565b610911565b61032561039636600461219f565b6109a1565b6102d56109c4565b6102d56109ca565b6102d56109d0565b6103c66103c136600461219f565b6109d6565b6040516102a492919061284b565b610325610a92565b6102d5610bc9565b6102d56103f2366004612110565b610bcf565b6102c0610bea565b6103c661040d3660046121c9565b610bfa565b610325610c67565b6102d5610c9d565b6102d5610430366004612110565b610ca3565b610325610cbe565b61032561044b366004612110565b610d48565b6102d561045e366004612110565b610dcd565b6102f2610de8565b610297610dfc565b6102c061048136600461219f565b610e5d565b6103256104943660046121c9565b610ecb565b6102c06104a736600461219f565b610f27565b6103256104ba3660046121f9565b610f3b565b6102d56104cd366004612110565b61106b565b6103256104e03660046121f9565b61107d565b6103256104f336600461219f565b6111a0565b6103256105063660046121c9565b6111e5565b6102d56112d8565b6102d561052136600461212b565b6112e7565b6105396105343660046121c9565b611312565b6040516102a49190612808565b610325610554366004612110565b61139a565b61032561056736600461219f565b611461565b6102d56114a1565b6103256114a7565b6102f2611570565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b5050505050905090565b600061062e61062761157f565b8484611583565b5060015b92915050565b60025490565b600d5490565b6008546001600160a01b031690565b6000610660848484611637565b6106d68461066c61157f565b6106d185604051806060016040528060288152602001612939602891396001600160a01b038a166000908152600160205260408120906106aa61157f565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61175816565b611583565b5060019392505050565b60006009541180156106fb57506106f5611784565b60095411155b6107205760405162461bcd60e51b81526004016107179061255b565b60405180910390fd5b3360009081526010602052604090205481111561073c57600080fd5b610744611788565b6011546107609061010090046001600160a01b03163383611637565b33600090815260106020526040902054610780908263ffffffff611b1116565b3360009081526010602052604090819020919091558051808201909152601290806107a9611b5a565b81526020016107b6611784565b905281546001818101845560009384526020808520845160029094020192835592830151910155338252601381526040808320815180830183526010845291909320548152908101610806611784565b9052815460018181018455600093845260209384902083516002909302019182559290910151910155610837611b77565b50565b60055460ff1690565b600061062e61085061157f565b846106d1856001600061086161157f565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff611c6016565b6008546001600160a01b031633146108ae57600080fd5b6108ba600a8383611637565b5050565b6103e833116108df5760405162461bcd60e51b8152600401610717906125c7565b806108e933610ca3565b10156109075760405162461bcd60e51b81526004016107179061238f565b6108373382611c85565b61091961157f565b60055461010090046001600160a01b0390811691161461094b5760405162461bcd60e51b815260040161071790612592565b600880546001600160a01b0319166001600160a01b0383161790556040517f9e006baa245780a8a3d4098c11dd27a97c8d0c2e25b998fa057c6ab8eb0791919061099690839061221a565b60405180910390a150565b6008546001600160a01b031633146109b857600080fd5b6108ba82600a83611637565b60125490565b600f5490565b600b5490565b6001600160a01b03821660009081526013602052604081205481908310610a0f5760405162461bcd60e51b8152600401610717906124d2565b6001600160a01b0384166000908152601360205260409020805484908110610a3357fe5b906000526020600020906002020160000154915060136000856001600160a01b03166001600160a01b031681526020019081526020016000208381548110610a7757fe5b90600052602060002090600202016001015490509250929050565b6000600954118015610aad5750610aa7611784565b60095411155b610ac95760405162461bcd60e51b81526004016107179061255b565b6007546001600160a01b0316610af15760405162461bcd60e51b81526004016107179061228c565b60075460405163ddeae03360e01b81526000916001600160a01b03169063ddeae03390610b2290339060040161221a565b602060405180830381600087803b158015610b3c57600080fd5b505af1158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b7491908101906121e1565b905060008111610b8357600080fd5b610b8b611788565b601154610ba99060019061010090046001600160a01b031683611637565b33600090815260106020526040902054610780908263ffffffff611c6016565b60095490565b6001600160a01b031660009081526010602052604090205490565b600554600160a81b900460ff1690565b60125460009081908310610c205760405162461bcd60e51b8152600401610717906124d2565b60128381548110610c2d57fe5b906000526020600020906002020160000154915060128381548110610c4e57fe5b9060005260206000209060020201600101549050915091565b6007546001600160a01b0316331480610c8a57506008546001600160a01b031633145b610c9357600080fd5b610c9b611788565b565b60065481565b6001600160a01b031660009081526020819052604090205490565b610cc661157f565b60055461010090046001600160a01b03908116911614610cf85760405162461bcd60e51b815260040161071790612592565b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b610d5061157f565b60055461010090046001600160a01b03908116911614610d825760405162461bcd60e51b815260040161071790612592565b600780546001600160a01b0319166001600160a01b0383161790556040517f68e937a920bca55a7c599d782170d8606e7d5fe31c1c9cdc4c1fd7c74ca1de1c9061099690839061221a565b6001600160a01b031660009081526013602052604090205490565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106105780601f106105e557610100808354040283529160200191610610565b600061062e610e6a61157f565b846106d1856040518060600160405280602581526020016129616025913960016000610e9461157f565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61175816565b6000600954118015610ee65750610ee0611784565b60095411155b610f025760405162461bcd60e51b81526004016107179061255b565b610f0a611788565b601154610ba990339061010090046001600160a01b031683611637565b600061062e610f3461157f565b8484611637565b6008546001600160a01b03163314610f5257600080fd5b600a8110158015610f645750605a8111155b610f805760405162461bcd60e51b81526004016107179061272c565b610f886120ca565b600f80546000198101908110610f9a57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151610ff6611784565b03905062278d0081101561101c5760405162461bcd60e51b815260040161071790612772565b611024611788565b61102d83611d73565b837f96a647810411309169e354743b6a4e9d05e3c777f5fae278e65f6168fe7279ba8460405161105d9190612842565b60405180910390a250505050565b60106020526000908152604090205481565b6008546001600160a01b0316331461109457600080fd5b60c881101580156110a75750610bb88111155b6110c35760405162461bcd60e51b815260040161071790612516565b6110cb6120ca565b600f805460001981019081106110dd57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611139611784565b03905062278d0081101561115f5760405162461bcd60e51b815260040161071790612772565b611167611788565b61117083611f1c565b837f8f4db2ceeda2c579bf7d6f7036f9f300565d76719308713e3c85d3484b4ebb308460405161105d9190612842565b6111a861157f565b60055461010090046001600160a01b039081169116146111da5760405162461bcd60e51b815260040161071790612592565b6108ba308383611637565b6111ed61157f565b60055461010090046001600160a01b0390811691161461121f5760405162461bcd60e51b815260040161071790612592565b60095415806112365750611231611784565b600954115b6112525760405162461bcd60e51b815260040161071790612684565b61125a611784565b81116112785760405162461bcd60e51b81526004016107179061231d565b6009819055600d819055600f805482919060009061129257fe5b9060005260206000209060050201600401819055507f9fc22fadaf2a60d0fc0b55f067aab3d342cd367b0ab3ffb49d3a4f8420768a3c6009546040516109969190612842565b60006112e2611b5a565b905090565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61131a6120ca565b600f54821061133b5760405162461bcd60e51b815260040161071790612490565b600f828154811061134857fe5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6113a261157f565b60055461010090046001600160a01b039081169116146113d45760405162461bcd60e51b815260040161071790612592565b6001600160a01b0381166113fa5760405162461bcd60e51b8152600401610717906123d1565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6007546001600160a01b031633148061148457506008546001600160a01b031633145b61148d57600080fd5b611495611788565b6108ba60018383611637565b60065490565b6114af61157f565b60055461010090046001600160a01b039081169116146114e15760405162461bcd60e51b815260040161071790612592565b600954156115015760405162461bcd60e51b815260040161071790612684565b611509611784565b6009819055600d819055600f805460009061152057fe5b9060005260206000209060050201600401819055507f9fc22fadaf2a60d0fc0b55f067aab3d342cd367b0ab3ffb49d3a4f8420768a3c6009546040516115669190612842565b60405180910390a1565b6007546001600160a01b031690565b3390565b6001600160a01b0383166115a95760405162461bcd60e51b8152600401610717906126bb565b6001600160a01b0382166115cf5760405162461bcd60e51b815260040161071790612417565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061162a908590612842565b60405180910390a3505050565b6001600160a01b03831661165d5760405162461bcd60e51b81526004016107179061263f565b6001600160a01b0382166116835760405162461bcd60e51b8152600401610717906122da565b61168e838383612057565b6116d181604051806060016040528060268152602001612913602691396001600160a01b038616600090815260208190526040902054919063ffffffff61175816565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611706908263ffffffff611c6016565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061162a908590612842565b6000818484111561177c5760405162461bcd60e51b81526004016107179190612239565b505050900390565b4290565b600c54600b541161179857610c9b565b6000600d546117a5611784565b0390506301e133808110156117ba5750610c9b565b6117c26120ca565b600f805460001981019081106117d457fe5b600091825260208083206040805160a0810182526005909402909101805480855260018201549385019390935260028101549184019190915260038101546060840152600401546080830152909250905b6301e133808404811015611b05576301e13380600d6000828254019250508190555060006127106301e133808560800151600d540385600e5402028161186757fe5b048161186f57fe5b049050600d54846080018181525050600b54600c548201101580611893575060c883105b1561196757600b54600c81905550600f6040518060a001604052806118b66120ad565b815260208781015181830152600c546040808401829052606080850192909252600d54608094850152855460018181018855600097885296849020865160059092020190815592850151958301959095558385015160028301558301516003820155910151600490910155600f5490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491611959916000199190910190612842565b60405180910390a150611b05565b600c80548201905560c88311156119915760328303925060c883101561198c5760c892505b6119b5565b8260c814156119b55760006119a46120ad565b905060c88110156119b3578093505b505b6040805160a081018252848152602086810151908201908152600c5482840181815260608401918252600d5460808501908152600f8054600181018255600082905295517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80260059097029687015593517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80386015590517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80485015590517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac805840155517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac806909201919091555490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491611af4916000199190910190612842565b60405180910390a150600101611825565b5050600c54600e555050565b6000611b5383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611758565b9392505050565b6011546000906112e29061010090046001600160a01b0316610ca3565b6008546001600160a01b031615611beb5760085460405163070c88f360e41b81526001600160a01b03909116906370c88f3090611bb890339060040161221a565b600060405180830381600087803b158015611bd257600080fd5b505af1158015611be6573d6000803e3d6000fd5b505050505b6007546001600160a01b031615610c9b576007546040516303d9eba760e41b81526001600160a01b0390911690633d9eba7090611c2c90339060040161221a565b600060405180830381600087803b158015611c4657600080fd5b505af1158015611c5a573d6000803e3d6000fd5b50505050565b600082820183811015611b535760405162461bcd60e51b815260040161071790612459565b6001600160a01b038216611cab5760405162461bcd60e51b8152600401610717906125fe565b611cb782600083612057565b611cfa816040518060600160405280602281526020016128f1602291396001600160a01b038516600090815260208190526040902054919063ffffffff61175816565b6001600160a01b038316600090815260208190526040902055600254611d26908263ffffffff611b1116565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611d67908590612842565b60405180910390a35050565b600c54600b541415611d8457600080fd5b611d8c6120ca565b600f80546000198101908110611d9e57fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611dfa611784565b0390506127106301e13380828460000151600e54020281611e1757fe5b0481611e1f57fe5b04600c60008282540192505081905550600b54600c5410611e525760405162461bcd60e51b815260040161071790612360565b600f6040518060a0016040528084600001518152602001858152602001600c548152602001600e548152602001611e87611784565b9052815460018181018455600093845260209384902083516005909302019182559282015192810192909255604080820151600284015560608201516003840155608090910151600490920191909155600f5490517fedc524a2d3f6ca20c1a24894433e36a31d7a2e9c37b78d9ab1c758bf83072d0491611f0f916000199190910190612842565b60405180910390a1505050565b600c54600b541415611f2d57600080fd5b611f356120ca565b600f80546000198101908110611f4757fe5b90600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905060008160800151611fa3611784565b0390506127106301e13380828460000151600e54020281611fc057fe5b0481611fc857fe5b04600c60008282540192505081905550600b54600c5410611ffb5760405162461bcd60e51b815260040161071790612360565b6120036120ad565b8311156120225760405162461bcd60e51b8152600401610717906126ff565b600f6040518060a0016040528085815260200184602001518152602001600c548152602001600e548152602001611e87611784565b6120628383836120a8565b6103e833116120835760405162461bcd60e51b8152600401610717906125c7565b61208b610bea565b156120a85760405162461bcd60e51b8152600401610717906127be565b505050565b6000600c54600c54600b540361271002816120c457fe5b04905090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461063257600080fd5b600060208284031215612121578081fd5b611b5383836120f9565b6000806040838503121561213d578081fd5b61214784846120f9565b915061215684602085016120f9565b90509250929050565b600080600060608486031215612173578081fd5b833561217e81612867565b9250602084013561218e81612867565b929592945050506040919091013590565b600080604083850312156121b1578182fd5b6121bb84846120f9565b946020939093013593505050565b6000602082840312156121da578081fd5b5035919050565b6000602082840312156121f2578081fd5b5051919050565b6000806040838503121561220b578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561226557858101830151858201604001528201612249565b818111156122765783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f4369746164656c546f6b656e4c6f636b65723a2076657374696e6720636f6e7460408201526d1c9858dd081d5b9919599a5b995960921b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526023908201527f5374617274696e672064617465206d75737420626520696e207468652066757460408201526275726560e81b606082015260800190565b60208082526015908201527413585e081cdd5c1c1b1e481a5cc81c995858da1959605a1b604082015260600190565b60208082526022908201527f4369746164656c546f6b656e3a20696e73756666696369656e742062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526022908201527f4369746164656c496e666c6174696f6e3a20756e657870656374656420696e646040820152610caf60f31b606082015260800190565b60208082526024908201527f4369746164656c546f6b656e4c6f636b65723a20756e657870656374656420696040820152630dcc8caf60e31b606082015260800190565b60208082526025908201527f50657263656e74616765206d757374206265206265747765656e20322520616e604082015264642033302560d81b606082015260800190565b6020808252601d908201527f4369746164656c496e666c6174696f6e3a20636f6d696e6720736f6f6e000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526019908201527f4369746164656c546f6b656e3a2066616b652073656e64657200000000000000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252601c908201527f496e666c6174696f6e20697320616c7265616479207374617274656400000000604082015260600190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b602080825260139082015272546f6f20686967682070657263656e7461676560681b604082015260600190565b60208082526026908201527f50657263656e74616765206d757374206265206265747765656e2031302520616040820152656e642039302560d01b606082015260800190565b6020808252602c908201527f596f75206861766520746f20776169742033302064617973206166746572206c60408201526b617374206368616e67696e6760a01b606082015260800190565b6020808252602a908201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686040820152691a5b19481c185d5cd95960b21b606082015260800190565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6001600160a01b038116811461083757600080fd5b60008261288b57506000610632565b8282028284828161289857fe5b0414611b535760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161071756fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205c2567bf31fb5bf7ebadf050e6530a63e702d6509330b48e425741f4695cf10864736f6c63430006020033",
  "sourceMap": "138:484:24:-:0;;;184:307;8:9:-1;5:2;;;30:1;27;20:12;5:2;184:307:24;2013:141:54;;;;;;;;;;;;;-1:-1:-1;;;2013:141:54;;;;;;;;;;;;;;;;-1:-1:-1;;;2013:141:54;;;2093:4;2085:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2107:16:54;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:54;:14;;-1:-1:-1;;2133:14:54;2145:2;2133:14;;;-1:-1:-1;2133:9:54;885:12:51;-1:-1:-1;;;;;885:10:51;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:51;;-1:-1:-1;;;;;907:18:51;;;;;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:51;-1:-1:-1;;940:43:51;;-1:-1:-1;;940:43:51;-1:-1:-1;923:7:58;:15;;-1:-1:-1;;;;923:15:58;;;1123::47;1110:10;:28;;;1149:17;;-1:-1:-1;;;;;1149:14:47;:17;:::i;:::-;246:14:24;263:24;283:3;268:9;263:19;;;;;;:24;;;;:::i;:::-;246:41;-1:-1:-1;297:28:24;311:1;246:41;-1:-1:-1;;;;;297:5:24;:28;:::i;:::-;336:45;351:9;;373:3;378:2;-1:-1:-1;;;;;336:14:24;:45;:::i;:::-;392:35;424:1;-1:-1:-1;;;;;392:23:24;:35;:::i;:::-;438:46;452:4;459:24;479:3;464:9;459:19;;;;;;:24;;;;:::i;:::-;-1:-1:-1;;;;;438:5:24;:46;:::i;:::-;184:307;138:484;;590:104:49;677:10;590:104;;:::o;10020:88:54:-;10080:9;:21;;-1:-1:-1;;10080:21:54;;;;;;;;;;;;10020:88::o;2180:459:53:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:53;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:53;;;;;;;;;;;;;;;;;2631:1;-1:-1:-1;2180:459:53;;;;;:::o;7835:370:54:-;-1:-1:-1;;;;;7918:21:54;;7910:65;;;;-1:-1:-1;;;7910:65:54;;;;;;;;;7986:49;8015:1;8019:7;8028:6;-1:-1:-1;;;;;7986:20:54;:49;:::i;:::-;8061:24;8078:6;8061:12;;:16;;;;;;:24;;;;:::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:54;;:9;:18;;;;;;;;;;;;:30;;8139:6;;8116:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8095:18:54;;:9;:18;;;;;;;;;;;:51;;;;8161:37;;8095:18;;:9;8161:37;;;;8191:6;;8161:37;;;;;;;;;;7835:370;;:::o;6695:526:46:-;6855:14;;;;6854:15;6846:24;;;;;;6881:14;:21;;-1:-1:-1;;6881:21:46;6898:4;6881:21;;;6926:22;;;6913:10;:35;6958:15;:26;;;6994:19;:30;;;7058:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7035:17;;7058:93;;;7138:12;-1:-1:-1;;;;;7138:10:46;:12;:::i;:::-;7058:93;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;7035:117:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7184:17;:24;7167:46;;;;;;-1:-1:-1;;7184:28:46;;;;;7167:46;;;;;;;;;;6695:526;;;;:::o;3631:182:48:-;3717:14;;;;3716:15;3708:24;;;;;;3743:14;:21;;-1:-1:-1;;;;;3774:31:48;;;3743:21;3774:31;-1:-1:-1;;;;;;;;3743:21:48;;;3760:4;3743:21;3774:31;;;;;;;;;;3631:182::o;2343:305:47:-;2451:44;2478:4;2484:2;2488:6;2451:26;;;;;:44;;:::i;:::-;2533:4;2519:10;2514:23;2506:61;;;;-1:-1:-1;;;2506:61:47;;;;;;;;;2586:8;-1:-1:-1;;;;;2586:6:47;:8;:::i;:::-;2585:9;2577:64;;;;-1:-1:-1;;;2577:64:47;;;;;;;;;2343:305;;;:::o;874:176:53:-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:53;;;;;;;;2654:98:47;2730:15;2654:98;:::o;1040:76:58:-;1102:7;;-1:-1:-1;;;1102:7:58;;;;;1040:76::o;138:484:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;138:484:24;;;-1:-1:-1;138:484:24;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;1902:407:-1;2093:2;2107:47;;;230:2;2078:18;;;4296:19;266:29;4336:14;;;246:50;315:12;;;2064:245;2316:407;2507:2;2521:47;;;566:2;2492:18;;;4296:19;602:34;4336:14;;;582:55;-1:-1;;;657:12;;;650:25;694:12;;;2478:245;2730:407;2921:2;2935:47;;;945:2;2906:18;;;4296:19;981:27;4336:14;;;961:48;1028:12;;;2892:245;3144:407;3335:2;3349:47;;;1279:2;3320:18;;;4296:19;1315:33;4336:14;;;1295:54;1368:12;;;3306:245;3558:407;3749:2;3763:47;;;1619:2;3734:18;;;4296:19;1655:34;4336:14;;;1635:55;-1:-1;;;1710:12;;;1703:34;1756:12;;;3720:245;3972:213;1853:37;;;4090:2;4075:18;;4061:124;;138:484:24;;;;;;",
  "deployedSourceMap": "138:484:24:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;138:484:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81:54;;;:::i;:::-;;;;;;;;;;;;;;;;4255:166;;;;;;;;;:::i;:::-;;;;;;;;3262:98;;;:::i;:::-;;;;;;;;1070:109:46;;;:::i;1959:94:47:-;;;:::i;:::-;;;;;;;;4881:317:54;;;;;;;;;:::i;2156:535:48:-;;;;;;;;;:::i;:::-;;3121:81:54;;;:::i;:::-;;;;;;;;5593:215;;;;;;;;;:::i;2203:134:47:-;;;;;;;;;:::i;1269:237::-;;;;;;;;;:::i;1799:154::-;;;;;;;;;:::i;2059:138::-;;;;;;;;;:::i;720:124:48:-;;;:::i;1512:113:46:-;;;:::i;1185:91::-;;;:::i;1320:336:48:-;;;;;;;;;:::i;:::-;;;;;;;;;2697:672;;;:::i;956:108:46:-;;;:::i;496:115:48:-;;;;;;;;;:::i;1040:76:58:-;;;:::i;850:329:48:-;;;;;;;;;:::i;2587:102:46:-;;;:::i;480:22:47:-;;;:::i;3418:117:54:-;;;;;;;;;:::i;1689:145:51:-;;;:::i;1512:173:47:-;;;;;;;;;:::i;1185:129:48:-;;;;;;;;;:::i;1066:77:51:-;;;:::i;2413:85:54:-;;;:::i;6295:266::-;;;;;;;;;:::i;1662:488:48:-;;;;;;;;;:::i;3738:172:54:-;;;;;;;;;:::i;3221:512:46:-;;;;;;;;;:::i;254:44:48:-;;;;;;;;;:::i;2695:520:46:-;;;;;;;;;:::i;497:122:24:-;;;;;;;;;:::i;1966:447:46:-;;;;;;;;;:::i;617:97:48:-;;;:::i;3968:149:54:-;;;;;;;;;:::i;1282:224:46:-;;;;;;;;;:::i;:::-;;;;;;;;1983:240:51;;;;;;;;;:::i;2419:162:46:-;;;;;;;;;:::i;1180:83:47:-;;;:::i;1631:329:46:-;;;:::i;1691:102:47:-;;;:::i;2219:81:54:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:54;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;1070:109:46:-;1153:19;;1070:109;:::o;1959:94:47:-;2041:4;;-1:-1:-1;;;;;2041:4:47;1959:94;:::o;4881:317:54:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:54;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:54;;;;;;;;;;;;-1:-1:-1;5080:33:54;;;:89;;:37;:89;:::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:54;4881:317;;;;;:::o;2156:535:48:-;859:1:46;838:18;;:22;:60;;;;;886:12;:10;:12::i;:::-;864:18;;:34;;838:60;830:102;;;;-1:-1:-1;;;830:102:46;;;;;;;;;;;;;;;;;2242:10:48::1;2230:23;::::0;;;:11:::1;:23;::::0;;;;;:33;-1:-1:-1;2230:33:48::1;2222:42;;;::::0;::::1;;2275:24;:22;:24::i;:::-;2320:14;::::0;2310:45:::1;::::0;2320:14:::1;::::0;::::1;-1:-1:-1::0;;;;;2320:14:48::1;2336:10;2348:6:::0;2310:9:::1;:45::i;:::-;2403:10;2391:23;::::0;;;:11:::1;:23;::::0;;;;;:35:::1;::::0;2419:6;2391:35:::1;:27;:35;:::i;:::-;2377:10;2365:23;::::0;;;:11:::1;:23;::::0;;;;;;:61;;;;2498:47;;;;::::1;::::0;;;2467:25:::1;::::0;2498:47;2510:20:::1;:18;:20::i;:::-;2498:47;;;;2532:12;:10;:12::i;:::-;2498:47:::0;;27:10:-1;;39:1:::1;23:18:::0;;::::1;45:23:::0;;-1:-1;2467:79:48;;;::::1;::::0;;;;;::::1;::::0;;::::1;;::::0;;;;;::::1;::::0;;::::1;::::0;2576:10:::1;2556:31:::0;;:19:::1;:31:::0;;;;;;2593:50;;;;::::1;::::0;;2605:11:::1;:23:::0;;;;;;;2593:50;;;;::::1;2630:12;:10;:12::i;:::-;2593:50:::0;;27:10:-1;;39:1:::1;23:18:::0;;::::1;45:23:::0;;-1:-1;2556:88:48;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;;;;;;::::1;::::0;;::::1;::::0;2669:14:::1;:12;:14::i;:::-;2156:535:::0;:::o;3121:81:54:-;3186:9;;;;3121:81;:::o;5593:215::-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:54;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:54;;;:34;;;;;;;;;;;:50;:38;:50;:::i;2203:134:47:-;905:4;;-1:-1:-1;;;;;905:4:47;883:10;:27;875:36;;;;;;2286:44:::1;636:2;2319;2323:6;2286:9;:44::i;:::-;2203:134:::0;;:::o;1269:237::-;1342:4;1328:10;1323:23;1315:61;;;;-1:-1:-1;;;1315:61:47;;;;;;;;;1419:6;1394:21;1404:10;1394:9;:21::i;:::-;:31;;1386:78;;;;-1:-1:-1;;;1386:78:47;;;;;;;;;1474:25;1480:10;1492:6;1474:5;:25::i;1799:154::-;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;1874:4:47::1;:30:::0;;-1:-1:-1;;;;;;1874:30:47::1;-1:-1:-1::0;;;;;1874:30:47;::::1;;::::0;;1919:27:::1;::::0;::::1;::::0;::::1;::::0;1874:30;;1919:27:::1;;;;;;;;;;1799:154:::0;:::o;2059:138::-;905:4;;-1:-1:-1;;;;;905:4:47;883:10;:27;875:36;;;;;;2144:46:::1;2154:4;636:2;2183:6;2144:9;:46::i;720:124:48:-:0;805:25;:32;720:124;:::o;1512:113:46:-;1594:17;:24;1512:113;:::o;1185:91::-;1259:10;;1185:91;:::o;1320:336:48:-;-1:-1:-1;;;;;1466:25:48;;1403:10;1466:25;;;:19;:25;;;;;:32;1403:10;;1458:40;;1449:90;;;;-1:-1:-1;;;1449:90:48;;;;;;;;;-1:-1:-1;;;;;1557:25:48;;;;;;:19;:25;;;;;:32;;1583:5;;1557:32;;;;;;;;;;;;;;;;:38;;;1549:46;;1612:19;:25;1632:4;-1:-1:-1;;;;;1612:25:48;-1:-1:-1;;;;;1612:25:48;;;;;;;;;;;;1638:5;1612:32;;;;;;;;;;;;;;;;;;:37;;;1605:44;;1320:336;;;;;:::o;2697:672::-;859:1:46;838:18;;:22;:60;;;;;886:12;:10;:12::i;:::-;864:18;;:34;;838:60;830:102;;;;-1:-1:-1;;;830:102:46;;;;;;;;;2768:8:48::1;::::0;-1:-1:-1;;;;;2768:8:48::1;2752:90;;;;-1:-1:-1::0;;;2752:90:48::1;;;;;;;;;2875:8;::::0;:29:::1;::::0;-1:-1:-1;;;2875:29:48;;2861:11:::1;::::0;-1:-1:-1;;;;;2875:8:48::1;::::0;:17:::1;::::0;:29:::1;::::0;2893:10:::1;::::0;2875:29:::1;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;2875:29:48;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2875:29:48;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2875:29:48;;;;;;;;;2861:43;;2932:1;2923:6;:10;2915:19;;;::::0;::::1;;2945:24;:22;:24::i;:::-;3001:14;::::0;2979:45:::1;::::0;2997:1:::1;::::0;3001:14:::1;::::0;::::1;-1:-1:-1::0;;;;;3001:14:48::1;3017:6:::0;2979:9:::1;:45::i;:::-;3081:10;3069:23;::::0;;;:11:::1;:23;::::0;;;;;:35:::1;::::0;3097:6;3069:35:::1;:27;:35;:::i;956:108:46:-:0;1039:18;;956:108;:::o;496:115:48:-;-1:-1:-1;;;;;584:20:48;561:4;584:20;;;:11;:20;;;;;;;496:115::o;1040:76:58:-;1102:7;;-1:-1:-1;;;1102:7:58;;;;;1040:76::o;850:329:48:-;989:25;:32;926:10;;;;981:40;;972:90;;;;-1:-1:-1;;;972:90:48;;;;;;;;;1080:25;1106:5;1080:32;;;;;;;;;;;;;;;;;;:38;;;1072:46;;1135:25;1161:5;1135:32;;;;;;;;;;;;;;;;;;:37;;;1128:44;;850:329;;;:::o;2587:102:46:-;1012:8:47;;-1:-1:-1;;;;;1012:8:47;990:10;:31;;:62;;-1:-1:-1;1047:4:47;;-1:-1:-1;;;;;1047:4:47;1025:10;:27;990:62;982:71;;;;;;2658:24:46::1;:22;:24::i;:::-;2587:102::o:0;480:22:47:-;;;;:::o;3418:117:54:-;-1:-1:-1;;;;;3510:18:54;3484:7;3510:18;;;;;;;;;;;;3418:117::o;1689:145:51:-;1280:12;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;1779:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1779:6:51::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:51::1;::::0;;1689:145::o;1512:173:47:-;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;1592:8:47::1;:39:::0;;-1:-1:-1;;;;;;1592:39:47::1;-1:-1:-1::0;;;;;1592:39:47;::::1;;::::0;;1646:32:::1;::::0;::::1;::::0;::::1;::::0;1592:39;;1646:32:::1;;1185:129:48::0;-1:-1:-1;;;;;1275:25:48;1252:4;1275:25;;;:19;:25;;;;;:32;;1185:129::o;1066:77:51:-;1130:6;;;;;-1:-1:-1;;;;;1130:6:51;;1066:77::o;2413:85:54:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;6295:266;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:54;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:54;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;1662:488:48:-;859:1:46;838:18;;:22;:60;;;;;886:12;:10;:12::i;:::-;864:18;;:34;;838:60;830:102;;;;-1:-1:-1;;;830:102:46;;;;;;;;;1734:24:48::1;:22;:24::i;:::-;1791:14;::::0;1769:45:::1;::::0;1779:10:::1;::::0;1791:14:::1;::::0;::::1;-1:-1:-1::0;;;;;1791:14:48::1;1807:6:::0;1769:9:::1;:45::i;3738:172:54:-:0;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;3221:512:46:-;905:4:47;;-1:-1:-1;;;;;905:4:47;883:10;:27;875:36;;;;;;3318:2:46::1;3311:3;:9;;:22;;;;;3331:2;3324:3;:9;;3311:22;3303:73;;;;-1:-1:-1::0;;;3303:73:46::1;;;;;;;;;3395:32;;:::i;:::-;3430:17;3448:24:::0;;-1:-1:-1;;3448:28:46;;;3430:47;::::1;;;;;;;;;;;;;;;3395:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3487:14;3519:9;:14;;;3504:12;:10;:12::i;:::-;:29;3487:46;;3564:7;3551:9;:20;;3543:77;;;;-1:-1:-1::0;;;3543:77:46::1;;;;;;;;;3631:24;:22;:24::i;:::-;3665:19;3680:3;3665:14;:19::i;:::-;3713:7;3699:27;3722:3;3699:27;;;;;;;;;;;;;;;921:1:47;;3221:512:46::0;;:::o;254:44:48:-;;;;;;;;;;;;;:::o;2695:520:46:-;905:4:47;;-1:-1:-1;;;;;905:4:47;883:10;:27;875:36;;;;;;2794:3:46::1;2787;:10;;:25;;;;;2808:4;2801:3;:11;;2787:25;2779:75;;;;-1:-1:-1::0;;;2779:75:46::1;;;;;;;;;2873:32;;:::i;:::-;2908:17;2926:24:::0;;-1:-1:-1;;2926:28:46;;;2908:47;::::1;;;;;;;;;;;;;;;2873:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2965:14;2997:9;:14;;;2982:12;:10;:12::i;:::-;:29;2965:46;;3042:7;3029:9;:20;;3021:77;;;;-1:-1:-1::0;;;3021:77:46::1;;;;;;;;;3109:24;:22;:24::i;:::-;3143:21;3160:3;3143:16;:21::i;:::-;3195:7;3179:29;3204:3;3179:29;;;;;;;497:122:24::0;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;576:36:24::1;594:4;601:2;605:6;576:9;:36::i;1966:447:46:-:0;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;2041:18:46::1;::::0;:23;;:60:::1;;;2089:12;:10;:12::i;:::-;2068:18;;:33;2041:60;2032:102;;;;-1:-1:-1::0;;;2032:102:46::1;;;;;;;;;2160:12;:10;:12::i;:::-;2153:4;:19;2144:68;;;;-1:-1:-1::0;;;2144:68:46::1;;;;;;;;;2222:18;:25:::0;;;2257:19:::1;:40:::0;;;2307:17:::1;:20:::0;;2243:4;;2307:17;-1:-1:-1;;2307:20:46::1;;;;;;;;;;;;;;:25;;:47;;;;2369:37;2387:18;;2369:37;;;;;;;617:97:48::0;664:4;687:20;:18;:20::i;:::-;680:27;;617:97;:::o;3968:149:54:-;-1:-1:-1;;;;;4083:18:54;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;1282:224:46:-;1345:22;;:::i;:::-;1395:17;:24;1387:32;;1379:79;;;;-1:-1:-1;;;1379:79:46;;;;;;;;;1475:17;1493:5;1475:24;;;;;;;;;;;;;;;;;;1468:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:224;;;:::o;1983:240:51:-;1280:12;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;-1:-1:-1;;;;;2071:22:51;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:51::1;;;;;;;;;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:51;;::::1;::::0;2172:6:::1;::::0;::::1;;::::0;2151:38:::1;::::0;;;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;2199:17:51;;::::1;;;-1:-1:-1::0;;;;;;2199:17:51;;::::1;::::0;;;::::1;::::0;;1983:240::o;2419:162:46:-;1012:8:47;;-1:-1:-1;;;;;1012:8:47;990:10;:31;;:62;;-1:-1:-1;1047:4:47;;-1:-1:-1;;;;;1047:4:47;1025:10;:27;990:62;982:71;;;;;;2507:24:46::1;:22;:24::i;:::-;2541:33;2559:1;2563:2;2567:6;2541:9;:33::i;1180:83:47:-:0;1246:10;;1180:83;:::o;1631:329:46:-;1280:12:51;:10;:12::i;:::-;1270:6;;;;;-1:-1:-1;;;;;1270:6:51;;;:22;;;1262:67;;;;-1:-1:-1;;;1262:67:51;;;;;;;;;1695:18:46::1;::::0;:23;1686:65:::1;;;;-1:-1:-1::0;;;1686:65:46::1;;;;;;;;;1782:12;:10;:12::i;:::-;1761:18;:33:::0;;;1804:19:::1;:40:::0;;;1854:17:::1;:20:::0;;-1:-1:-1;;1854:20:46::1;;;;;;;;;;;;;;:25;;:47;;;;1916:37;1934:18;;1916:37;;;;;;;;;;;;;;;1631:329::o:0;1691:102:47:-;1777:8;;-1:-1:-1;;;;;1777:8:47;1691:102;:::o;590:104:49:-;677:10;590:104;:::o;9357:340:54:-;-1:-1:-1;;;;;9458:19:54;;9450:68;;;;-1:-1:-1;;;9450:68:54;;;;;;;;;-1:-1:-1;;;;;9536:21:54;;9528:68;;;;-1:-1:-1;;;9528:68:54;;;;;;;;;-1:-1:-1;;;;;9607:18:54;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9658:32;;;;;9637:6;;9658:32;;;;;;;;;;9357:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:54;;7132:70;;;;-1:-1:-1;;;7132:70:54;;;;;;;;;-1:-1:-1;;;;;7220:23:54;;7212:71;;;;-1:-1:-1;;;7212:71:54;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:54;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7352:17:54;;;:9;:17;;;;;;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7453:20:54;;;:9;:20;;;;;;;;;;;;:55;;;;7523:35;;;;;;;;;;7551:6;;7523:35;;1746:187:53;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:53;;;;;;;;;;-1:-1:-1;;;1902:5:53;;;1746:187::o;2654:98:47:-;2730:15;2654:98;:::o;5049:1640:46:-;5120:15;;5106:10;;:29;5102:42;;5137:7;;5102:42;5154:14;5186:19;;5171:12;:10;:12::i;:::-;:34;5154:51;;5231:8;5219:9;:20;5215:33;;;5241:7;;;5215:33;5258:32;;:::i;:::-;5293:17;5311:24;;-1:-1:-1;;5311:28:46;;;5293:47;;;;;;;;;;;;;;5258:82;;;;;;;;5293:47;;;;;;;5258:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5258:82:46;5395:1241;5428:8;5416:9;:20;5412:1;:24;5395:1241;;;5480:8;5457:19;;:31;;;;;;;;;;;5502:17;5603:5;5592:8;5574:9;:14;;;5552:19;;:36;5544:4;5522:19;;:26;:67;:78;;;;;;:86;;;;;;5502:106;;5639:19;;5622:9;:14;;:36;;;;;5710:10;;5691:15;;5676:12;:30;:44;;:58;;;;5731:3;5724:4;:10;5676:58;5672:953;;;5772:10;;5754:15;:28;;;;5800:17;5823:108;;;;;;;;5839:14;:12;:14::i;:::-;5823:108;;;5855:20;;;;5823:108;;;;5877:15;;5823:108;;;;;;;;;;;;;;;5911:19;;5823:108;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;5800:132:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5972:17;:24;5955:46;;;;;;-1:-1:-1;;5972:28:46;;;;;5955:46;;;;;;;;;;6019:5;;;5672:953;6063:15;:31;;;;;;6123:3;6116:10;;6112:290;;;6158:2;6150:10;;;;6212:3;6205:4;:10;6201:26;;;6224:3;6217:10;;6201:26;6112:290;;;6273:4;6281:3;6273:11;6269:133;;;6308:9;6320:14;:12;:14::i;:::-;6308:26;;6367:3;6360:4;:10;6356:27;;;6379:4;6372:11;;6356:27;6269:133;;6442:98;;;;;;;;;;;;6464:20;;;;6442:98;;;;;;6486:15;;6442:98;;;;;;;;;;;;6520:19;;6442:98;;;;;;6419:17;27:10:-1;;39:1;23:18;;45:23;;-1:-1;6419:122:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6581:24;6564:46;;;;;;-1:-1:-1;;6581:28:46;;;;;6564:46;;;;;;;;;;-1:-1:-1;5438:3:46;;5395:1241;;;-1:-1:-1;;6667:15:46;;6645:19;:37;-1:-1:-1;;5049:1640:46:o;1321:134:53:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1398:50;1321:134;-1:-1:-1;;;1321:134:53:o;3819:107:48:-;3904:14;;3871:4;;3894:25;;3904:14;;;-1:-1:-1;;;;;3904:14:48;3894:9;:25::i;3375:250::-;3438:4;;-1:-1:-1;;;;;3438:4:48;3430:27;3426:87;;3473:4;;:29;;-1:-1:-1;;;3473:29:48;;-1:-1:-1;;;;;3473:4:48;;;;:17;;:29;;3491:10;;3473:29;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3473:29:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3473:29:48;;;;3426:87;3534:8;;-1:-1:-1;;;;;3534:8:48;3526:31;3522:97;;3573:8;;:35;;-1:-1:-1;;;3573:35:48;;-1:-1:-1;;;;;3573:8:48;;;;:23;;:35;;3597:10;;3573:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3573:35:48;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3573:35:48;;;;3375:250::o;874:176:53:-;932:7;963:5;;;986:6;;;;978:46;;;;-1:-1:-1;;;978:46:53;;;;;;;;8524:410:54;-1:-1:-1;;;;;8607:21:54;;8599:67;;;;-1:-1:-1;;;8599:67:54;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:54;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;8737:18:54;;:9;:18;;;;;;;;;;:89;8851:12;;:24;;8868:6;8851:24;:16;:24;:::i;:::-;8836:12;:39;8890:37;;8916:1;;-1:-1:-1;;;;;8890:37:54;;;;;;;8920:6;;8890:37;;;;;;;;;;8524:410;;:::o;4426:617:46:-;4501:15;;4487:10;;:29;;4479:38;;;;;;4528:32;;:::i;:::-;4563:17;4581:24;;-1:-1:-1;;4581:28:46;;;4563:47;;;;;;;;;;;;;;;;4528:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4620:14;4652:9;:14;;;4637:12;:10;:12::i;:::-;:29;4620:46;;4766:5;4755:8;4743:9;4718;:22;;;4696:19;;:44;:56;:67;;;;;;:75;;;;;;4677:15;;:94;;;;;;;;;;;4808:10;;4790:15;;:28;4782:62;;;;-1:-1:-1;;;4782:62:46;;;;;;;;;4855:17;4878:96;;;;;;;;4894:9;:22;;;4878:96;;;;4918:3;4878:96;;;;4923:15;;4878:96;;;;4940:19;;4878:96;;;;4961:12;:10;:12::i;:::-;4878:96;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;4855:120:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5007:17;:24;4990:46;;;;;;-1:-1:-1;;5007:28:46;;;;;4990:46;;;;;;;;;;4426:617;;;:::o;3739:681::-;3816:15;;3802:10;;:29;;3794:38;;;;;;3843:32;;:::i;:::-;3878:17;3896:24;;-1:-1:-1;;3896:28:46;;;3878:47;;;;;;;;;;;;;;;;3843:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3935:14;3967:9;:14;;;3952:12;:10;:12::i;:::-;:29;3935:46;;4081:5;4070:8;4058:9;4033;:22;;;4011:19;;:44;:56;:67;;;;;;:75;;;;;;3992:15;;:94;;;;;;;;;;;4123:10;;4105:15;;:28;4097:62;;;;-1:-1:-1;;;4097:62:46;;;;;;;;;4185:14;:12;:14::i;:::-;4178:3;:21;;4170:53;;;;-1:-1:-1;;;4170:53:46;;;;;;;;;4234:17;4257:94;;;;;;;;4273:3;4257:94;;;;4278:9;:20;;;4257:94;;;;4300:15;;4257:94;;;;4317:19;;4257:94;;;;4338:12;:10;:12::i;2343:305:47:-;2451:44;2478:4;2484:2;2488:6;2451:26;:44::i;:::-;2533:4;2519:10;2514:23;2506:61;;;;-1:-1:-1;;;2506:61:47;;;;;;;;;2586:8;:6;:8::i;:::-;2585:9;2577:64;;;;-1:-1:-1;;;2577:64:47;;;;;;;;;2343:305;;;:::o;7227:132:46:-;7273:4;7337:15;;7310;;7297:10;;:28;7329:5;7296:38;:56;;;;;;7289:63;;7227:132;:::o;138:484:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;-1:-1;;;;;24810:54;;25863:35;;25853:2;;25912:1;;25902:12;420:241;;524:2;512:9;503:7;499:23;495:32;492:2;;;-1:-1;;530:12;492:2;592:53;637:7;613:22;592:53;;668:366;;;789:2;777:9;768:7;764:23;760:32;757:2;;;-1:-1;;795:12;757:2;857:53;902:7;878:22;857:53;;;847:63;;965:53;1010:7;947:2;990:9;986:22;965:53;;;955:63;;751:283;;;;;;1041:491;;;;1179:2;1167:9;1158:7;1154:23;1150:32;1147:2;;;-1:-1;;1185:12;1147:2;85:6;72:20;97:33;124:5;97:33;;;1237:63;-1:-1;1337:2;1376:22;;72:20;97:33;72:20;97:33;;;1141:391;;1345:63;;-1:-1;;;1445:2;1484:22;;;;209:20;;1141:391;1539:366;;;1660:2;1648:9;1639:7;1635:23;1631:32;1628:2;;;-1:-1;;1666:12;1628:2;1728:53;1773:7;1749:22;1728:53;;;1718:63;1818:2;1857:22;;;;209:20;;-1:-1;;;1622:283;1912:241;;2016:2;2004:9;1995:7;1991:23;1987:32;1984:2;;;-1:-1;;2022:12;1984:2;-1:-1;209:20;;1978:175;-1:-1;1978:175;2160:263;;2275:2;2263:9;2254:7;2250:23;2246:32;2243:2;;;-1:-1;;2281:12;2243:2;-1:-1;357:13;;2237:186;-1:-1;2237:186;2430:366;;;2551:2;2539:9;2530:7;2526:23;2522:32;2519:2;;;-1:-1;;2557:12;2519:2;-1:-1;;209:20;;;2709:2;2748:22;;;209:20;;-1:-1;2513:283;13057:213;-1:-1;;;;;24810:54;;;;3023:37;;13175:2;13160:18;;13146:124;13513:201;24722:13;;24715:21;3137:34;;13625:2;13610:18;;13596:118;13721:301;;13859:2;;13880:17;13873:47;3328:5;24345:12;24502:6;13859:2;13848:9;13844:18;24490:19;-1:-1;25495:101;25509:6;25506:1;25503:13;25495:101;;;25576:11;;;;;25570:18;25557:11;;;24530:14;25557:11;25550:39;25524:10;;25495:101;;;25611:6;25608:1;25605:13;25602:2;;;-1:-1;24530:14;25667:6;13848:9;25658:16;;25651:27;25602:2;-1:-1;25783:7;25767:14;-1:-1;;25763:28;3486:39;;;;24530:14;3486:39;;13830:192;-1:-1;;;13830:192;14029:407;14220:2;14234:47;;;3762:2;14205:18;;;24490:19;3798:34;24530:14;;;3778:55;-1:-1;;;3853:12;;;3846:38;3903:12;;;14191:245;14443:407;14634:2;14648:47;;;4154:2;14619:18;;;24490:19;4190:34;24530:14;;;4170:55;-1:-1;;;4245:12;;;4238:27;4284:12;;;14605:245;14857:407;15048:2;15062:47;;;4535:2;15033:18;;;24490:19;4571:34;24530:14;;;4551:55;-1:-1;;;4626:12;;;4619:27;4665:12;;;15019:245;15271:407;15462:2;15476:47;;;4916:2;15447:18;;;24490:19;-1:-1;;;24530:14;;;4932:44;4995:12;;;15433:245;15685:407;15876:2;15890:47;;;5246:2;15861:18;;;24490:19;5282:34;24530:14;;;5262:55;-1:-1;;;5337:12;;;5330:26;5375:12;;;15847:245;16099:407;16290:2;16304:47;;;5626:2;16275:18;;;24490:19;5662:34;24530:14;;;5642:55;-1:-1;;;5717:12;;;5710:30;5759:12;;;16261:245;16513:407;16704:2;16718:47;;;6010:2;16689:18;;;24490:19;6046:34;24530:14;;;6026:55;-1:-1;;;6101:12;;;6094:26;6139:12;;;16675:245;16927:407;17118:2;17132:47;;;6390:2;17103:18;;;24490:19;6426:29;24530:14;;;6406:50;6475:12;;;17089:245;17341:407;17532:2;17546:47;;;6726:2;17517:18;;;24490:19;6762:34;24530:14;;;6742:55;-1:-1;;;6817:12;;;6810:26;6855:12;;;17503:245;17755:407;17946:2;17960:47;;;7106:2;17931:18;;;24490:19;7142:34;24530:14;;;7122:55;-1:-1;;;7197:12;;;7190:28;7237:12;;;17917:245;18169:407;18360:2;18374:47;;;7488:2;18345:18;;;24490:19;7524:34;24530:14;;;7504:55;-1:-1;;;7579:12;;;7572:29;7620:12;;;18331:245;18583:407;18774:2;18788:47;;;7871:2;18759:18;;;24490:19;7907:31;24530:14;;;7887:52;7958:12;;;18745:245;18997:407;19188:2;19202:47;;;19173:18;;;24490:19;8245:34;24530:14;;;8225:55;8299:12;;;19159:245;19411:407;19602:2;19616:47;;;8550:2;19587:18;;;24490:19;8586:27;24530:14;;;8566:48;8633:12;;;19573:245;19825:407;20016:2;20030:47;;;8884:2;20001:18;;;24490:19;8920:34;24530:14;;;8900:55;-1:-1;;;8975:12;;;8968:25;9012:12;;;19987:245;20239:407;20430:2;20444:47;;;9263:2;20415:18;;;24490:19;9299:34;24530:14;;;9279:55;-1:-1;;;9354:12;;;9347:29;9395:12;;;20401:245;20653:407;20844:2;20858:47;;;9646:2;20829:18;;;24490:19;9682:30;24530:14;;;9662:51;9732:12;;;20815:245;21067:407;21258:2;21272:47;;;9983:2;21243:18;;;24490:19;10019:34;24530:14;;;9999:55;-1:-1;;;10074:12;;;10067:28;10114:12;;;21229:245;21481:407;21672:2;21686:47;;;10365:2;21657:18;;;24490:19;-1:-1;;;24530:14;;;10381:42;10442:12;;;21643:245;21895:407;22086:2;22100:47;;;10693:2;22071:18;;;24490:19;10729:34;24530:14;;;10709:55;-1:-1;;;10784:12;;;10777:30;10826:12;;;22057:245;22309:407;22500:2;22514:47;;;11077:2;22485:18;;;24490:19;11113:34;24530:14;;;11093:55;-1:-1;;;11168:12;;;11161:36;11216:12;;;22471:245;22723:407;22914:2;22928:47;;;11467:2;22899:18;;;24490:19;11503:34;24530:14;;;11483:55;-1:-1;;;11558:12;;;11551:34;11604:12;;;22885:245;23137:350;;23323:3;23312:9;23308:19;23300:27;;11960:16;11954:23;12781:3;12774:37;12131:4;12124:5;12120:16;12114:23;12131:4;12195:3;12191:14;12774:37;12294:4;12287:5;12283:16;12277:23;12294:4;12358:3;12354:14;12774:37;12456:4;12449:5;12445:16;12439:23;12456:4;12520:3;12516:14;12774:37;12610:4;12603:5;12599:16;12593:23;12610:4;12674:3;12670:14;12774:37;23294:193;;;;;23494:213;12774:37;;;23612:2;23597:18;;23583:124;23714:324;12774:37;;;24024:2;24009:18;;12774:37;23860:2;23845:18;;23831:207;24045:205;25026:4;25015:16;;;;13010:35;;24159:2;24144:18;;24130:120;25804:117;-1:-1;;;;;24810:54;;25863:35;;25853:2;;25912:1;;25902:12;25847:74;2238:7:53;2479:6;2475:45;;-1:-1:-1;2508:1:53;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:53;;575:2:-1;2557:56:53;;;589:47:-1;230:2;560:18;;;902:19;266:34;942:14;;;246:55;-1:-1;;;321:12;;;314:25;358:12;;2557:56:53;546:245:-1",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.6.2;\npragma experimental ABIEncoderV2;\n\n\nimport \"./Token/CitadelTokenLocker.sol\";\n\n\ncontract Citadel is CitadelTokenLocker {\n\n    constructor ()\n    public {\n        // mint inflation\n        uint inflation = uint(500000000).mul(1e6);\n        _mint(address(1), inflation);\n\n        _initInflation(inflation, inflation, 800, 40);\n\n        _initCitadelTokenLocker(address(2));\n\n        _mint(address(this), uint(500000000).mul(1e6));\n    }\n\n    function delegateTokens (address to, uint amount) external onlyOwner {\n        _transfer(address(this), to, amount);\n    }\n\n}\n",
  "sourcePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/Citadel.sol",
  "ast": {
    "absolutePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/Citadel.sol",
    "exportedSymbols": {
      "Citadel": [
        8367
      ]
    },
    "id": 8368,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8293,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:24"
      },
      {
        "id": 8294,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:24"
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/Token/CitadelTokenLocker.sol",
        "file": "./Token/CitadelTokenLocker.sol",
        "id": 8295,
        "nodeType": "ImportDirective",
        "scope": 8368,
        "sourceUnit": 17568,
        "src": "95:40:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8296,
              "name": "CitadelTokenLocker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17567,
              "src": "158:18:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CitadelTokenLocker_$17567",
                "typeString": "contract CitadelTokenLocker"
              }
            },
            "id": 8297,
            "nodeType": "InheritanceSpecifier",
            "src": "158:18:24"
          }
        ],
        "contractDependencies": [
          16862,
          17139,
          17567,
          17590,
          17963,
          18733,
          18802,
          19450
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8367,
        "linearizedBaseContracts": [
          8367,
          17567,
          16862,
          17139,
          19450,
          17963,
          18733,
          18802,
          17590
        ],
        "name": "Citadel",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8346,
              "nodeType": "Block",
              "src": "210:281:24",
              "statements": [
                {
                  "assignments": [
                    8301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8301,
                      "name": "inflation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 8346,
                      "src": "246:14:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8300,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "246:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8309,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "316536",
                        "id": 8307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "283:3:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "353030303030303030",
                            "id": 8304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "268:9:24",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            },
                            "value": "500000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            }
                          ],
                          "id": 8303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "263:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 8302,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "263:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "263:15:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18162,
                      "src": "263:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "263:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "246:41:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 8313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "311:1:24",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 8312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "303:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8311,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "303:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "303:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8315,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8301,
                        "src": "315:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8310,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18613,
                      "src": "297:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "297:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8317,
                  "nodeType": "ExpressionStatement",
                  "src": "297:28:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8319,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8301,
                        "src": "351:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8320,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8301,
                        "src": "362:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "383030",
                        "id": 8321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "373:3:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3430",
                        "id": 8322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "378:2:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        }
                      ],
                      "id": 8318,
                      "name": "_initInflation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16846,
                      "src": "336:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8324,
                  "nodeType": "ExpressionStatement",
                  "src": "336:45:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 8328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "424:1:24",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 8327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "416:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8326,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "416:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "416:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8325,
                      "name": "_initCitadelTokenLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17556,
                      "src": "392:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "392:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8331,
                  "nodeType": "ExpressionStatement",
                  "src": "392:35:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8335,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "452:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Citadel_$8367",
                              "typeString": "contract Citadel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Citadel_$8367",
                              "typeString": "contract Citadel"
                            }
                          ],
                          "id": 8334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "444:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "444:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "444:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "316536",
                            "id": 8342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "479:3:24",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "353030303030303030",
                                "id": 8339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "464:9:24",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                },
                                "value": "500000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                }
                              ],
                              "id": 8338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "459:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 8337,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "459:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 8340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "459:15:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18162,
                          "src": "459:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "459:24:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8332,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18613,
                      "src": "438:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:46:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8345,
                  "nodeType": "ExpressionStatement",
                  "src": "438:46:24"
                }
              ]
            },
            "documentation": null,
            "id": 8347,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "196:2:24"
            },
            "returnParameters": {
              "id": 8299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "210:0:24"
            },
            "scope": 8367,
            "src": "184:307:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8365,
              "nodeType": "Block",
              "src": "566:53:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8359,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "594:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Citadel_$8367",
                              "typeString": "contract Citadel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Citadel_$8367",
                              "typeString": "contract Citadel"
                            }
                          ],
                          "id": 8358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "586:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8357,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "586:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "586:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8361,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8349,
                        "src": "601:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8362,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8351,
                        "src": "605:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8356,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18559,
                      "src": "576:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "576:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8364,
                  "nodeType": "ExpressionStatement",
                  "src": "576:36:24"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c2ad5b74",
            "id": 8366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8354,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8353,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17914,
                  "src": "556:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "556:9:24"
              }
            ],
            "name": "delegateTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8349,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8366,
                  "src": "522:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8351,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8366,
                  "src": "534:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8350,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "521:25:24"
            },
            "returnParameters": {
              "id": 8355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:24"
            },
            "scope": 8367,
            "src": "497:122:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8368,
        "src": "138:484:24"
      }
    ],
    "src": "36:587:24"
  },
  "legacyAST": {
    "absolutePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/Citadel.sol",
    "exportedSymbols": {
      "Citadel": [
        8367
      ]
    },
    "id": 8368,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8293,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:22:24"
      },
      {
        "id": 8294,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:24"
      },
      {
        "absolutePath": "/home/pirat/Desktop/DAO_update/DAO/contracts/Token/CitadelTokenLocker.sol",
        "file": "./Token/CitadelTokenLocker.sol",
        "id": 8295,
        "nodeType": "ImportDirective",
        "scope": 8368,
        "sourceUnit": 17568,
        "src": "95:40:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8296,
              "name": "CitadelTokenLocker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17567,
              "src": "158:18:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CitadelTokenLocker_$17567",
                "typeString": "contract CitadelTokenLocker"
              }
            },
            "id": 8297,
            "nodeType": "InheritanceSpecifier",
            "src": "158:18:24"
          }
        ],
        "contractDependencies": [
          16862,
          17139,
          17567,
          17590,
          17963,
          18733,
          18802,
          19450
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8367,
        "linearizedBaseContracts": [
          8367,
          17567,
          16862,
          17139,
          19450,
          17963,
          18733,
          18802,
          17590
        ],
        "name": "Citadel",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8346,
              "nodeType": "Block",
              "src": "210:281:24",
              "statements": [
                {
                  "assignments": [
                    8301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8301,
                      "name": "inflation",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 8346,
                      "src": "246:14:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8300,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "246:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 8309,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "316536",
                        "id": 8307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "283:3:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "353030303030303030",
                            "id": 8304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "268:9:24",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            },
                            "value": "500000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_500000000_by_1",
                              "typeString": "int_const 500000000"
                            }
                          ],
                          "id": 8303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "263:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 8302,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "263:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "263:15:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 8306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18162,
                      "src": "263:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 8308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "263:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "246:41:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 8313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "311:1:24",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 8312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "303:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8311,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "303:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "303:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8315,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8301,
                        "src": "315:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8310,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18613,
                      "src": "297:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "297:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8317,
                  "nodeType": "ExpressionStatement",
                  "src": "297:28:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8319,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8301,
                        "src": "351:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8320,
                        "name": "inflation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8301,
                        "src": "362:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "383030",
                        "id": 8321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "373:3:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        "value": "800"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3430",
                        "id": 8322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "378:2:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800_by_1",
                          "typeString": "int_const 800"
                        },
                        {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        }
                      ],
                      "id": 8318,
                      "name": "_initInflation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16846,
                      "src": "336:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 8323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "336:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8324,
                  "nodeType": "ExpressionStatement",
                  "src": "336:45:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 8328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "424:1:24",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 8327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "416:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8326,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "416:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "416:10:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8325,
                      "name": "_initCitadelTokenLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17556,
                      "src": "392:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "392:35:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8331,
                  "nodeType": "ExpressionStatement",
                  "src": "392:35:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8335,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "452:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Citadel_$8367",
                              "typeString": "contract Citadel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Citadel_$8367",
                              "typeString": "contract Citadel"
                            }
                          ],
                          "id": 8334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "444:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "444:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "444:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "316536",
                            "id": 8342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "479:3:24",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "353030303030303030",
                                "id": 8339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "464:9:24",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                },
                                "value": "500000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_500000000_by_1",
                                  "typeString": "int_const 500000000"
                                }
                              ],
                              "id": 8338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "459:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 8337,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "459:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 8340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "459:15:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 8341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18162,
                          "src": "459:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "459:24:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8332,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18613,
                      "src": "438:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:46:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8345,
                  "nodeType": "ExpressionStatement",
                  "src": "438:46:24"
                }
              ]
            },
            "documentation": null,
            "id": 8347,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "196:2:24"
            },
            "returnParameters": {
              "id": 8299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "210:0:24"
            },
            "scope": 8367,
            "src": "184:307:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8365,
              "nodeType": "Block",
              "src": "566:53:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8359,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "594:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Citadel_$8367",
                              "typeString": "contract Citadel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Citadel_$8367",
                              "typeString": "contract Citadel"
                            }
                          ],
                          "id": 8358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "586:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8357,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "586:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 8360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "586:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8361,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8349,
                        "src": "601:2:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8362,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8351,
                        "src": "605:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8356,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18559,
                      "src": "576:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "576:36:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8364,
                  "nodeType": "ExpressionStatement",
                  "src": "576:36:24"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c2ad5b74",
            "id": 8366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8354,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8353,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17914,
                  "src": "556:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "556:9:24"
              }
            ],
            "name": "delegateTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 8352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8349,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8366,
                  "src": "522:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8351,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8366,
                  "src": "534:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8350,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "521:25:24"
            },
            "returnParameters": {
              "id": 8355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "566:0:24"
            },
            "scope": 8367,
            "src": "497:122:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8368,
        "src": "138:484:24"
      }
    ],
    "src": "36:587:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2021-08-16T15:52:52.393Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}